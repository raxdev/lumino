{"version":3,"file":"index.js","sources":["../src/json.ts","../src/mime.ts","../src/promise.ts","../src/random.ts","../src/token.ts","../src/uuid.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n\r\n/**\r\n * A type alias for a JSON primitive.\r\n */\r\nexport\r\ntype JSONPrimitive = boolean | number | string | null;\r\n\r\n\r\n/**\r\n * A type alias for a JSON value.\r\n */\r\nexport\r\ntype JSONValue = JSONPrimitive | JSONObject | JSONArray;\r\n\r\n\r\n/**\r\n * A type definition for a JSON object.\r\n */\r\nexport\r\ninterface JSONObject { [key: string]: JSONValue; }\r\n\r\n\r\n/**\r\n * A type definition for a JSON array.\r\n */\r\nexport\r\ninterface JSONArray extends Array<JSONValue> { }\r\n\r\n\r\n/**\r\n * A type definition for a readonly JSON object.\r\n */\r\nexport\r\ninterface ReadonlyJSONObject { readonly [key: string]: ReadonlyJSONValue; }\r\n\r\n\r\n/**\r\n * A type definition for a readonly JSON array.\r\n */\r\nexport\r\ninterface ReadonlyJSONArray extends ReadonlyArray<ReadonlyJSONValue> { }\r\n\r\n\r\n/**\r\n * A type alias for a readonly JSON value.\r\n */\r\nexport\r\ntype ReadonlyJSONValue = JSONPrimitive | ReadonlyJSONObject | ReadonlyJSONArray;\r\n\r\n\r\n/**\r\n * A type alias for a partial JSON value.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport\r\ntype PartialJSONValue = JSONPrimitive | PartialJSONObject | PartialJSONArray;\r\n\r\n\r\n/**\r\n * A type definition for a partial JSON object.\r\n *\r\n * Note: Partial here means that the JSON object attributes can be `undefined`.\r\n */\r\nexport\r\ninterface PartialJSONObject { [key: string]: PartialJSONValue | undefined; }\r\n\r\n\r\n/**\r\n * A type definition for a partial JSON array.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport\r\ninterface PartialJSONArray extends Array<PartialJSONValue> { }\r\n\r\n\r\n/**\r\n * A type definition for a readonly partial JSON object.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport\r\ninterface ReadonlyPartialJSONObject { readonly [key: string]: ReadonlyPartialJSONValue | undefined; }\r\n\r\n\r\n/**\r\n * A type definition for a readonly partial JSON array.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport\r\ninterface ReadonlyPartialJSONArray extends ReadonlyArray<ReadonlyPartialJSONValue> { }\r\n\r\n\r\n/**\r\n * A type alias for a readonly partial JSON value.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport\r\ntype ReadonlyPartialJSONValue = JSONPrimitive | ReadonlyPartialJSONObject | ReadonlyPartialJSONArray;\r\n\r\n\r\n/**\r\n * The namespace for JSON-specific functions.\r\n */\r\nexport\r\nnamespace JSONExt {\r\n  /**\r\n   * A shared frozen empty JSONObject\r\n   */\r\n  export\r\n  const emptyObject = Object.freeze({}) as ReadonlyJSONObject;\r\n\r\n  /**\r\n   * A shared frozen empty JSONArray\r\n   */\r\n  export\r\n  const emptyArray = Object.freeze([]) as ReadonlyJSONArray;\r\n\r\n  /**\r\n   * Test whether a JSON value is a primitive.\r\n   *\r\n   * @param value - The JSON value of interest.\r\n   *\r\n   * @returns `true` if the value is a primitive,`false` otherwise.\r\n   */\r\n  export\r\n  function isPrimitive(value: ReadonlyPartialJSONValue): value is JSONPrimitive {\r\n    return (\r\n      value === null ||\r\n      typeof value === 'boolean' ||\r\n      typeof value === 'number' ||\r\n      typeof value === 'string'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Test whether a JSON value is an array.\r\n   *\r\n   * @param value - The JSON value of interest.\r\n   *\r\n   * @returns `true` if the value is a an array, `false` otherwise.\r\n   */\r\n  export\r\n  function isArray(value: JSONValue): value is JSONArray;\r\n  export\r\n  function isArray(value: ReadonlyJSONValue): value is ReadonlyJSONArray;\r\n  export\r\n  function isArray(value: PartialJSONValue): value is PartialJSONArray;\r\n  export\r\n  function isArray(value: ReadonlyPartialJSONValue): value is ReadonlyPartialJSONArray;\r\n  export\r\n  function isArray(value: ReadonlyPartialJSONValue): boolean {\r\n    return Array.isArray(value);\r\n  }\r\n\r\n  /**\r\n   * Test whether a JSON value is an object.\r\n   *\r\n   * @param value - The JSON value of interest.\r\n   *\r\n   * @returns `true` if the value is a an object, `false` otherwise.\r\n   */\r\n  export\r\n  function isObject(value: JSONValue): value is JSONObject;\r\n  export\r\n  function isObject(value: ReadonlyJSONValue): value is ReadonlyJSONObject;\r\n  export\r\n  function isObject(value: PartialJSONValue): value is PartialJSONObject;\r\n  export\r\n  function isObject(value: ReadonlyPartialJSONValue): value is ReadonlyPartialJSONObject;\r\n  export\r\n  function isObject(value: ReadonlyPartialJSONValue): boolean {\r\n    return !isPrimitive(value) && !isArray(value);\r\n  }\r\n\r\n  /**\r\n   * Compare two JSON values for deep equality.\r\n   *\r\n   * @param first - The first JSON value of interest.\r\n   *\r\n   * @param second - The second JSON value of interest.\r\n   *\r\n   * @returns `true` if the values are equivalent, `false` otherwise.\r\n   */\r\n  export\r\n  function deepEqual(first: ReadonlyPartialJSONValue, second: ReadonlyPartialJSONValue): boolean {\r\n    // Check referential and primitive equality first.\r\n    if (first === second) {\r\n      return true;\r\n    }\r\n\r\n    // If one is a primitive, the `===` check ruled out the other.\r\n    if (isPrimitive(first) || isPrimitive(second)) {\r\n      return false;\r\n    }\r\n\r\n    // Test whether they are arrays.\r\n    let a1 = isArray(first);\r\n    let a2 = isArray(second);\r\n\r\n    // Bail if the types are different.\r\n    if (a1 !== a2) {\r\n      return false;\r\n    }\r\n\r\n    // If they are both arrays, compare them.\r\n    if (a1 && a2) {\r\n      return deepArrayEqual(first as ReadonlyPartialJSONArray, second as ReadonlyPartialJSONArray);\r\n    }\r\n\r\n    // At this point, they must both be objects.\r\n    return deepObjectEqual(first as ReadonlyPartialJSONObject, second as ReadonlyPartialJSONObject);\r\n  }\r\n\r\n  /**\r\n   * Create a deep copy of a JSON value.\r\n   *\r\n   * @param value - The JSON value to copy.\r\n   *\r\n   * @returns A deep copy of the given JSON value.\r\n   */\r\n  export\r\n  function deepCopy<T extends ReadonlyPartialJSONValue>(value: T): T {\r\n    // Do nothing for primitive values.\r\n    if (isPrimitive(value)) {\r\n      return value;\r\n    }\r\n\r\n    // Deep copy an array.\r\n    if (isArray(value)) {\r\n      return deepArrayCopy(value);\r\n    }\r\n\r\n    // Deep copy an object.\r\n    return deepObjectCopy(value);\r\n  }\r\n\r\n  /**\r\n   * Compare two JSON arrays for deep equality.\r\n   */\r\n  function deepArrayEqual(first: ReadonlyPartialJSONArray, second: ReadonlyPartialJSONArray): boolean {\r\n    // Check referential equality first.\r\n    if (first === second) {\r\n      return true;\r\n    }\r\n\r\n    // Test the arrays for equal length.\r\n    if (first.length !== second.length) {\r\n      return false;\r\n    }\r\n\r\n    // Compare the values for equality.\r\n    for (let i = 0, n = first.length; i < n; ++i) {\r\n      if (!deepEqual(first[i], second[i])) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // At this point, the arrays are equal.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Compare two JSON objects for deep equality.\r\n   */\r\n  function deepObjectEqual(first: ReadonlyPartialJSONObject, second: ReadonlyPartialJSONObject): boolean {\r\n    // Check referential equality first.\r\n    if (first === second) {\r\n      return true;\r\n    }\r\n\r\n    // Check for the first object's keys in the second object.\r\n    for (let key in first) {\r\n      if (first[key] !== undefined && !(key in second)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Check for the second object's keys in the first object.\r\n    for (let key in second) {\r\n      if (second[key] !== undefined && !(key in first)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Compare the values for equality.\r\n    for (let key in first) {\r\n      // Get the values.\r\n      let firstValue = first[key];\r\n      let secondValue = second[key];\r\n\r\n      // If both are undefined, ignore the key.\r\n      if (firstValue === undefined && secondValue === undefined) {\r\n        continue;\r\n      }\r\n\r\n      // If only one value is undefined, the objects are not equal.\r\n      if (firstValue === undefined || secondValue === undefined) {\r\n        return false;\r\n      }\r\n\r\n      // Compare the values.\r\n      if (!deepEqual(firstValue, secondValue)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // At this point, the objects are equal.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Create a deep copy of a JSON array.\r\n   */\r\n  function deepArrayCopy(value: any): any {\r\n    let result = new Array<any>(value.length);\r\n    for (let i = 0, n = value.length; i < n; ++i) {\r\n      result[i] = deepCopy(value[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create a deep copy of a JSON object.\r\n   */\r\n  function deepObjectCopy(value: any): any {\r\n    let result: any = {};\r\n    for (let key in value) {\r\n      // Ignore undefined values.\r\n      let subvalue = value[key];\r\n      if (subvalue === undefined) {\r\n        continue;\r\n      }\r\n      result[key] = deepCopy(subvalue);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n\r\n/**\r\n * An object which stores MIME data for general application use.\r\n *\r\n * #### Notes\r\n * This class does not attempt to enforce \"correctness\" of MIME types\r\n * and their associated data. Since this class is designed to transfer\r\n * arbitrary data and objects within the same application, it assumes\r\n * that the user provides correct and accurate data.\r\n */\r\nexport\r\nclass MimeData {\r\n  /**\r\n   * Get an array of the MIME types contained within the dataset.\r\n   *\r\n   * @returns A new array of the MIME types, in order of insertion.\r\n   */\r\n  types(): string[] {\r\n    return this._types.slice();\r\n  }\r\n\r\n  /**\r\n   * Test whether the dataset has an entry for the given type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * @returns `true` if the dataset contains a value for the given\r\n   *   MIME type, `false` otherwise.\r\n   */\r\n  hasData(mime: string): boolean {\r\n    return this._types.indexOf(mime) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Get the data value for the given MIME type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * @returns The value for the given MIME type, or `undefined` if\r\n   *   the dataset does not contain a value for the type.\r\n   */\r\n  getData(mime: string): any | undefined {\r\n    let i = this._types.indexOf(mime);\r\n    return i !== -1 ? this._values[i] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Set the data value for the given MIME type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * @param data - The data value for the given MIME type.\r\n   *\r\n   * #### Notes\r\n   * This will overwrite any previous entry for the MIME type.\r\n   */\r\n  setData(mime: string, data: any): void {\r\n    this.clearData(mime);\r\n    this._types.push(mime);\r\n    this._values.push(data);\r\n  }\r\n\r\n  /**\r\n   * Remove the data entry for the given MIME type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if there is no entry for the given MIME type.\r\n   */\r\n  clearData(mime: string): void {\r\n    let i = this._types.indexOf(mime);\r\n    if (i !== -1) {\r\n      this._types.splice(i, 1);\r\n      this._values.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all data entries from the dataset.\r\n   */\r\n  clear(): void {\r\n    this._types.length = 0;\r\n    this._values.length = 0;\r\n  }\r\n\r\n  private _types: string[] = [];\r\n  private _values: any[] = [];\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n\r\n/**\r\n * A class which wraps a promise into a delegate object.\r\n *\r\n * #### Notes\r\n * This class is useful when the logic to resolve or reject a promise\r\n * cannot be defined at the point where the promise is created.\r\n */\r\nexport\r\nclass PromiseDelegate<T> {\r\n  /**\r\n   * Construct a new promise delegate.\r\n   */\r\n  constructor() {\r\n    this.promise = new Promise<T>((resolve, reject) => {\r\n      this._resolve = resolve;\r\n      this._reject = reject;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The promise wrapped by the delegate.\r\n   */\r\n  readonly promise: Promise<T>;\r\n\r\n  /**\r\n   * Resolve the wrapped promise with the given value.\r\n   *\r\n   * @param value - The value to use for resolving the promise.\r\n   */\r\n  resolve(value: T | PromiseLike<T>): void {\r\n    let resolve = this._resolve;\r\n    resolve(value);\r\n  }\r\n\r\n  /**\r\n   * Reject the wrapped promise with the given value.\r\n   *\r\n   * @reason - The reason for rejecting the promise.\r\n   */\r\n  reject(reason: any): void {\r\n    let reject = this._reject;\r\n    reject(reason);\r\n  }\r\n\r\n  private _resolve: (value: T | PromiseLike<T>) => void;\r\n  private _reject: (reason: any) => void;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n// Declare ambient variables for `window` and `require` to avoid a\r\n// hard dependency on both. This package must run on node.\r\ndeclare var window: any;\r\ndeclare var require: any;\r\n\r\n\r\n/**\r\n * The namespace for random number related functionality.\r\n */\r\nexport\r\nnamespace Random {\r\n  /**\r\n   * A function which generates random bytes.\r\n   *\r\n   * @param buffer - The `Uint8Array` to fill with random bytes.\r\n   *\r\n   * #### Notes\r\n   * A cryptographically strong random number generator will be used if\r\n   * available. Otherwise, `Math.random` will be used as a fallback for\r\n   * randomness.\r\n   *\r\n   * The following RNGs are supported, listed in order of precedence:\r\n   *   - `window.crypto.getRandomValues`\r\n   *   - `window.msCrypto.getRandomValues`\r\n   *   - `require('crypto').randomFillSync\r\n   *   - `require('crypto').randomBytes\r\n   *   - `Math.random`\r\n   */\r\n  export\r\n  const getRandomValues = (() => {\r\n    // Look up the crypto module if available.\r\n    const crypto: any = (\r\n      (typeof window !== 'undefined' && (window.crypto || window.msCrypto)) ||\r\n      (typeof require !== 'undefined' && require('crypto')) || null\r\n    );\r\n\r\n    // Modern browsers and IE 11\r\n    if (crypto && typeof crypto.getRandomValues === 'function') {\r\n      return function getRandomValues(buffer: Uint8Array): void {\r\n        return crypto.getRandomValues(buffer);\r\n      }\r\n    }\r\n\r\n    // Node 7+\r\n    if (crypto && typeof crypto.randomFillSync === 'function') {\r\n      return function getRandomValues(buffer: Uint8Array): void {\r\n        return crypto.randomFillSync(buffer);\r\n      }\r\n    }\r\n\r\n    // Node 0.10+\r\n    if (crypto && typeof crypto.randomBytes === 'function') {\r\n      return function getRandomValues(buffer: Uint8Array): void {\r\n        let bytes = crypto.randomBytes(buffer.length);\r\n        for (let i = 0, n = bytes.length; i < n; ++i) {\r\n          buffer[i] = bytes[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Fallback\r\n    return function getRandomValues(buffer: Uint8Array): void {\r\n      let value = 0;\r\n      for (let i = 0, n = buffer.length; i < n; ++i) {\r\n        if (i % 4 === 0) {\r\n          value = Math.random() * 0xFFFFFFFF >>> 0;\r\n        }\r\n        buffer[i] = value & 0xFF;\r\n        value >>>= 8;\r\n      }\r\n    }\r\n  })();\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n\r\n/**\r\n * A runtime object which captures compile-time type information.\r\n *\r\n * #### Notes\r\n * A token captures the compile-time type of an interface or class in\r\n * an object which can be used at runtime in a type-safe fashion.\r\n */\r\nexport\r\nclass Token<T> {\r\n  /**\r\n   * Construct a new token.\r\n   *\r\n   * @param name - A human readable name for the token.\r\n   */\r\n  constructor(name: string) {\r\n    this.name = name;\r\n    this._tokenStructuralPropertyT = null!;\r\n  }\r\n\r\n  /**\r\n   * The human readable name for the token.\r\n   *\r\n   * #### Notes\r\n   * This can be useful for debugging and logging.\r\n   */\r\n  readonly name: string;\r\n\r\n  // @ts-ignore\r\n  private _tokenStructuralPropertyT: T;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  Random\r\n} from './random';\r\n\r\n\r\n/**\r\n * The namespace for UUID related functionality.\r\n */\r\nexport\r\nnamespace UUID {\r\n  /**\r\n   * A function which generates UUID v4 identifiers.\r\n   *\r\n   * @returns A new UUID v4 string.\r\n   *\r\n   * #### Notes\r\n   * This implementation complies with RFC 4122.\r\n   *\r\n   * This uses `Random.getRandomValues()` for random bytes, which in\r\n   * turn will use the underlying `crypto` module of the platform if\r\n   * it is available. The fallback for randomness is `Math.random`.\r\n   */\r\n  export\r\n  const uuid4 = (() => {\r\n    // Create a 16 byte array to hold the random values.\r\n    const bytes = new Uint8Array(16);\r\n\r\n    // Create a look up table from bytes to hex strings.\r\n    const lut = new Array<string>(256);\r\n\r\n    // Pad the single character hex digits with a leading zero.\r\n    for (let i = 0; i < 16; ++i) {\r\n      lut[i] = '0' + i.toString(16);\r\n    }\r\n\r\n    // Populate the rest of the hex digits.\r\n    for (let i = 16; i < 256; ++i) {\r\n      lut[i] = i.toString(16);\r\n    }\r\n\r\n    // Return a function which generates the UUID.\r\n    return function uuid4(): string {\r\n      // Get a new batch of random values.\r\n      Random.getRandomValues(bytes);\r\n\r\n      // Set the UUID version number to 4.\r\n      bytes[6] = 0x40 | (bytes[6] & 0x0F);\r\n\r\n      // Set the clock sequence bit to the RFC spec.\r\n      bytes[8] = 0x80 | (bytes[8] & 0x3F);\r\n\r\n      // Assemble the UUID string.\r\n      return (\r\n        lut[bytes[0]] +\r\n        lut[bytes[1]] +\r\n        lut[bytes[2]] +\r\n        lut[bytes[3]] +\r\n        '-'           +\r\n        lut[bytes[4]] +\r\n        lut[bytes[5]] +\r\n        '-'           +\r\n        lut[bytes[6]] +\r\n        lut[bytes[7]] +\r\n        '-'           +\r\n        lut[bytes[8]] +\r\n        lut[bytes[9]] +\r\n        '-'           +\r\n        lut[bytes[10]] +\r\n        lut[bytes[11]] +\r\n        lut[bytes[12]] +\r\n        lut[bytes[13]] +\r\n        lut[bytes[14]] +\r\n        lut[bytes[15]]\r\n      );\r\n    }\r\n  })();\r\n}\r\n"],"names":["JSONExt","Random","UUID"],"mappings":"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"}