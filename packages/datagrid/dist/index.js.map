{"version":3,"file":"index.js","sources":["../src/basickeyhandler.ts","../src/basicmousehandler.ts","../../../node_modules/tslib/tslib.es6.js","../src/selectionmodel.ts","../src/basicselectionmodel.ts","../src/cellrenderer.ts","../src/notification.ts","../src/celleditor.ts","../src/datamodel.ts","../src/graphicscontext.ts","../src/textrenderer.ts","../src/renderermap.ts","../src/sectionlist.ts","../src/celleditorcontroller.ts","../src/datagrid.ts","../src/jsonmodel.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  Platform\r\n} from '@lumino/domutils';\r\n\r\nimport {\r\n  getKeyboardLayout\r\n} from '@lumino/keyboard';\r\n\r\nimport {\r\n  DataGrid\r\n} from './datagrid';\r\n\r\nimport {\r\n  SelectionModel\r\n} from './selectionmodel';\r\n\r\nimport {\r\n  CellEditor\r\n} from './celleditor';\r\n\r\nimport {\r\n  MutableDataModel\r\n} from './datamodel';\r\n\r\n\r\n/**\r\n * A basic implementation of a data grid key handler.\r\n *\r\n * #### Notes\r\n * This class may be subclassed and customized as needed.\r\n */\r\nexport\r\nclass BasicKeyHandler implements DataGrid.IKeyHandler {\r\n  /**\r\n   * Whether the key handler is disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the key handler.\r\n   */\r\n  dispose(): void {\r\n    this._disposed = true;\r\n  }\r\n\r\n  /**\r\n   * Handle the key down event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keydown event of interest.\r\n   *\r\n   * #### Notes\r\n   * This will not be called if the mouse button is pressed.\r\n   */\r\n  onKeyDown(grid: DataGrid, event: KeyboardEvent): void {\r\n    // if grid is editable and cell selection available, start cell editing\r\n    // on key press (letters, numbers and space only)\r\n    if (grid.editable && \r\n      grid.selectionModel!.cursorRow !== -1 &&\r\n      grid.selectionModel!.cursorColumn !== -1) {\r\n      const input = String.fromCharCode(event.keyCode);\r\n      if (/[a-zA-Z0-9-_ ]/.test(input)) {\r\n        const row = grid.selectionModel!.cursorRow;\r\n        const column = grid.selectionModel!.cursorColumn;\r\n        const cell: CellEditor.CellConfig = {\r\n          grid: grid,\r\n          row: row,\r\n          column: column\r\n        };\r\n        grid.editorController!.edit(cell);\r\n        if (getKeyboardLayout().keyForKeydownEvent(event) === 'Space') {\r\n          event.stopPropagation();\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\r\n    case 'ArrowLeft':\r\n      this.onArrowLeft(grid, event);\r\n      break;\r\n    case 'ArrowRight':\r\n      this.onArrowRight(grid, event);\r\n      break;\r\n    case 'ArrowUp':\r\n      this.onArrowUp(grid, event);\r\n      break;\r\n    case 'ArrowDown':\r\n      this.onArrowDown(grid, event);\r\n      break;\r\n    case 'PageUp':\r\n      this.onPageUp(grid, event);\r\n      break;\r\n    case 'PageDown':\r\n      this.onPageDown(grid, event);\r\n      break;\r\n    case 'Escape':\r\n      this.onEscape(grid, event);\r\n      break;\r\n    case 'Delete':\r\n      this.onDelete(grid, event);\r\n      break;\r\n    case 'C':\r\n      this.onKeyC(grid, event);\r\n      break;\r\n    case 'Enter':\r\n      if (grid.selectionModel) {\r\n        grid.moveCursor(event.shiftKey ? 'up' : 'down');\r\n        grid.scrollToCursor();\r\n      }\r\n      break;\r\n    case 'Tab':\r\n      if (grid.selectionModel) {\r\n        grid.moveCursor(event.shiftKey ? 'left' : 'right');\r\n        grid.scrollToCursor();\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'ArrowLeft'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onArrowLeft(grid: DataGrid, event: KeyboardEvent): void {\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Fetch the modifier flags.\r\n    let shift = event.shiftKey;\r\n    let accel = Platform.accelKey(event);\r\n\r\n    // Handle no model with the accel modifier.\r\n    if (!model && accel) {\r\n      grid.scrollTo(0, grid.scrollY);\r\n      return;\r\n    }\r\n\r\n    // Handle no model and no modifier. (ignore shift)\r\n    if (!model) {\r\n      grid.scrollByStep('left');\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection mode.\r\n    let mode = model.selectionMode;\r\n\r\n    // Handle the row selection mode with accel key.\r\n    if (mode === 'row' && accel) {\r\n      grid.scrollTo(0, grid.scrollY);\r\n      return;\r\n    }\r\n\r\n    // Handle the row selection mode with no modifier. (ignore shift)\r\n    if (mode === 'row') {\r\n      grid.scrollByStep('left');\r\n      return;\r\n    }\r\n\r\n    // Fetch the cursor and selection.\r\n    let r = model.cursorRow;\r\n    let c = model.cursorColumn;\r\n    let cs = model.currentSelection();\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let r2: number;\r\n    let c1: number;\r\n    let c2: number;\r\n    let cr: number;\r\n    let cc: number;\r\n    let clear: SelectionModel.ClearMode;\r\n\r\n    // Dispatch based on the modifier keys.\r\n    if (accel && shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 - 1 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (accel) {\r\n      r1 = r;\r\n      r2 = r;\r\n      c1 = 0;\r\n      c2 = 0;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    } else {\r\n      r1 = r;\r\n      r2 = r;\r\n      c1 = c - 1;\r\n      c2 = c - 1;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    }\r\n\r\n    // Create the new selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\r\n\r\n    // Re-fetch the current selection.\r\n    cs = model.currentSelection();\r\n\r\n    // Bail if there is no selection.\r\n    if (!cs) {\r\n      return;\r\n    }\r\n\r\n    // Scroll the grid appropriately.\r\n    if (shift || mode === 'column') {\r\n      grid.scrollToColumn(cs.c2);\r\n    } else {\r\n      grid.scrollToCursor();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'ArrowRight'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onArrowRight(grid: DataGrid, event: KeyboardEvent): void {\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Fetch the modifier flags.\r\n    let shift = event.shiftKey;\r\n    let accel = Platform.accelKey(event);\r\n\r\n    // Handle no model with the accel modifier.\r\n    if (!model && accel) {\r\n      grid.scrollTo(grid.maxScrollX, grid.scrollY);\r\n      return;\r\n    }\r\n\r\n    // Handle no model and no modifier. (ignore shift)\r\n    if (!model) {\r\n      grid.scrollByStep('right');\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection mode.\r\n    let mode = model.selectionMode;\r\n\r\n    // Handle the row selection model with accel key.\r\n    if (mode === 'row' && accel) {\r\n      grid.scrollTo(grid.maxScrollX, grid.scrollY);\r\n      return;\r\n    }\r\n\r\n    // Handle the row selection mode with no modifier. (ignore shift)\r\n    if (mode === 'row') {\r\n      grid.scrollByStep('right');\r\n      return;\r\n    }\r\n\r\n    // Fetch the cursor and selection.\r\n    let r = model.cursorRow;\r\n    let c = model.cursorColumn;\r\n    let cs = model.currentSelection();\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let r2: number;\r\n    let c1: number;\r\n    let c2: number;\r\n    let cr: number;\r\n    let cc: number;\r\n    let clear: SelectionModel.ClearMode;\r\n\r\n    // Dispatch based on the modifier keys.\r\n    if (accel && shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = Infinity;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 + 1 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (accel) {\r\n      r1 = r;\r\n      r2 = r;\r\n      c1 = Infinity;\r\n      c2 = Infinity;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    } else {\r\n      r1 = r;\r\n      r2 = r;\r\n      c1 = c + 1;\r\n      c2 = c + 1;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    }\r\n\r\n    // Create the new selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\r\n\r\n    // Re-fetch the current selection.\r\n    cs = model.currentSelection();\r\n\r\n    // Bail if there is no selection.\r\n    if (!cs) {\r\n      return;\r\n    }\r\n\r\n    // Scroll the grid appropriately.\r\n    if (shift || mode === 'column') {\r\n      grid.scrollToColumn(cs.c2);\r\n    } else {\r\n      grid.scrollToCursor();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'ArrowUp'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onArrowUp(grid: DataGrid, event: KeyboardEvent): void {\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Fetch the modifier flags.\r\n    let shift = event.shiftKey;\r\n    let accel = Platform.accelKey(event);\r\n\r\n    // Handle no model with the accel modifier.\r\n    if (!model && accel) {\r\n      grid.scrollTo(grid.scrollX, 0);\r\n      return;\r\n    }\r\n\r\n    // Handle no model and no modifier. (ignore shift)\r\n    if (!model) {\r\n      grid.scrollByStep('up');\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection mode.\r\n    let mode = model.selectionMode;\r\n\r\n    // Handle the column selection mode with accel key.\r\n    if (mode === 'column' && accel) {\r\n      grid.scrollTo(grid.scrollX, 0);\r\n      return;\r\n    }\r\n\r\n    // Handle the column selection mode with no modifier. (ignore shift)\r\n    if (mode === 'column') {\r\n      grid.scrollByStep('up');\r\n      return;\r\n    }\r\n\r\n    // Fetch the cursor and selection.\r\n    let r = model.cursorRow;\r\n    let c = model.cursorColumn;\r\n    let cs = model.currentSelection();\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let r2: number;\r\n    let c1: number;\r\n    let c2: number;\r\n    let cr: number;\r\n    let cc: number;\r\n    let clear: SelectionModel.ClearMode;\r\n\r\n    // Dispatch based on the modifier keys.\r\n    if (accel && shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 - 1 : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (accel) {\r\n      r1 = 0;\r\n      r2 = 0;\r\n      c1 = c;\r\n      c2 = c;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    } else {\r\n      r1 = r - 1;\r\n      r2 = r - 1;\r\n      c1 = c;\r\n      c2 = c;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    }\r\n\r\n    // Create the new selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\r\n\r\n    // Re-fetch the current selection.\r\n    cs = model.currentSelection();\r\n\r\n    // Bail if there is no selection.\r\n    if (!cs) {\r\n      return;\r\n    }\r\n\r\n    // Scroll the grid appropriately.\r\n    if (shift || mode === 'row') {\r\n      grid.scrollToRow(cs.r2);\r\n    } else {\r\n      grid.scrollToCursor();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'ArrowDown'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onArrowDown(grid: DataGrid, event: KeyboardEvent): void {\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Fetch the modifier flags.\r\n    let shift = event.shiftKey;\r\n    let accel = Platform.accelKey(event);\r\n\r\n    // Handle no model with the accel modifier.\r\n    if (!model && accel) {\r\n      grid.scrollTo(grid.scrollX, grid.maxScrollY);\r\n      return;\r\n    }\r\n\r\n    // Handle no model and no modifier. (ignore shift)\r\n    if (!model) {\r\n      grid.scrollByStep('down');\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection mode.\r\n    let mode = model.selectionMode;\r\n\r\n    // Handle the column selection mode with accel key.\r\n    if (mode === 'column' && accel) {\r\n      grid.scrollTo(grid.scrollX, grid.maxScrollY);\r\n      return;\r\n    }\r\n\r\n    // Handle the column selection mode with no modifier. (ignore shift)\r\n    if (mode === 'column') {\r\n      grid.scrollByStep('down');\r\n      return;\r\n    }\r\n\r\n    // Fetch the cursor and selection.\r\n    let r = model.cursorRow;\r\n    let c = model.cursorColumn;\r\n    let cs = model.currentSelection();\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let r2: number;\r\n    let c1: number;\r\n    let c2: number;\r\n    let cr: number;\r\n    let cc: number;\r\n    let clear: SelectionModel.ClearMode;\r\n\r\n    // Dispatch based on the modifier keys.\r\n    if (accel && shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = Infinity;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (shift) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 + 1 : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else if (accel) {\r\n      r1 = Infinity;\r\n      r2 = Infinity;\r\n      c1 = c;\r\n      c2 = c;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    } else {\r\n      r1 = r + 1;\r\n      r2 = r + 1;\r\n      c1 = c;\r\n      c2 = c;\r\n      cr = r1;\r\n      cc = c1;\r\n      clear = 'all';\r\n    }\r\n\r\n    // Create the new selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\r\n\r\n    // Re-fetch the current selection.\r\n    cs = model.currentSelection();\r\n\r\n    // Bail if there is no selection.\r\n    if (!cs) {\r\n      return;\r\n    }\r\n\r\n    // Scroll the grid appropriately.\r\n    if (shift || mode === 'row') {\r\n      grid.scrollToRow(cs.r2);\r\n    } else {\r\n      grid.scrollToCursor();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'PageUp'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onPageUp(grid: DataGrid, event: KeyboardEvent): void {\r\n    // Ignore the event if the accel key is pressed.\r\n    if (Platform.accelKey(event)) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Scroll by page if there is no selection model.\r\n    if (!model || model.selectionMode === 'column') {\r\n      grid.scrollByPage('up');\r\n      return;\r\n    }\r\n\r\n    // Get the normal number of cells in the page height.\r\n    let n =  Math.floor(grid.pageHeight / grid.defaultSizes.rowHeight);\r\n\r\n    // Fetch the cursor and selection.\r\n    let r = model.cursorRow;\r\n    let c = model.cursorColumn;\r\n    let cs = model.currentSelection();\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let r2: number;\r\n    let c1: number;\r\n    let c2: number;\r\n    let cr: number;\r\n    let cc: number;\r\n    let clear: SelectionModel.ClearMode;\r\n\r\n    // Select or resize as needed.\r\n    if (event.shiftKey) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 - n : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else {\r\n      r1 = cs ? cs.r1 - n : 0;\r\n      r2 = r1;\r\n      c1 = c;\r\n      c2 = c;\r\n      cr = r1;\r\n      cc = c;\r\n      clear = 'all';\r\n    }\r\n\r\n    // Create the new selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\r\n\r\n    // Re-fetch the current selection.\r\n    cs = model.currentSelection();\r\n\r\n    // Bail if there is no selection.\r\n    if (!cs) {\r\n      return;\r\n    }\r\n\r\n    // Scroll the grid appropriately.\r\n    grid.scrollToRow(cs.r2);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'PageDown'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onPageDown(grid: DataGrid, event: KeyboardEvent): void {\r\n    // Ignore the event if the accel key is pressed.\r\n    if (Platform.accelKey(event)) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Scroll by page if there is no selection model.\r\n    if (!model || model.selectionMode === 'column') {\r\n      grid.scrollByPage('down');\r\n      return;\r\n    }\r\n\r\n    // Get the normal number of cells in the page height.\r\n    let n =  Math.floor(grid.pageHeight / grid.defaultSizes.rowHeight);\r\n\r\n    // Fetch the cursor and selection.\r\n    let r = model.cursorRow;\r\n    let c = model.cursorColumn;\r\n    let cs = model.currentSelection();\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let r2: number;\r\n    let c1: number;\r\n    let c2: number;\r\n    let cr: number;\r\n    let cc: number;\r\n    let clear: SelectionModel.ClearMode;\r\n\r\n    // Select or resize as needed.\r\n    if (event.shiftKey) {\r\n      r1 = cs ? cs.r1 : 0;\r\n      r2 = cs ? cs.r2 + n : 0;\r\n      c1 = cs ? cs.c1 : 0;\r\n      c2 = cs ? cs.c2 : 0;\r\n      cr = r;\r\n      cc = c;\r\n      clear = 'current';\r\n    } else {\r\n      r1 = cs ? cs.r1 + n : 0;\r\n      r2 = r1;\r\n      c1 = c;\r\n      c2 = c;\r\n      cr = r1;\r\n      cc = c;\r\n      clear = 'all';\r\n    }\r\n\r\n    // Create the new selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow: cr, cursorColumn: cc, clear });\r\n\r\n    // Re-fetch the current selection.\r\n    cs = model.currentSelection();\r\n\r\n    // Bail if there is no selection.\r\n    if (!cs) {\r\n      return;\r\n    }\r\n\r\n    // Scroll the grid appropriately.\r\n    grid.scrollToRow(cs.r2);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'Escape'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onEscape(grid: DataGrid, event: KeyboardEvent): void {\r\n    if (grid.selectionModel) {\r\n      grid.selectionModel.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'Delete'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onDelete(grid: DataGrid, event: KeyboardEvent): void {\r\n    if (grid.editable &&\r\n      !grid.selectionModel!.isEmpty) {\r\n      const dataModel = grid.dataModel as MutableDataModel;\r\n      // Fetch the max row and column.\r\n      let maxRow = dataModel.rowCount('body') - 1;\r\n      let maxColumn = dataModel.columnCount('body') - 1;\r\n\r\n      const it = grid.selectionModel!.selections();\r\n      let s: SelectionModel.Selection | undefined;\r\n      while ((s = it.next()) !== undefined) {\r\n        // Clamp the cell to the model bounds.\r\n        let sr1 = Math.max(0, Math.min(s.r1, maxRow));\r\n        let sc1 = Math.max(0, Math.min(s.c1, maxColumn));\r\n        let sr2 = Math.max(0, Math.min(s.r2, maxRow));\r\n        let sc2 = Math.max(0, Math.min(s.c2, maxColumn));\r\n\r\n        for (let r = sr1; r <= sr2; ++r) {\r\n          for (let c = sc1; c <= sc2; ++c) {\r\n            dataModel.setData('body', r, c, null);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'C'` key press for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The keyboard event of interest.\r\n   */\r\n  protected onKeyC(grid: DataGrid, event: KeyboardEvent): void {\r\n    // Bail early if the modifiers aren't correct for copy.\r\n    if (event.shiftKey || !Platform.accelKey(event)) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Copy the current selection to the clipboard.\r\n    grid.copyToClipboard();\r\n  }\r\n\r\n  private _disposed = false;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  IDisposable\r\n} from '@lumino/disposable';\r\n\r\nimport {\r\n  Platform\r\n} from '@lumino/domutils';\r\n\r\nimport {\r\n  Drag\r\n} from '@lumino/dragdrop';\r\n\r\nimport {\r\n  DataGrid\r\n} from './datagrid';\r\n\r\nimport {\r\n  DataModel\r\n} from './datamodel';\r\n\r\nimport {\r\n  SelectionModel\r\n} from './selectionmodel';\r\n\r\nimport {\r\n  CellEditor\r\n} from './celleditor';\r\n\r\n/**\r\n * A basic implementation of a data grid mouse handler.\r\n *\r\n * #### Notes\r\n * This class may be subclassed and customized as needed.\r\n */\r\nexport\r\nclass BasicMouseHandler implements DataGrid.IMouseHandler {\r\n  /**\r\n   * Dispose of the resources held by the mouse handler.\r\n   */\r\n  dispose(): void {\r\n    // Bail early if the handler is already disposed.\r\n    if (this._disposed) {\r\n      return;\r\n    }\r\n\r\n    // Release any held resources.\r\n    this.release();\r\n\r\n    // Mark the handler as disposed.\r\n    this._disposed = true;\r\n  }\r\n\r\n  /**\r\n   * Whether the mouse handler is disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Release the resources held by the handler.\r\n   */\r\n  release(): void {\r\n    // Bail early if the is no press data.\r\n    if (!this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Clear the autoselect timeout.\r\n    if (this._pressData.type === 'select') {\r\n      this._pressData.timeout = -1;\r\n    }\r\n\r\n    // Clear the press data.\r\n    this._pressData.override.dispose();\r\n    this._pressData = null;\r\n  }\r\n\r\n  /**\r\n   * Handle the mouse hover event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The mouse hover event of interest.\r\n   */\r\n  onMouseHover(grid: DataGrid, event: MouseEvent): void {\r\n    // Hit test the grid.\r\n    let hit = grid.hitTest(event.clientX, event.clientY);\r\n\r\n    // Get the resize handle for the hit test.\r\n    let handle = Private.resizeHandleForHitTest(hit);\r\n\r\n    // Fetch the cursor for the handle.\r\n    let cursor = this.cursorForHandle(handle);\r\n\r\n    // Update the viewport cursor based on the part.\r\n    grid.viewport.node.style.cursor = cursor;\r\n\r\n    // TODO support user-defined hover items\r\n  }\r\n\r\n  /**\r\n   * Handle the mouse leave event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The mouse hover event of interest.\r\n   */\r\n  onMouseLeave(grid: DataGrid, event: MouseEvent): void {\r\n    // TODO support user-defined hover popups.\r\n\r\n    // Clear the viewport cursor.\r\n    grid.viewport.node.style.cursor = '';\r\n  }\r\n\r\n  /**\r\n   * Handle the mouse down event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The mouse down event of interest.\r\n   */\r\n  onMouseDown(grid: DataGrid, event: MouseEvent): void {\r\n    // Unpack the event.\r\n    let { clientX, clientY } = event;\r\n\r\n    // Hit test the grid.\r\n    let hit = grid.hitTest(clientX, clientY);\r\n\r\n    // Unpack the hit test.\r\n    let { region, row, column } = hit;\r\n\r\n    // Bail if the hit test is on an uninteresting region.\r\n    if (region === 'void') {\r\n      return;\r\n    }\r\n\r\n    // Fetch the modifier flags.\r\n    let shift = event.shiftKey;\r\n    let accel = Platform.accelKey(event);\r\n\r\n    // If the hit test is the body region, the only option is select.\r\n    if (region === 'body') {\r\n      // Fetch the selection model.\r\n      let model = grid.selectionModel;\r\n\r\n      // Bail early if there is no selection model.\r\n      if (!model) {\r\n        return;\r\n      }\r\n\r\n      // Override the document cursor.\r\n      let override = Drag.overrideCursor('default');\r\n\r\n      // Set up the press data.\r\n      this._pressData = {\r\n        type: 'select', region, row, column, override,\r\n        localX: -1, localY: -1, timeout: -1\r\n      };\r\n\r\n      // Set up the selection variables.\r\n      let r1: number;\r\n      let c1: number;\r\n      let r2: number;\r\n      let c2: number;\r\n      let cursorRow: number;\r\n      let cursorColumn: number;\r\n      let clear: SelectionModel.ClearMode;\r\n\r\n      // Accel == new selection, keep old selections.\r\n      if (accel) {\r\n        r1 = row;\r\n        r2 = row;\r\n        c1 = column;\r\n        c2 = column;\r\n        cursorRow = row;\r\n        cursorColumn = column;\r\n        clear = 'none';\r\n      } else if (shift) {\r\n        r1 = model.cursorRow;\r\n        r2 = row;\r\n        c1 = model.cursorColumn;\r\n        c2 = column;\r\n        cursorRow = model.cursorRow;\r\n        cursorColumn = model.cursorColumn;\r\n        clear = 'current';\r\n      } else {\r\n        r1 = row;\r\n        r2 = row;\r\n        c1 = column;\r\n        c2 = column;\r\n        cursorRow = row;\r\n        cursorColumn = column;\r\n        clear = 'all';\r\n      }\r\n\r\n      // Use selection mode 'cell'\r\n      model.selectionMode = 'cell';\r\n\r\n      // Make the selection.\r\n      model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\r\n\r\n      // Done.\r\n      return;\r\n    }\r\n\r\n    // Otherwise, the hit test is on a header region.\r\n\r\n    // Convert the hit test into a part.\r\n    let handle = Private.resizeHandleForHitTest(hit);\r\n\r\n    // Fetch the cursor for the handle.\r\n    let cursor = this.cursorForHandle(handle);\r\n\r\n    // Handle horizontal resize.\r\n    if (handle === 'left' || handle === 'right' ) {\r\n      // Set up the resize data type.\r\n      let type: 'column-resize' = 'column-resize';\r\n\r\n      // Determine the column region.\r\n      let rgn: DataModel.ColumnRegion = (\r\n        region === 'column-header' ? 'body' : 'row-header'\r\n      );\r\n\r\n      // Determine the section index.\r\n      let index = handle === 'left' ? column - 1 : column;\r\n\r\n      // Fetch the section size.\r\n      let size = grid.columnSize(rgn, index);\r\n\r\n      // Override the document cursor.\r\n      let override = Drag.overrideCursor(cursor);\r\n\r\n      // Create the temporary press data.\r\n      this._pressData = { type, region: rgn, index, size, clientX, override };\r\n\r\n      // Done.\r\n      return;\r\n    }\r\n\r\n    // Handle vertical resize\r\n    if (handle === 'top' || handle === 'bottom') {\r\n      // Set up the resize data type.\r\n      let type: 'row-resize' = 'row-resize';\r\n\r\n      // Determine the row region.\r\n      let rgn: DataModel.RowRegion = (\r\n        region === 'row-header' ? 'body' : 'column-header'\r\n      );\r\n\r\n      // Determine the section index.\r\n      let index = handle === 'top' ? row - 1 : row;\r\n\r\n      // Fetch the section size.\r\n      let size = grid.rowSize(rgn, index);\r\n\r\n      // Override the document cursor.\r\n      let override = Drag.overrideCursor(cursor);\r\n\r\n      // Create the temporary press data.\r\n      this._pressData = { type, region: rgn, index, size, clientY, override };\r\n\r\n      // Done.\r\n      return;\r\n    }\r\n\r\n    // Otherwise, the only option is select.\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Bail if there is no selection model.\r\n    if (!model) {\r\n      return;\r\n    }\r\n\r\n    // Override the document cursor.\r\n    let override = Drag.overrideCursor('default');\r\n\r\n    // Set up the press data.\r\n    this._pressData = {\r\n      type: 'select', region, row, column, override,\r\n      localX: -1, localY: -1, timeout: -1\r\n    };\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let c1: number;\r\n    let r2: number;\r\n    let c2: number;\r\n    let cursorRow: number;\r\n    let cursorColumn: number;\r\n    let clear: SelectionModel.ClearMode;\r\n\r\n    // Compute the selection based on the pressed region.\r\n    if (region === 'corner-header') {\r\n      r1 = 0;\r\n      r2 = Infinity;\r\n      c1 = 0;\r\n      c2 = Infinity;\r\n      cursorRow = accel ? 0 : shift ? model.cursorRow : 0;\r\n      cursorColumn = accel ? 0 : shift ? model.cursorColumn : 0;\r\n      clear = accel ? 'none' : shift ? 'current' : 'all';\r\n    } else if (region === 'row-header') {\r\n      r1 = accel ? row : shift ? model.cursorRow : row;\r\n      r2 = row;\r\n      c1 = 0;\r\n      c2 = Infinity;\r\n      cursorRow = accel ? row : shift ? model.cursorRow : row;\r\n      cursorColumn = accel ? 0 : shift ? model.cursorColumn : 0;\r\n      clear = accel ? 'none' : shift ? 'current' : 'all';\r\n    } else if (region === 'column-header') {\r\n      r1 = 0;\r\n      r2 = Infinity;\r\n      c1 = accel ? column : shift ? model.cursorColumn : column;\r\n      c2 = column;\r\n      cursorRow = accel ? 0 : shift ? model.cursorRow : 0;\r\n      cursorColumn = accel ? column : shift ? model.cursorColumn : column;\r\n      clear = accel ? 'none' : shift ? 'current' : 'all';\r\n    } else {\r\n      r1 = accel ? row : shift ? model.cursorRow : row;\r\n      r2 = row;\r\n      c1 = accel ? column : shift ? model.cursorColumn : column;\r\n      c2 = column;\r\n      cursorRow = accel ? row : shift ? model.cursorRow : row;\r\n      cursorColumn = accel ? column : shift ? model.cursorColumn : column;\r\n      clear = accel ? 'none' : shift ? 'current' : 'all';\r\n    }\r\n\r\n    // Set selection mode based on region\r\n    switch (region) {\r\n      case 'column-header':\r\n        model.selectionMode = 'column';\r\n        break;\r\n      case 'row-header':\r\n        model.selectionMode = 'row';\r\n        break;\r\n      default:\r\n        model.selectionMode = 'cell';\r\n        break;\r\n    }\r\n\r\n    // Make the selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\r\n  }\r\n\r\n  /**\r\n   * Handle the mouse move event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The mouse move event of interest.\r\n   */\r\n  onMouseMove(grid: DataGrid, event: MouseEvent): void {\r\n    // Fetch the press data.\r\n    const data = this._pressData;\r\n\r\n    // Bail early if there is no press data.\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    // Handle a row resize.\r\n    if (data.type === 'row-resize') {\r\n      let dy = event.clientY - data.clientY;\r\n      grid.resizeRow(data.region, data.index, data.size + dy);\r\n      return;\r\n    }\r\n\r\n    // Handle a column resize.\r\n    if (data.type === 'column-resize') {\r\n      let dx = event.clientX - data.clientX;\r\n      grid.resizeColumn(data.region, data.index, data.size + dx);\r\n      return;\r\n    }\r\n\r\n    // Otherwise, it's a select.\r\n\r\n    // Mouse moves during a corner header press are a no-op.\r\n    if (data.region === 'corner-header') {\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Bail early if the selection model was removed.\r\n    if (!model) {\r\n      return;\r\n    }\r\n\r\n    // Map to local coordinates.\r\n    let { lx, ly } = grid.mapToLocal(event.clientX, event.clientY);\r\n\r\n    // Update the local mouse coordinates in the press data.\r\n    data.localX = lx;\r\n    data.localY = ly;\r\n\r\n    // Fetch the grid geometry.\r\n    let hw = grid.headerWidth;\r\n    let hh = grid.headerHeight;\r\n    let vpw = grid.viewportWidth;\r\n    let vph = grid.viewportHeight;\r\n    let sx = grid.scrollX;\r\n    let sy = grid.scrollY;\r\n    let msx = grid.maxScrollY;\r\n    let msy = grid.maxScrollY;\r\n\r\n    // Fetch the selection mode.\r\n    let mode = model.selectionMode;\r\n\r\n    // Set up the timeout variable.\r\n    let timeout = -1;\r\n\r\n    // Compute the timemout based on hit region and mouse position.\r\n    if (data.region === 'row-header' || mode === 'row') {\r\n      if (ly < hh && sy > 0) {\r\n        timeout = Private.computeTimeout(hh - ly);\r\n      } else if (ly >= vph && sy < msy) {\r\n        timeout = Private.computeTimeout(ly - vph);\r\n      }\r\n    } else if (data.region === 'column-header' || mode === 'column') {\r\n      if (lx < hw && sx > 0) {\r\n        timeout = Private.computeTimeout(hw - lx);\r\n      } else if (lx >= vpw && sx < msx) {\r\n        timeout = Private.computeTimeout(lx - vpw);\r\n      }\r\n    } else {\r\n      if (lx < hw && sx > 0) {\r\n        timeout = Private.computeTimeout(hw - lx);\r\n      } else if (lx >= vpw && sx < msx) {\r\n        timeout = Private.computeTimeout(lx - vpw);\r\n      } else if (ly < hh && sy > 0) {\r\n        timeout = Private.computeTimeout(hh - ly);\r\n      } else if (ly >= vph && sy < msy) {\r\n        timeout = Private.computeTimeout(ly - vph);\r\n      }\r\n    }\r\n\r\n    // Update or initiate the autoselect if needed.\r\n    if (timeout >= 0) {\r\n      if (data.timeout < 0) {\r\n        data.timeout = timeout;\r\n        setTimeout(() => { Private.autoselect(grid, data); }, timeout);\r\n      } else {\r\n        data.timeout = timeout;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Otherwise, clear the autoselect timeout.\r\n    data.timeout = -1;\r\n\r\n    // Map the position to virtual coordinates.\r\n    let { vx, vy } = grid.mapToVirtual(event.clientX, event.clientY);\r\n\r\n    // Clamp the coordinates to the limits.\r\n    vx = Math.max(0, Math.min(vx, grid.bodyWidth -1));\r\n    vy = Math.max(0, Math.min(vy, grid.bodyHeight - 1));\r\n\r\n    // Set up the selection variables.\r\n    let r1: number;\r\n    let c1: number;\r\n    let r2: number;\r\n    let c2: number;\r\n    let cursorRow = model.cursorRow;\r\n    let cursorColumn = model.cursorColumn;\r\n    let clear: SelectionModel.ClearMode = 'current';\r\n\r\n    // Compute the selection based pressed region.\r\n    if (data.region === 'row-header' || mode === 'row') {\r\n      r1 = data.row;\r\n      r2 = grid.rowAt('body', vy);\r\n      c1 = 0;\r\n      c2 = Infinity;\r\n    } else if (data.region === 'column-header' || mode === 'column') {\r\n      r1 = 0;\r\n      r2 = Infinity;\r\n      c1 = data.column;\r\n      c2 = grid.columnAt('body', vx);\r\n    } else {\r\n      r1 = cursorRow;\r\n      r2 = grid.rowAt('body', vy);\r\n      c1 = cursorColumn;\r\n      c2 = grid.columnAt('body', vx);\r\n    }\r\n\r\n    // Make the selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\r\n  }\r\n\r\n  /**\r\n   * Handle the mouse up event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The mouse up event of interest.\r\n   */\r\n  onMouseUp(grid: DataGrid, event: MouseEvent): void {\r\n    this.release();\r\n  }\r\n\r\n  /**\r\n   * Handle the mouse double click event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The mouse up event of interest.\r\n   */\r\n  onMouseDoubleClick(grid: DataGrid, event: MouseEvent): void {\r\n    if (!grid.dataModel) {\r\n      this.release();\r\n      return;\r\n    }\r\n\r\n    // Unpack the event.\r\n    let { clientX, clientY } = event;\r\n\r\n    // Hit test the grid.\r\n    let hit = grid.hitTest(clientX, clientY);\r\n\r\n    // Unpack the hit test.\r\n    let { region, row, column } = hit;\r\n\r\n    if (region === 'void') {\r\n      this.release();\r\n      return;\r\n    }\r\n\r\n    if (region === 'body') {\r\n      if (grid.editable) {\r\n        const cell: CellEditor.CellConfig = {\r\n          grid: grid,\r\n          row: row,\r\n          column: column\r\n        };\r\n        grid.editorController!.edit(cell);\r\n      }\r\n    }\r\n\r\n    this.release();\r\n  }\r\n\r\n  /**\r\n   * Handle the context menu event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The context menu event of interest.\r\n   */\r\n  onContextMenu(grid: DataGrid, event: MouseEvent): void {\r\n    // TODO support user-defined context menus\r\n  }\r\n\r\n  /**\r\n   * Handle the wheel event for the data grid.\r\n   *\r\n   * @param grid - The data grid of interest.\r\n   *\r\n   * @param event - The wheel event of interest.\r\n   */\r\n  onWheel(grid: DataGrid, event: WheelEvent): void {\r\n    // Bail if a mouse press is in progress.\r\n    if (this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Extract the delta X and Y movement.\r\n    let dx = event.deltaX;\r\n    let dy = event.deltaY;\r\n\r\n    // Convert the delta values to pixel values.\r\n    switch (event.deltaMode) {\r\n    case 0:  // DOM_DELTA_PIXEL\r\n      break;\r\n    case 1:  // DOM_DELTA_LINE\r\n      let ds = grid.defaultSizes;\r\n      dx *= ds.columnWidth;\r\n      dy *= ds.rowHeight;\r\n      break;\r\n    case 2:  // DOM_DELTA_PAGE\r\n      dx *= grid.pageWidth;\r\n      dy *= grid.pageHeight;\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n\r\n    // Scroll by the desired amount.\r\n    grid.scrollBy(dx, dy);\r\n  }\r\n\r\n  /**\r\n   * Convert a resize handle into a cursor.\r\n   */\r\n  cursorForHandle(handle: ResizeHandle): string {\r\n    return Private.cursorMap[handle];\r\n  }\r\n\r\n  /**\r\n   * Get the current pressData\r\n   */\r\n  get pressData(): PressData.PressData | null {\r\n    return this._pressData;\r\n  }\r\n\r\n  private _disposed = false;\r\n  private _pressData: PressData.PressData | null = null;\r\n}\r\n\r\n/**\r\n* A type alias for the resize handle types.\r\n*/\r\nexport\r\ntype ResizeHandle = 'top' | 'left' | 'right' | 'bottom' | 'none';\r\n\r\n\r\n/**\r\n * The namespace for the pressdata.\r\n */\r\nexport\r\nnamespace PressData {\r\n  /**\r\n   * A type alias for the row resize data.\r\n   */\r\n  export\r\n  type RowResizeData = {\r\n    /**\r\n     * The descriminated type for the data.\r\n     */\r\n    readonly type: 'row-resize';\r\n\r\n    /**\r\n     * The row region which holds the section being resized.\r\n     */\r\n    readonly region: DataModel.RowRegion;\r\n\r\n    /**\r\n     * The index of the section being resized.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The original size of the section.\r\n     */\r\n    readonly size: number;\r\n\r\n    /**\r\n     * The original client Y position of the mouse.\r\n     */\r\n    readonly clientY: number;\r\n\r\n    /**\r\n     * The disposable to clear the cursor override.\r\n     */\r\n    readonly override: IDisposable;\r\n  };\r\n\r\n  /**\r\n   * A type alias for the column resize data.\r\n   */\r\n  export\r\n  type ColumnResizeData = {\r\n    /**\r\n     * The descriminated type for the data.\r\n     */\r\n    readonly type: 'column-resize';\r\n\r\n    /**\r\n     * The column region which holds the section being resized.\r\n     */\r\n    readonly region: DataModel.ColumnRegion;\r\n\r\n    /**\r\n     * The index of the section being resized.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The original size of the section.\r\n     */\r\n    readonly size: number;\r\n\r\n    /**\r\n     * The original client X position of the mouse.\r\n     */\r\n    readonly clientX: number;\r\n\r\n    /**\r\n     * The disposable to clear the cursor override.\r\n     */\r\n    readonly override: IDisposable;\r\n  };\r\n\r\n  /**\r\n   * A type alias for the select data.\r\n   */\r\n  export\r\n  type SelectData = {\r\n    /**\r\n     * The descriminated type for the data.\r\n     */\r\n    readonly type: 'select';\r\n\r\n    /**\r\n     * The original region for the mouse press.\r\n     */\r\n    readonly region: DataModel.CellRegion;\r\n\r\n    /**\r\n     * The original row that was selected.\r\n     */\r\n    readonly row: number;\r\n\r\n    /**\r\n     * The original column that was selected.\r\n     */\r\n    readonly column: number;\r\n\r\n    /**\r\n     * The disposable to clear the cursor override.\r\n     */\r\n    readonly override: IDisposable;\r\n\r\n    /**\r\n     * The current local X position of the mouse.\r\n     */\r\n    localX: number;\r\n\r\n    /**\r\n     * The current local Y position of the mouse.\r\n     */\r\n    localY: number;\r\n\r\n    /**\r\n     * The timeout delay for the autoselect loop.\r\n     */\r\n    timeout: number;\r\n  };\r\n\r\n  /**\r\n   * A type alias for the resize handler press data.\r\n   */\r\n  export\r\n  type PressData = RowResizeData | ColumnResizeData | SelectData ;\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nexport\r\nnamespace Private {\r\n  /**\r\n   * Get the resize handle for a grid hit test.\r\n   */\r\n  export\r\n  function resizeHandleForHitTest(hit: DataGrid.HitTestResult): ResizeHandle {\r\n    // Fetch the row and column.\r\n    let r = hit.row;\r\n    let c = hit.column;\r\n\r\n    // Fetch the leading and trailing sizes.\r\n    let lw = hit.x;\r\n    let lh = hit.y;\r\n    let tw = hit.width - hit.x;\r\n    let th = hit.height - hit.y;\r\n\r\n    // Set up the result variable.\r\n    let result: ResizeHandle;\r\n\r\n    // Dispatch based on hit test region.\r\n    switch (hit.region) {\r\n    case 'corner-header':\r\n      if (c > 0 && lw <= 5) {\r\n        result = 'left';\r\n      } else if (tw <= 6) {\r\n        result = 'right';\r\n      } else if (r > 0 && lh <= 5) {\r\n        result = 'top';\r\n      } else if (th <= 6) {\r\n        result = 'bottom';\r\n      } else {\r\n        result = 'none';\r\n      }\r\n      break;\r\n    case 'column-header':\r\n      if (c > 0 && lw <= 5) {\r\n        result = 'left';\r\n      } else if (tw <= 6) {\r\n        result = 'right';\r\n      } else if (r > 0 && lh <= 5) {\r\n        result = 'top';\r\n      } else if (th <= 6) {\r\n        result = 'bottom';\r\n      } else {\r\n        result = 'none';\r\n      }\r\n      break;\r\n    case 'row-header':\r\n      if (c > 0 && lw <= 5) {\r\n        result = 'left';\r\n      } else if (tw <= 6) {\r\n        result = 'right';\r\n      } else if (r > 0 && lh <= 5) {\r\n        result = 'top';\r\n      } else if (th <= 6) {\r\n        result = 'bottom';\r\n      } else {\r\n        result = 'none';\r\n      }\r\n      break;\r\n    case 'body':\r\n      result = 'none';\r\n      break;\r\n    case 'void':\r\n      result = 'none';\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n\r\n    // Return the result.\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * A timer callback for the autoselect loop.\r\n   *\r\n   * @param grid - The datagrid of interest.\r\n   *\r\n   * @param data - The select data of interest.\r\n   */\r\n  export\r\n  function autoselect(grid: DataGrid, data: PressData.SelectData): void {\r\n    // Bail early if the timeout has been reset.\r\n    if (data.timeout < 0) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection model.\r\n    let model = grid.selectionModel;\r\n\r\n    // Bail early if the selection model has been removed.\r\n    if (!model) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the current selection.\r\n    let cs = model.currentSelection();\r\n\r\n    // Bail early if there is no current selection.\r\n    if (!cs) {\r\n      return;\r\n    }\r\n\r\n    // Fetch local X and Y coordinates of the mouse.\r\n    let lx = data.localX;\r\n    let ly = data.localY;\r\n\r\n    // Set up the selection variables.\r\n    let r1 = cs.r1;\r\n    let c1 = cs.c1;\r\n    let r2 = cs.r2;\r\n    let c2 = cs.c2;\r\n    let cursorRow = model.cursorRow;\r\n    let cursorColumn = model.cursorColumn;\r\n    let clear: SelectionModel.ClearMode = 'current';\r\n\r\n    // Fetch the grid geometry.\r\n    let hw = grid.headerWidth;\r\n    let hh = grid.headerHeight;\r\n    let vpw = grid.viewportWidth;\r\n    let vph = grid.viewportHeight;\r\n\r\n    // Fetch the selection mode.\r\n    let mode = model.selectionMode;\r\n\r\n    // Update the selection based on the hit region.\r\n    if (data.region === 'row-header' || mode === 'row') {\r\n      r2 += ly <= hh ? -1 : ly >= vph ? 1 : 0;\r\n    } else if (data.region === 'column-header' || mode === 'column') {\r\n      c2 += lx <= hw ? -1 : lx >= vpw ? 1 : 0;\r\n    } else {\r\n      r2 += ly <= hh ? -1 : ly >= vph ? 1 : 0;\r\n      c2 += lx <= hw ? -1 : lx >= vpw ? 1 : 0;\r\n    }\r\n\r\n    // Update the current selection.\r\n    model.select({ r1, c1, r2, c2, cursorRow, cursorColumn, clear });\r\n\r\n    // Re-fetch the current selection.\r\n    cs = model.currentSelection();\r\n\r\n    // Bail if there is no selection.\r\n    if (!cs) {\r\n      return\r\n    }\r\n\r\n    // Scroll the grid based on the hit region.\r\n    if (data.region === 'row-header' || mode === 'row') {\r\n      grid.scrollToRow(cs.r2);\r\n    } else if (data.region === 'column-header' || mode == 'column') {\r\n      grid.scrollToColumn(cs.c2);\r\n    } else if (mode === 'cell') {\r\n      grid.scrollToCell(cs.r2, cs.c2);\r\n    }\r\n\r\n    // Schedule the next call with the current timeout.\r\n    setTimeout(() => { autoselect(grid, data); }, data.timeout);\r\n  }\r\n\r\n  /**\r\n   * Compute the scroll timeout for the given delta distance.\r\n   *\r\n   * @param delta - The delta pixels from the origin.\r\n   *\r\n   * @returns The scaled timeout in milliseconds.\r\n   */\r\n  export\r\n  function computeTimeout(delta: number): number {\r\n    return 5 + 120 * (1 - Math.min(128, Math.abs(delta)) / 128);\r\n  }\r\n\r\n  /**\r\n   * A mapping of resize handle to cursor.\r\n   */\r\n  export\r\n  const cursorMap = {\r\n    top: 'ns-resize',\r\n    left: 'ew-resize',\r\n    right: 'ew-resize',\r\n    bottom: 'ns-resize',\r\n    none: 'default'\r\n  };\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  IIterator, some\r\n} from '@lumino/algorithm';\r\n\r\nimport {\r\n  ISignal, Signal\r\n} from '@lumino/signaling';\r\n\r\nimport {\r\n  DataModel\r\n} from './datamodel';\r\n\r\n\r\n/**\r\n * A base class for creating data grid selection models.\r\n *\r\n * #### Notes\r\n * If the predefined selection models are insufficient for a particular\r\n * use case, a custom model can be defined which derives from this class.\r\n */\r\nexport\r\nabstract class SelectionModel {\r\n  /**\r\n   * Construct a new selection model.\r\n   *\r\n   * @param options - The options for initializing the model.\r\n   */\r\n  constructor(options: SelectionModel.IOptions) {\r\n    this.dataModel = options.dataModel;\r\n    this._selectionMode = options.selectionMode || 'cell';\r\n    this.dataModel.changed.connect(this.onDataModelChanged, this);\r\n  }\r\n\r\n  /**\r\n   * Whether the selection model is empty.\r\n   *\r\n   * #### Notes\r\n   * An empty selection model will yield an empty `selections` iterator.\r\n   */\r\n  abstract readonly isEmpty: boolean;\r\n\r\n  /**\r\n   * The row index of the cursor.\r\n   *\r\n   * This is `-1` if the selection model is empty.\r\n   */\r\n  abstract readonly cursorRow: number;\r\n\r\n  /**\r\n   * The column index of the cursor.\r\n   *\r\n   * This is `-1` if the selection model is empty.\r\n   */\r\n  abstract readonly cursorColumn: number;\r\n\r\n  /**\r\n   * Move cursor down/up/left/right while making sure it remains\r\n   * within the bounds of selected rectangles\r\n   * \r\n   * @param direction - The direction of the movement.\r\n   */\r\n  abstract moveCursorWithinSelections(direction: SelectionModel.CursorMoveDirection): void;\r\n\r\n  /**\r\n   * Get the current selection in the selection model.\r\n   *\r\n   * @returns The current selection or `null`.\r\n   *\r\n   * #### Notes\r\n   * This is the selection which holds the cursor.\r\n   */\r\n  abstract currentSelection(): SelectionModel.Selection | null;\r\n\r\n  /**\r\n   * Get an iterator of the selections in the model.\r\n   *\r\n   * @returns A new iterator of the selections in the model.\r\n   *\r\n   * #### Notes\r\n   * The data grid will render the selections in order.\r\n   */\r\n  abstract selections(): IIterator<SelectionModel.Selection>;\r\n\r\n  /**\r\n   * Select the specified cells.\r\n   *\r\n   * @param args - The arguments for the selection.\r\n   */\r\n  abstract select(args: SelectionModel.SelectArgs): void;\r\n\r\n  /**\r\n   * Clear all selections in the selection model.\r\n   */\r\n  abstract clear(): void;\r\n\r\n  /**\r\n   * A signal emitted when the selection model has changed.\r\n   */\r\n  get changed(): ISignal<this, void> {\r\n    return this._changed;\r\n  }\r\n\r\n  /**\r\n   * The data model associated with the selection model.\r\n   */\r\n  readonly dataModel: DataModel;\r\n\r\n  /**\r\n   * Get the selection mode for the model.\r\n   */\r\n  get selectionMode(): SelectionModel.SelectionMode {\r\n    return this._selectionMode;\r\n  }\r\n\r\n  /**\r\n   * Set the selection mode for the model.\r\n   *\r\n   * #### Notes\r\n   * This will clear the selection model.\r\n   */\r\n  set selectionMode(value: SelectionModel.SelectionMode) {\r\n    // Bail early if the mode does not change.\r\n    if (this._selectionMode === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal mode.\r\n    this._selectionMode = value;\r\n\r\n    // Clear the current selections.\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * Test whether any selection intersects a row.\r\n   *\r\n   * @param index - The row index of interest.\r\n   *\r\n   * @returns Whether any selection intersects the row.\r\n   *\r\n   * #### Notes\r\n   * This method may be reimplemented in a subclass.\r\n   */\r\n  isRowSelected(index: number): boolean {\r\n    return some(this.selections(), s => Private.containsRow(s, index));\r\n  }\r\n\r\n  /**\r\n   * Test whether any selection intersects a column.\r\n   *\r\n   * @param index - The column index of interest.\r\n   *\r\n   * @returns Whether any selection intersects the column.\r\n   *\r\n   * #### Notes\r\n   * This method may be reimplemented in a subclass.\r\n   */\r\n  isColumnSelected(index: number): boolean {\r\n    return some(this.selections(), s => Private.containsColumn(s, index));\r\n  }\r\n\r\n  /**\r\n   * Test whether any selection intersects a cell.\r\n   *\r\n   * @param row - The row index of interest.\r\n   *\r\n   * @param column - The column index of interest.\r\n   *\r\n   * @returns Whether any selection intersects the cell.\r\n   *\r\n   * #### Notes\r\n   * This method may be reimplemented in a subclass.\r\n   */\r\n  isCellSelected(row: number, column: number): boolean {\r\n    return some(this.selections(), s => Private.containsCell(s, row, column));\r\n  }\r\n\r\n  /**\r\n   * A signal handler for the data model `changed` signal.\r\n   *\r\n   * @param args - The arguments for the signal.\r\n   *\r\n   * #### Notes\r\n   * Selection model implementations should update their selections\r\n   * in a manner that is relevant for the changes to the data model.\r\n   *\r\n   * The default implementation of this method is a no-op.\r\n   */\r\n  protected onDataModelChanged(sender: DataModel, args: DataModel.ChangedArgs): void { }\r\n\r\n  /**\r\n   * Emit the `changed` signal for the selection model.\r\n   *\r\n   * #### Notes\r\n   * Subclasses should call this method whenever the selection model\r\n   * has changed so that attached data grids can update themselves.\r\n   */\r\n  protected emitChanged(): void {\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  private _changed = new Signal<this, void>(this);\r\n  private _selectionMode: SelectionModel.SelectionMode = 'cell';\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `SelectionModel` class statics.\r\n */\r\nexport\r\nnamespace SelectionModel {\r\n  /**\r\n   * A type alias for the selection mode.\r\n   */\r\n  export\r\n  type SelectionMode = 'row' | 'column' | 'cell';\r\n  \r\n  /**\r\n   * A type alias for the cursor move direction.\r\n   */\r\n  export type CursorMoveDirection = 'up' | 'down' | 'left' | 'right' | 'none';\r\n\r\n  /**\r\n   * A type alias for the clear mode.\r\n   */\r\n  export\r\n  type ClearMode = 'all' | 'current' | 'none';\r\n\r\n  /**\r\n   * A type alias for the select args.\r\n   */\r\n  export\r\n  type SelectArgs = {\r\n    /**\r\n     * The first row of the selection.\r\n     *\r\n     * This may be greater than `r2`.\r\n     */\r\n    r1: number;\r\n\r\n    /**\r\n     * The first column of the selection.\r\n     *\r\n     * This may be greater than `c2`.\r\n     */\r\n    c1: number;\r\n\r\n    /**\r\n     * The last row of the selection.\r\n     *\r\n     * This may be less than `r1`.\r\n     */\r\n    r2: number;\r\n\r\n    /**\r\n     * The last column of the selection.\r\n     *\r\n     * This may be less than `c1`.\r\n     */\r\n    c2: number;\r\n\r\n    /**\r\n     * The row index for the cursor.\r\n     *\r\n     * This should be contained within the selection.\r\n     */\r\n    cursorRow: number;\r\n\r\n    /**\r\n     * The column index for the cursor.\r\n     *\r\n     * This should be contained within the selection.\r\n     */\r\n    cursorColumn: number;\r\n\r\n    /**\r\n     * Which of the existing selections to clear.\r\n     */\r\n    clear: ClearMode;\r\n  };\r\n\r\n  /**\r\n   * A type alias for a selection in a selection model.\r\n   */\r\n  export\r\n  type Selection = {\r\n    /**\r\n     * The first row of the selection.\r\n     *\r\n     * This may be greater than `r2`.\r\n     */\r\n    readonly r1: number;\r\n\r\n    /**\r\n     * The first column of the selection.\r\n     *\r\n     * This may be greater than `c2`.\r\n     */\r\n    readonly c1: number;\r\n\r\n    /**\r\n     * The last row of the selection.\r\n     *\r\n     * This may be less than `r1`.\r\n     */\r\n    readonly r2: number;\r\n\r\n    /**\r\n     * The last column of the selection.\r\n     *\r\n     * This may be less than `c1`.\r\n     */\r\n    readonly c2: number;\r\n  };\r\n\r\n  /**\r\n   * An options object for initializing a selection model.\r\n   */\r\n  export\r\n  interface IOptions {\r\n    /**\r\n     * The data model for the selection model.\r\n     */\r\n    dataModel: DataModel;\r\n\r\n    /**\r\n     * The selection mode for the model.\r\n     *\r\n     * The default is `'cell'`.\r\n     */\r\n    selectionMode?: SelectionMode;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Test whether a selection contains a given row.\r\n   */\r\n  export\r\n  function containsRow(selection: SelectionModel.Selection, row: number): boolean {\r\n    let { r1, r2 } = selection;\r\n    return (row >= r1 && row <= r2) || (row >= r2 && row <= r1);\r\n  }\r\n\r\n  /**\r\n   * Test whether a selection contains a given column.\r\n   */\r\n  export\r\n  function containsColumn(selection: SelectionModel.Selection, column: number): boolean {\r\n    let { c1, c2 } = selection;\r\n    return (column >= c1 && column <= c2) || (column >= c2 && column <= c1);\r\n  }\r\n\r\n  /**\r\n   * Test whether a selection contains a given cell.\r\n   */\r\n  export\r\n  function containsCell(selection: SelectionModel.Selection, row: number, column: number): boolean {\r\n    return containsRow(selection, row) && containsColumn(selection, column);\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  IIterator, iter\r\n} from '@lumino/algorithm';\r\n\r\nimport {\r\n  DataModel\r\n} from './datamodel';\r\n\r\nimport {\r\n  SelectionModel\r\n} from './selectionmodel';\r\n\r\n\r\n/**\r\n * A basic selection model implementation.\r\n *\r\n * #### Notes\r\n * This selection model is sufficient for most use cases where\r\n * structural knowledge of the data source is *not* required.\r\n */\r\nexport\r\nclass BasicSelectionModel extends SelectionModel {\r\n  /**\r\n   * Wether the selection model is empty.\r\n   */\r\n  get isEmpty(): boolean {\r\n    return this._selections.length === 0;\r\n  }\r\n\r\n  /**\r\n   * The row index of the cursor.\r\n   */\r\n  get cursorRow(): number {\r\n    return this._cursorRow;\r\n  }\r\n\r\n  /**\r\n   * The column index of the cursor.\r\n   */\r\n  get cursorColumn(): number {\r\n    return this._cursorColumn;\r\n  }\r\n\r\n  /**\r\n   * Move cursor down/up/left/right while making sure it remains\r\n   * within the bounds of selected rectangles\r\n   * \r\n   * @param direction - The direction of the movement.\r\n   */\r\n  moveCursorWithinSelections(direction: SelectionModel.CursorMoveDirection): void {\r\n    // Bail early if there are no selections or no existing cursor\r\n    if (this.isEmpty || this.cursorRow === -1 || this._cursorColumn === -1) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if only single cell is selected\r\n    const firstSelection = this._selections[0];\r\n    if (this._selections.length === 1 &&\r\n      firstSelection.r1 === firstSelection.r2 &&\r\n      firstSelection.c1 === firstSelection.c2) {\r\n      return;\r\n    }\r\n\r\n    // start from last selection rectangle\r\n    if (this._cursorRectIndex === -1) {\r\n      this._cursorRectIndex = this._selections.length - 1;\r\n    }\r\n\r\n    let cursorRect = this._selections[this._cursorRectIndex];\r\n    const dr = direction === 'down' ? 1 : direction === 'up' ? -1 : 0;\r\n    const dc = direction === 'right' ? 1 : direction === 'left' ? -1 : 0;\r\n    let newRow = this._cursorRow + dr;\r\n    let newColumn = this._cursorColumn + dc;\r\n    const r1 = Math.min(cursorRect.r1, cursorRect.r2);\r\n    const r2 = Math.max(cursorRect.r1, cursorRect.r2);\r\n    const c1 = Math.min(cursorRect.c1, cursorRect.c2);\r\n    const c2 = Math.max(cursorRect.c1, cursorRect.c2);\r\n\r\n    const moveToNextRect = () => {\r\n      this._cursorRectIndex = (this._cursorRectIndex + 1) % this._selections.length;\r\n      cursorRect = this._selections[this._cursorRectIndex];\r\n      newRow = Math.min(cursorRect.r1, cursorRect.r2);\r\n      newColumn = Math.min(cursorRect.c1, cursorRect.c2);\r\n    };\r\n    \r\n    const moveToPreviousRect = () => {\r\n      this._cursorRectIndex = this._cursorRectIndex === 0 ? this._selections.length - 1 : this._cursorRectIndex - 1;\r\n      cursorRect = this._selections[this._cursorRectIndex];\r\n      newRow = Math.max(cursorRect.r1, cursorRect.r2);\r\n      newColumn = Math.max(cursorRect.c1, cursorRect.c2);\r\n    };\r\n\r\n    if (newRow > r2) {\r\n      newRow = r1;\r\n      newColumn += 1;\r\n      if (newColumn > c2) {\r\n        moveToNextRect();\r\n      }\r\n    } else if (newRow < r1) {\r\n      newRow = r2;\r\n      newColumn -= 1;\r\n      if (newColumn < c1) {\r\n        moveToPreviousRect();\r\n      }\r\n    } else if (newColumn > c2) {\r\n      newColumn = c1;\r\n      newRow += 1;\r\n      if (newRow > r2) {\r\n        moveToNextRect();\r\n      }\r\n    } else if (newColumn < c1) {\r\n      newColumn = c2;\r\n      newRow -= 1;\r\n      if (newRow < r1) {\r\n        moveToPreviousRect();\r\n      }\r\n    }\r\n\r\n    this._cursorRow = newRow;\r\n    this._cursorColumn = newColumn;\r\n\r\n    // Emit the changed signal.\r\n    this.emitChanged();\r\n  }\r\n\r\n  /**\r\n   * Get the current selection in the selection model.\r\n   *\r\n   * @returns The current selection or `null`.\r\n   *\r\n   * #### Notes\r\n   * This is the selection which holds the cursor.\r\n   */\r\n  currentSelection(): SelectionModel.Selection | null {\r\n    return this._selections[this._selections.length - 1] || null;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator of the selections in the model.\r\n   *\r\n   * @returns A new iterator of the current selections.\r\n   *\r\n   * #### Notes\r\n   * The data grid will render the selections in order.\r\n   */\r\n  selections(): IIterator<SelectionModel.Selection> {\r\n    return iter(this._selections);\r\n  }\r\n\r\n  /**\r\n   * Select the specified cells.\r\n   *\r\n   * @param args - The arguments for the selection.\r\n   */\r\n  select(args: SelectionModel.SelectArgs): void {\r\n    // Fetch the current row and column counts;\r\n    let rowCount = this.dataModel.rowCount('body');\r\n    let columnCount = this.dataModel.columnCount('body');\r\n\r\n    // Bail early if there is no content.\r\n    if (rowCount <= 0 || columnCount <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Unpack the arguments.\r\n    let { r1, c1, r2, c2, cursorRow, cursorColumn, clear } = args;\r\n\r\n    // Clear the necessary selections.\r\n    if (clear === 'all') {\r\n      this._selections.length = 0;\r\n    } else if (clear === 'current') {\r\n      this._selections.pop();\r\n    }\r\n\r\n    // Clamp to the data model bounds.\r\n    r1 = Math.max(0, Math.min(r1, rowCount - 1));\r\n    r2 = Math.max(0, Math.min(r2, rowCount - 1));\r\n    c1 = Math.max(0, Math.min(c1, columnCount - 1));\r\n    c2 = Math.max(0, Math.min(c2, columnCount - 1));\r\n\r\n    // Handle the selection mode.\r\n    if (this.selectionMode === 'row') {\r\n      c1 = 0;\r\n      c2 = columnCount - 1;\r\n    } else if (this.selectionMode === 'column') {\r\n      r1 = 0;\r\n      r2 = rowCount - 1;\r\n    }\r\n\r\n    // Alias the cursor row and column.\r\n    let cr = cursorRow;\r\n    let cc = cursorColumn;\r\n\r\n    // Compute the new cursor location.\r\n    if (cr < 0 || (cr < r1 && cr < r2) || (cr > r1 && cr > r2)) {\r\n      cr = r1;\r\n    }\r\n    if (cc < 0 || (cc < c1 && cc < c2) || (cc > c1 && cc > c2)) {\r\n      cc = c1;\r\n    }\r\n\r\n    // Update the cursor.\r\n    this._cursorRow = cr;\r\n    this._cursorColumn = cc;\r\n    this._cursorRectIndex = this._selections.length;\r\n\r\n    // Add the new selection.\r\n    this._selections.push({ r1, c1, r2, c2 });\r\n\r\n    // Emit the changed signal.\r\n    this.emitChanged();\r\n  }\r\n\r\n  /**\r\n   * Clear all selections in the selection model.\r\n   */\r\n  clear(): void {\r\n    // Bail early if there are no selections.\r\n    if (this._selections.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Reset the internal state.\r\n    this._cursorRow = -1;\r\n    this._cursorColumn = -1;\r\n    this._cursorRectIndex = -1;\r\n    this._selections.length = 0;\r\n\r\n    // Emit the changed signal.\r\n    this.emitChanged();\r\n  }\r\n\r\n  /**\r\n   * A signal handler for the data model `changed` signal.\r\n   *\r\n   * @param args - The arguments for the signal.\r\n   */\r\n  protected onDataModelChanged(sender: DataModel, args: DataModel.ChangedArgs): void {\r\n    // Bail early if the model has no current selections.\r\n    if (this._selections.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if the cells have changed in place.\r\n    if (args.type === 'cells-changed') {\r\n      return;\r\n    }\r\n\r\n    // Bail early if there is no change to the row or column count.\r\n    if (args.type === 'rows-moved' || args.type === 'columns-moved') {\r\n      return;\r\n    }\r\n\r\n    // Fetch the last row and column index.\r\n    let lr = sender.rowCount('body') - 1;\r\n    let lc = sender.columnCount('body') - 1;\r\n\r\n    // Bail early if the data model is empty.\r\n    if (lr < 0 || lc < 0) {\r\n      this._selections.length = 0;\r\n      this.emitChanged();\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection mode.\r\n    let mode = this.selectionMode;\r\n\r\n    // Set up the assignment index variable.\r\n    let j = 0;\r\n\r\n    // Iterate over the current selections.\r\n    for (let i = 0, n = this._selections.length; i < n; ++i) {\r\n      // Unpack the selection.\r\n      let { r1, c1, r2, c2 } = this._selections[i];\r\n\r\n      // Skip the selection if it will disappear.\r\n      if ((lr < r1 && lr < r2) || (lc < c1 && lc < c2)) {\r\n        continue;\r\n      }\r\n\r\n      // Modify the bounds based on the selection mode.\r\n      if (mode === 'row') {\r\n        r1 = Math.max(0, Math.min(r1, lr));\r\n        r2 = Math.max(0, Math.min(r2, lr));\r\n        c1 = 0;\r\n        c2 = lc;\r\n      } else if (mode === 'column') {\r\n        r1 = 0;\r\n        r2 = lr;\r\n        c1 = Math.max(0, Math.min(c1, lc));\r\n        c2 = Math.max(0, Math.min(c2, lc));\r\n      } else {\r\n        r1 = Math.max(0, Math.min(r1, lr));\r\n        r2 = Math.max(0, Math.min(r2, lr));\r\n        c1 = Math.max(0, Math.min(c1, lc));\r\n        c2 = Math.max(0, Math.min(c2, lc));\r\n      }\r\n\r\n      // Assign the modified selection to the array.\r\n      this._selections[j++] = { r1, c1, r2, c2 };\r\n    }\r\n\r\n    // Remove the stale selections.\r\n    this._selections.length = j;\r\n\r\n    // Emit the changed signal.\r\n    this.emitChanged();\r\n  }\r\n\r\n  private _cursorRow = -1;\r\n  private _cursorColumn = -1;\r\n  private _cursorRectIndex = -1;\r\n  private _selections: SelectionModel.Selection[] = [];\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  DataModel\r\n} from './datamodel';\r\n\r\nimport {\r\n  GraphicsContext\r\n} from './graphicscontext';\r\n\r\n\r\n/**\r\n * An object which renders the cells of a data grid.\r\n *\r\n * #### Notes\r\n * If the predefined cell renderers are insufficient for a particular\r\n * use case, a custom cell renderer can be defined which derives from\r\n * this class.\r\n *\r\n * The data grid renders cells in column-major order, by region. The\r\n * region order is: body, row header, column header, corner header.\r\n */\r\nexport\r\nabstract class CellRenderer {\r\n  /**\r\n   * Paint the content for a cell.\r\n   *\r\n   * @param gc - The graphics context to use for drawing.\r\n   *\r\n   * @param config - The configuration data for the cell.\r\n   *\r\n   * #### Notes\r\n   * The grid will save/restore the `gc` state before/after invoking\r\n   * the renderer.\r\n   *\r\n   * For performance, the cell content is efficiently clipped to the\r\n   * width of the column, but *the height is not clipped*. If height\r\n   * clipping is needed, the renderer must set up its own clip rect.\r\n   *\r\n   * The renderer **must not** draw outside the cell bounding height.\r\n   */\r\n  abstract paint(gc: GraphicsContext, config: CellRenderer.CellConfig): void;\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `CellRenderer` class statics.\r\n */\r\nexport\r\nnamespace CellRenderer {\r\n  /**\r\n   * An object which holds the configuration data for a cell.\r\n   */\r\n  export\r\n  type CellConfig = {\r\n    /**\r\n     * The X position of the cell rectangle, in viewport coordinates.\r\n     */\r\n    readonly x: number;\r\n\r\n    /**\r\n     * The Y position of the cell rectangle, in viewport coordinates.\r\n     */\r\n    readonly y: number;\r\n\r\n    /**\r\n     * The height of the cell rectangle, in viewport pixels.\r\n     */\r\n    readonly height: number;\r\n\r\n    /**\r\n     * The width of the cell rectangle, in viewport pixels.\r\n     */\r\n    readonly width: number;\r\n\r\n    /**\r\n     * The region for the cell.\r\n     */\r\n    readonly region: DataModel.CellRegion;\r\n\r\n    /**\r\n     * The row index of the cell.\r\n     */\r\n    readonly row: number;\r\n\r\n    /**\r\n     * The column index of the cell.\r\n     */\r\n    readonly column: number;\r\n\r\n    /**\r\n     * The value for the cell.\r\n     */\r\n    readonly value: any;\r\n\r\n    /**\r\n     * The metadata for the cell.\r\n     */\r\n    readonly metadata: DataModel.Metadata;\r\n  };\r\n\r\n  /**\r\n   * A type alias for a cell renderer config function.\r\n   *\r\n   * This type is used to compute a value from a cell config object.\r\n   */\r\n  export\r\n  type ConfigFunc<T> = (config: CellConfig) => T;\r\n\r\n  /**\r\n   * A type alias for a cell renderer config option.\r\n   *\r\n   * A config option can be a static value or a config function.\r\n   */\r\n  export\r\n  type ConfigOption<T> = T | ConfigFunc<T>;\r\n\r\n  /**\r\n   * Resolve a config option for a cell renderer.\r\n   *\r\n   * @param option - The config option to resolve.\r\n   *\r\n   * @param config - The cell config object.\r\n   *\r\n   * @returns The resolved value for the option.\r\n   */\r\n  export\r\n  function resolveOption<T>(option: ConfigOption<T>, config: CellConfig): T {\r\n    return typeof option === 'function' ? (option as ConfigFunc<T>)(config) : option;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\nimport {\r\n  Message\r\n} from '@lumino/messaging';\r\n\r\nimport {\r\n  Widget\r\n} from '@lumino/widgets';\r\n\r\n\r\n/**\r\n * A widget which implements a notification popup.\r\n */\r\nexport\r\nclass Notification extends Widget {\r\n  /**\r\n   * Construct a new notification.\r\n   *\r\n   * @param options - The options for initializing the notification.\r\n   */\r\n  constructor(options: Notification.IOptions) {\r\n    super({ node: Private.createNode() });\r\n    this.addClass('lm-DataGrid-notification');\r\n    this.setFlag(Widget.Flag.DisallowLayout);\r\n\r\n    this._target = options.target;\r\n    this._message = options.message || '';\r\n    this._placement = options.placement || 'bottom';\r\n\r\n    Widget.attach(this, document.body);\r\n\r\n    if (options.timeout && options.timeout > 0) {\r\n      setTimeout(() => {\r\n        this.close();\r\n      }, options.timeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the notification.\r\n   *\r\n   * @param event - The DOM event sent to the notification.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the notification's DOM node.\r\n   *\r\n   * This should not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n    case 'mousedown':\r\n      this._evtMouseDown(event as MouseEvent);\r\n      break;\r\n    case 'contextmenu':\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the placement of the notification.\r\n   */\r\n  get placement(): Notification.Placement {\r\n    return this._placement;\r\n  }\r\n\r\n  /**\r\n   * Set the placement of the notification.\r\n   */\r\n  set placement(value: Notification.Placement) {\r\n    // Do nothing if the placement does not change.\r\n    if (this._placement === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal placement.\r\n    this._placement = value;\r\n\r\n    // Schedule an update for notification.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Get the current value of the message.\r\n   */\r\n  get message(): string {\r\n    return this._message;\r\n  }\r\n\r\n  /**\r\n   * Set the current value of the message.\r\n   *\r\n   */\r\n  set message(value: string) {\r\n    // Do nothing if the value does not change.\r\n    if (this._message === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal value.\r\n    this._message = value;\r\n\r\n    // Schedule an update for notification.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Get the node presenting the message.\r\n   */\r\n  get messageNode(): HTMLSpanElement {\r\n    return this.node.getElementsByClassName('lm-DataGrid-notificationMessage')[0] as HTMLSpanElement;\r\n  }\r\n\r\n  /**\r\n   * A method invoked on a 'before-attach' message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('mousedown', this);\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * A method invoked on an 'after-detach' message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('mousedown', this);\r\n  }\r\n\r\n  /**\r\n   * A method invoked on an 'update-request' message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    const targetRect = this._target.getBoundingClientRect();\r\n    const style = this.node.style;\r\n\r\n    switch (this._placement) {\r\n      case 'bottom':\r\n        style.left = targetRect.left + 'px';\r\n        style.top = targetRect.bottom + 'px';\r\n        break;\r\n      case 'top':\r\n        style.left = targetRect.left + 'px';\r\n        style.height = targetRect.top + 'px';\r\n        style.top = '0';\r\n        style.alignItems = 'flex-end';\r\n        style.justifyContent = 'flex-end';\r\n        break;\r\n      case 'left':\r\n        style.left = '0';\r\n        style.width = targetRect.left + 'px';\r\n        style.top = targetRect.top + 'px';\r\n        style.alignItems = 'flex-end';\r\n        style.justifyContent = 'flex-end';\r\n        break;\r\n      case 'right':\r\n        style.left = targetRect.right + 'px';\r\n        style.top = targetRect.top + 'px';\r\n        break;\r\n    }\r\n\r\n    this.messageNode.innerHTML = this._message;\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the notification.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Do nothing if it's not a left mouse press.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.close();\r\n  }\r\n\r\n  private _target: HTMLElement;\r\n  private _message: string = '';\r\n  private _placement: Notification.Placement;\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `Notification` class statics.\r\n */\r\nexport\r\nnamespace Notification {\r\n  /**\r\n   * A type alias for a notification placement.\r\n   */\r\n  export\r\n  type Placement = 'top' | 'bottom' | 'left' | 'right';\r\n\r\n  /**\r\n   * An options object for creating a notification.\r\n   */\r\n  export\r\n  interface IOptions {\r\n    /**\r\n     * Target element to attach notification to.\r\n     *\r\n     */\r\n    target: HTMLElement;\r\n\r\n    /**\r\n     * The message to show on notification.\r\n     */\r\n    message?: string;\r\n\r\n    /**\r\n     * The placement of the notification.\r\n     *\r\n     * The default is `'bottom'`.\r\n     */\r\n    placement?: Placement;\r\n\r\n    /**\r\n     * Duration in ms after which to close notification popup.\r\n     *\r\n     * The default is undefined, and notification is kept visible\r\n     * Timeout value needs to be greater than zero\r\n     */\r\n    timeout?: number;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Create the DOM node for notification.\r\n   */\r\n  export\r\n  function createNode(): HTMLElement {\r\n    const node = document.createElement('div');\r\n    const container = document.createElement('div');\r\n    container.className = 'lm-DataGrid-notificationContainer';\r\n    const message = document.createElement('span');\r\n    message.className = 'lm-DataGrid-notificationMessage';\r\n    container.appendChild(message);\r\n    node.appendChild(container);\r\n\r\n    return node;\r\n  }\r\n}\r\n","/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  IDisposable\r\n} from '@lumino/disposable';\r\n\r\nimport {\r\n  DataGrid\r\n} from './datagrid';\r\n\r\nimport {\r\n  SelectionModel\r\n} from './selectionmodel';\r\n\r\nimport {\r\n  getKeyboardLayout\r\n} from '@lumino/keyboard';\r\n\r\nimport {\r\n  Signal\r\n} from '@lumino/signaling';\r\n\r\nimport {\r\n  Notification\r\n} from './notification';\r\n\r\n/**\r\n * A response object returned from cell input validator\r\n */\r\nexport\r\ninterface ICellInputValidatorResponse {\r\n  /**\r\n   * Flag indicating cell input is valid or not\r\n   */\r\n  valid: boolean;\r\n  /**\r\n   * Validation error message. Set only when input is invalid\r\n   */\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * An object which validates cell input values.\r\n */\r\nexport\r\ninterface ICellInputValidator {\r\n  /**\r\n   * Validate cell input.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param value - The cell value input.\r\n   *\r\n   * @returns An object with validation result.\r\n   */\r\n  validate(cell: CellEditor.CellConfig, value: any): ICellInputValidatorResponse;\r\n}\r\n\r\n/**\r\n * An object returned from cell editor after a successful edit.\r\n */\r\nexport\r\ninterface ICellEditResponse {\r\n  /**\r\n   * An object which holds the configuration data for a cell.\r\n   */\r\n  cell: CellEditor.CellConfig;\r\n  /**\r\n   * Value input.\r\n   */\r\n  value: any;\r\n  /**\r\n   * Cursor move direction based on keys pressed to end the edit.\r\n   */\r\n  cursorMovement: SelectionModel.CursorMoveDirection;\r\n}\r\n\r\n/**\r\n * An object implementing cell editing.\r\n */\r\nexport\r\ninterface ICellEditor {\r\n  /**\r\n   * Start editing the cell.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param options - The cell editing options.\r\n   */\r\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): void;\r\n  /**\r\n   * Cancel editing the cell.\r\n   */\r\n  cancel(): void;\r\n}\r\n\r\n// default validation error message\r\nconst DEFAULT_INVALID_INPUT_MESSAGE = \"Invalid input!\";\r\n\r\n// A type alias for available cell data types\r\nexport\r\ntype CellDataType = 'string' | 'number' | 'integer' | 'boolean' | 'date' |\r\n                    'string:option' | 'number:option' | 'integer:option'| 'date:option'|\r\n                    'string:dynamic-option' | 'number:dynamic-option' | 'integer:dynamic-option' | 'date:dynamic-option';\r\n\r\n/**\r\n * An object containing cell editing options.\r\n */\r\nexport\r\ninterface ICellEditOptions {\r\n  /**\r\n   * Cell editor to use for editing.\r\n   * \r\n   * #### Notes\r\n   * This object is only used by cell editor controller.\r\n   * If not set, controller picks the most suitable editor\r\n   * for the particular cell configuration.\r\n   */\r\n  editor?: ICellEditor;\r\n  /**\r\n   * Cell input validator to use for value validation.\r\n   */\r\n  validator?: ICellInputValidator;\r\n  /**\r\n   * Callback method to call on cell edit commit.\r\n   */\r\n  onCommit?: (response: ICellEditResponse) => void;\r\n  /**\r\n   * Callback method to call on cell edit cancel.\r\n   */\r\n  onCancel?: () => void;\r\n}\r\n\r\n/**\r\n * A cell input validator object which always returns valid.\r\n */\r\nexport\r\nclass PassInputValidator implements ICellInputValidator {\r\n  /**\r\n   * Validate cell input.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param value - The cell value input.\r\n   *\r\n   * @returns An object with validation result.\r\n   */\r\n  validate(cell: CellEditor.CellConfig, value: any): ICellInputValidatorResponse {\r\n    return { valid: true };\r\n  }\r\n}\r\n\r\n/**\r\n * Text cell input validator.\r\n */\r\nexport\r\nclass TextInputValidator implements ICellInputValidator {\r\n  /**\r\n   * Validate cell input.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param value - The cell value input.\r\n   *\r\n   * @returns An object with validation result.\r\n   */\r\n  validate(cell: CellEditor.CellConfig, value: string): ICellInputValidatorResponse {\r\n    if (value === null) {\r\n      return { valid: true };\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      return {\r\n        valid: false,\r\n        message: 'Input must be valid text'\r\n      };\r\n    }\r\n\r\n    if (!isNaN(this.minLength) && value.length < this.minLength) {\r\n      return {\r\n        valid: false,\r\n        message: `Text length must be greater than ${this.minLength}`\r\n      };\r\n    }\r\n\r\n    if (!isNaN(this.maxLength) && value.length > this.maxLength) {\r\n      return {\r\n        valid: false,\r\n        message: `Text length must be less than ${this.maxLength}`\r\n      };\r\n    }\r\n\r\n    if (this.pattern && !this.pattern.test(value)) {\r\n      return {\r\n        valid: false,\r\n        message: `Text doesn't match the required pattern`\r\n      };\r\n    }\r\n\r\n    return { valid: true };\r\n  }\r\n\r\n  /**\r\n   * Minimum text length\r\n   * \r\n   * The default is Number.NaN, meaning no minimum constraint\r\n   */\r\n  minLength: number = Number.NaN;\r\n  /**\r\n   * Maximum text length\r\n   * \r\n   * The default is Number.NaN, meaning no maximum constraint\r\n   */\r\n  maxLength: number = Number.NaN;\r\n  /**\r\n   * Required text pattern as regular expression\r\n   * \r\n   * The default is null, meaning no pattern constraint\r\n   */\r\n  pattern: RegExp | null = null;\r\n}\r\n\r\n/**\r\n * Integer cell input validator.\r\n */\r\nexport\r\nclass IntegerInputValidator implements ICellInputValidator {\r\n  /**\r\n   * Validate cell input.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param value - The cell value input.\r\n   *\r\n   * @returns An object with validation result.\r\n   */\r\n  validate(cell: CellEditor.CellConfig, value: number): ICellInputValidatorResponse {\r\n    if (value === null) {\r\n      return { valid: true };\r\n    }\r\n\r\n    if (isNaN(value) || (value % 1 !== 0)) {\r\n      return {\r\n        valid: false,\r\n        message: 'Input must be valid integer'\r\n      };\r\n    }\r\n\r\n    if (!isNaN(this.min) && value < this.min) {\r\n      return {\r\n        valid: false,\r\n        message: `Input must be greater than ${this.min}`\r\n      };\r\n    }\r\n\r\n    if (!isNaN(this.max) && value > this.max) {\r\n      return {\r\n        valid: false,\r\n        message: `Input must be less than ${this.max}`\r\n      };\r\n    }\r\n\r\n    return { valid: true };\r\n  }\r\n\r\n  /**\r\n   * Minimum value\r\n   * \r\n   * The default is Number.NaN, meaning no minimum constraint\r\n   */\r\n  min: number = Number.NaN;\r\n  /**\r\n   * Maximum value\r\n   * \r\n   * The default is Number.NaN, meaning no maximum constraint\r\n   */\r\n  max: number = Number.NaN;\r\n}\r\n\r\n/**\r\n * Real number cell input validator.\r\n */\r\nexport\r\nclass NumberInputValidator implements ICellInputValidator {\r\n  /**\r\n   * Validate cell input.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param value - The cell value input.\r\n   *\r\n   * @returns An object with validation result.\r\n   */\r\n  validate(cell: CellEditor.CellConfig, value: number): ICellInputValidatorResponse {\r\n    if (value === null) {\r\n      return { valid: true };\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n      return {\r\n        valid: false,\r\n        message: 'Input must be valid number'\r\n      };\r\n    }\r\n\r\n    if (!isNaN(this.min) && value < this.min) {\r\n      return {\r\n        valid: false,\r\n        message: `Input must be greater than ${this.min}`\r\n      };\r\n    }\r\n\r\n    if (!isNaN(this.max) && value > this.max) {\r\n      return {\r\n        valid: false,\r\n        message: `Input must be less than ${this.max}`\r\n      };\r\n    }\r\n\r\n    return { valid: true };\r\n  }\r\n\r\n  /**\r\n   * Minimum value\r\n   * \r\n   * The default is Number.NaN, meaning no minimum constraint\r\n   */\r\n  min: number = Number.NaN;\r\n  /**\r\n   * Maximum value\r\n   * \r\n   * The default is Number.NaN, meaning no maximum constraint\r\n   */\r\n  max: number = Number.NaN;\r\n}\r\n\r\n\r\n/**\r\n * An abstract base class that provides the most of the functionality\r\n * needed by a cell editor. All of the built-in cell editors\r\n * for various cell types are derived from this base class. Custom cell editors\r\n * can be easily implemented by extending this class.\r\n */\r\nexport\r\nabstract class CellEditor implements ICellEditor, IDisposable {\r\n  /**\r\n   * Construct a new cell editor.\r\n   */\r\n  constructor() {\r\n    this.inputChanged.connect(() => {\r\n      this.validate();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Whether the cell editor is disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by cell editor.\r\n   */\r\n  dispose(): void {\r\n    if (this._disposed) {\r\n      return;\r\n    }\r\n\r\n    if (this._gridWheelEventHandler) {\r\n      this.cell.grid.node.removeEventListener('wheel', this._gridWheelEventHandler);\r\n      this._gridWheelEventHandler = null;\r\n    }\r\n\r\n    this._closeValidityNotification();\r\n\r\n    this._disposed = true;\r\n    this.cell.grid.node.removeChild(this.viewportOccluder);\r\n  }\r\n\r\n  /**\r\n   * Start editing the cell.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param options - The cell editing options.\r\n   */\r\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): void {\r\n    this.cell = cell;\r\n    this.onCommit = options && options.onCommit;\r\n    this.onCancel = options && options.onCancel;\r\n\r\n    this.validator = (options && options.validator) ? options.validator : this.createValidatorBasedOnType();\r\n\r\n    this._gridWheelEventHandler = () => {\r\n      this._closeValidityNotification();\r\n      this.updatePosition();\r\n    };\r\n\r\n    cell.grid.node.addEventListener('wheel', this._gridWheelEventHandler);\r\n\r\n    this._addContainer();\r\n\r\n    this.updatePosition();\r\n    this.startEditing();\r\n  }\r\n\r\n  /**\r\n   * Cancel editing the cell.\r\n   */\r\n  cancel() {\r\n    if (this._disposed) {\r\n      return;\r\n    }\r\n\r\n    this.dispose();\r\n    if (this.onCancel) {\r\n      this.onCancel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start editing the cell. Usually an editor widget is created and\r\n   *  added to `editorContainer`\r\n   */\r\n  protected abstract startEditing(): void;\r\n  /**\r\n   * Return the current input entered. This method throws exceptions\r\n   * if input is invalid. Error message in exception is shown as notification.\r\n   */\r\n  protected abstract getInput(): any;\r\n\r\n  /**\r\n   * Whether the value input is valid.\r\n   */\r\n  protected get validInput(): boolean {\r\n    return this._validInput;\r\n  }\r\n\r\n  /**\r\n   * Validate the cell input. Shows validation error notification when input is invalid.\r\n   */\r\n  protected validate() {\r\n    let value;\r\n    try {\r\n      value = this.getInput();\r\n    } catch (error) {\r\n      console.log(`Input error: ${error.message}`);\r\n      this.setValidity(false, error.message || DEFAULT_INVALID_INPUT_MESSAGE);\r\n      return;\r\n    }\r\n\r\n    if (this.validator) {\r\n      const result = this.validator.validate(this.cell, value);\r\n      if (result.valid) {\r\n        this.setValidity(true);\r\n      } else {\r\n        this.setValidity(false, result.message || DEFAULT_INVALID_INPUT_MESSAGE);\r\n      }\r\n    } else {\r\n      this.setValidity(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set validity flag.\r\n   *\r\n   * @param valid - Whether the input is valid.\r\n   *\r\n   * @param message - Notification message to show.\r\n   * \r\n   * If message is set to empty string (which is the default)\r\n   * existing notification popup is removed if any.\r\n   */\r\n  protected setValidity(valid: boolean, message: string = \"\") {\r\n    this._validInput = valid;\r\n\r\n    this._closeValidityNotification();\r\n\r\n    if (valid) {\r\n      this.editorContainer.classList.remove('lm-mod-invalid');\r\n    } else {\r\n      this.editorContainer.classList.add('lm-mod-invalid');\r\n\r\n      // show a notification popup\r\n      if (message !== \"\") {\r\n        this.validityNotification = new Notification({\r\n          target: this.editorContainer,\r\n          message: message,\r\n          placement: 'bottom',\r\n          timeout: 5000\r\n        });\r\n        this.validityNotification.show();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create and return a cell input validator based on configuration of the\r\n   * cell being edited. If no suitable validator can be found, it returns undefined.\r\n   */\r\n  protected createValidatorBasedOnType(): ICellInputValidator | undefined {\r\n    const cell = this.cell;\r\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\r\n\r\n    switch (metadata && metadata.type) {\r\n      case 'string':\r\n        {\r\n          const validator = new TextInputValidator();\r\n          if (typeof(metadata!.format) === 'string') {\r\n            const format = metadata!.format;\r\n            switch (format) {\r\n              case 'email':\r\n                validator.pattern = new RegExp(\"^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$\");\r\n                break;\r\n              case 'uuid':\r\n                validator.pattern = new RegExp(\"[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}\");\r\n                break;\r\n              case 'uri':\r\n                // TODO\r\n                break;\r\n              case 'binary':\r\n                // TODO\r\n                break;\r\n            }\r\n          }\r\n\r\n          if (metadata!.constraint) {\r\n            if (metadata!.constraint.minLength !== undefined) {\r\n              validator.minLength = metadata!.constraint.minLength;\r\n            }\r\n            if (metadata!.constraint.maxLength !== undefined) {\r\n              validator.maxLength = metadata!.constraint.maxLength;\r\n            }\r\n            if (typeof(metadata!.constraint.pattern) === 'string') {\r\n              validator.pattern = new RegExp(metadata!.constraint.pattern);\r\n            }\r\n          }\r\n          return validator;\r\n        }\r\n        break;\r\n      case 'number':\r\n        {\r\n          const validator = new NumberInputValidator();\r\n          if (metadata!.constraint) {\r\n            if (metadata!.constraint.minimum !== undefined) {\r\n              validator.min = metadata!.constraint.minimum;\r\n            }\r\n            if (metadata!.constraint.maximum !== undefined) {\r\n              validator.max = metadata!.constraint.maximum;\r\n            }\r\n          }\r\n          return validator;\r\n        }\r\n        break;\r\n      case 'integer':\r\n        {\r\n          const validator = new IntegerInputValidator();\r\n          if (metadata!.constraint) {\r\n            if (metadata!.constraint.minimum !== undefined) {\r\n              validator.min = metadata!.constraint.minimum;\r\n            }\r\n            if (metadata!.constraint.maximum !== undefined) {\r\n              validator.max = metadata!.constraint.maximum;\r\n            }\r\n          }\r\n          return validator;\r\n        }\r\n        break;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Compute cell rectangle and return with other cell properties.\r\n   */\r\n  protected getCellInfo(cell: CellEditor.CellConfig): Private.ICellInfo {\r\n    const { grid, row, column } = cell;\r\n    const data = grid.dataModel!.data('body', row, column);\r\n\r\n    const columnX = grid.headerWidth - grid.scrollX + grid.columnOffset('body', column);\r\n    const rowY = grid.headerHeight - grid.scrollY + grid.rowOffset('body', row);\r\n    const width = grid.columnSize('body', column);\r\n    const height = grid.rowSize('body', row);\r\n\r\n    return {\r\n      grid: grid,\r\n      row: row,\r\n      column: column,\r\n      data: data,\r\n      x: columnX,\r\n      y: rowY,\r\n      width: width,\r\n      height: height\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reposition cell editor by moving viewport occluder and cell editor container.\r\n   */\r\n  protected updatePosition(): void {\r\n    const grid = this.cell.grid;\r\n    const cellInfo = this.getCellInfo(this.cell);\r\n    const headerHeight = grid.headerHeight;\r\n    const headerWidth = grid.headerWidth;\r\n\r\n    this.viewportOccluder.style.top = headerHeight + 'px';\r\n    this.viewportOccluder.style.left = headerWidth + 'px';\r\n    this.viewportOccluder.style.width = (grid.viewportWidth - headerWidth) + 'px';\r\n    this.viewportOccluder.style.height = (grid.viewportHeight - headerHeight) + 'px';\r\n    this.viewportOccluder.style.position = 'absolute';\r\n\r\n    this.editorContainer.style.left = (cellInfo.x - 1 - headerWidth) + 'px';\r\n    this.editorContainer.style.top = (cellInfo.y - 1 - headerHeight) + 'px';\r\n    this.editorContainer.style.width = (cellInfo.width + 1) + 'px';\r\n    this.editorContainer.style.height = (cellInfo.height + 1) + 'px';\r\n    this.editorContainer.style.visibility = 'visible';\r\n    this.editorContainer.style.position = 'absolute';\r\n  }\r\n\r\n  /**\r\n   * Commit the edited value.\r\n   * \r\n   * @param cursorMovement - Cursor move direction based on keys pressed to end the edit.\r\n   * \r\n   * @returns true on valid input, false otherwise.\r\n   */\r\n  protected commit(cursorMovement: SelectionModel.CursorMoveDirection = 'none'): boolean {\r\n    this.validate();\r\n\r\n    if (!this._validInput) {\r\n      return false;\r\n    }\r\n\r\n    let value;\r\n    try {\r\n      value = this.getInput();\r\n    } catch (error) {\r\n      console.log(`Input error: ${error.message}`);\r\n      return false;\r\n    }\r\n\r\n    this.dispose();\r\n\r\n    if (this.onCommit) {\r\n      this.onCommit({\r\n        cell: this.cell,\r\n        value: value,\r\n        cursorMovement: cursorMovement\r\n      });\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Create container elements needed to prevent editor widget overflow\r\n   * beyond viewport and to position cell editor widget.\r\n   */\r\n  private _addContainer() {\r\n    this.viewportOccluder = document.createElement('div');\r\n    this.viewportOccluder.className = 'lm-DataGrid-cellEditorOccluder';\r\n    this.cell.grid.node.appendChild(this.viewportOccluder);\r\n\r\n    this.editorContainer = document.createElement('div');\r\n    this.editorContainer.className = 'lm-DataGrid-cellEditorContainer';\r\n    this.viewportOccluder.appendChild(this.editorContainer);\r\n\r\n    // update mouse event pass-through state based on input validity\r\n    this.editorContainer.addEventListener('mouseleave', (event: MouseEvent) => {\r\n      this.viewportOccluder.style.pointerEvents = this._validInput ? 'none' : 'auto';\r\n    });\r\n    this.editorContainer.addEventListener('mouseenter', (event: MouseEvent) => {\r\n      this.viewportOccluder.style.pointerEvents = 'none';\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove validity notification popup.\r\n   */\r\n  private _closeValidityNotification() {\r\n    if (this.validityNotification) {\r\n      this.validityNotification.close();\r\n      this.validityNotification = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when input changes.\r\n   */\r\n  protected inputChanged = new Signal<this, void>(this);\r\n  /**\r\n   * Callback method to call on cell edit commit.\r\n   */\r\n  protected onCommit?: (response: ICellEditResponse) => void;\r\n  /**\r\n   * Callback method to call on cell edit cancel.\r\n   */\r\n  protected onCancel?: () => void;\r\n  /**\r\n   * Cell configuration data for the cell being edited.\r\n   */\r\n  protected cell: CellEditor.CellConfig;\r\n  /**\r\n   * Cell input validator to use for the cell being edited.\r\n   */\r\n  protected validator: ICellInputValidator | undefined;\r\n  /**\r\n   * The div element used to prevent editor widget overflow beyond grid viewport.\r\n   */\r\n  protected viewportOccluder: HTMLDivElement;\r\n  /**\r\n   * The div element used to contain and position editor widget.\r\n   */\r\n  protected editorContainer: HTMLDivElement;\r\n  /**\r\n   * Notification popup used to show validation error messages.\r\n   */\r\n  protected validityNotification: Notification | null = null;\r\n  /**\r\n   * Whether the cell editor is disposed.\r\n   */\r\n  private _disposed = false;\r\n  /**\r\n   * Whether the value input is valid.\r\n   */\r\n  private _validInput: boolean = true;\r\n  /**\r\n   * Grid wheel event handler.\r\n   */\r\n  private _gridWheelEventHandler: ((this: HTMLElement, ev: WheelEvent) => any) | null = null;\r\n}\r\n\r\n/**\r\n * Abstract base class with shared functionality\r\n * for cell editors which use HTML Input widget as editor.\r\n */\r\nexport\r\nabstract class InputCellEditor extends CellEditor {\r\n  /**\r\n   * Handle the DOM events for the editor.\r\n   *\r\n   * @param event - The DOM event sent to the editor.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'keydown':\r\n        this._onKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'blur':\r\n        this._onBlur(event as FocusEvent);\r\n        break;\r\n      case 'input':\r\n        this._onInput(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by cell editor.\r\n   */\r\n  dispose() {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    this._unbindEvents();\r\n\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Start editing the cell.\r\n   */\r\n  protected startEditing() {\r\n    this.createWidget();\r\n\r\n    const cell = this.cell;\r\n    const cellInfo = this.getCellInfo(cell);\r\n    this.input.value = this.deserialize(cellInfo.data);\r\n    this.editorContainer.appendChild(this.input);\r\n    this.input.focus();\r\n    this.input.select();\r\n\r\n    this.bindEvents();\r\n  }\r\n\r\n  protected deserialize(value: any): any {\r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    }\r\n\r\n    return value.toString();\r\n  }\r\n\r\n  protected createWidget() {\r\n    const input = document.createElement('input');\r\n    input.classList.add('lm-DataGrid-cellEditorWidget');\r\n    input.classList.add('lm-DataGrid-cellEditorInput');\r\n    input.spellcheck = false;\r\n    input.type = this.inputType;\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  protected bindEvents() {\r\n    this.input.addEventListener('keydown', this);\r\n    this.input.addEventListener('blur', this);\r\n    this.input.addEventListener('input', this);\r\n  }\r\n\r\n  private _unbindEvents() {\r\n    this.input.removeEventListener('keydown', this);\r\n    this.input.removeEventListener('blur', this);\r\n    this.input.removeEventListener('input', this);\r\n  }\r\n\r\n  private _onKeyDown(event: KeyboardEvent) {\r\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\r\n      case 'Enter':\r\n        this.commit(event.shiftKey ? 'up' : 'down');\r\n        break;\r\n      case 'Tab':\r\n        this.commit(event.shiftKey ? 'left' : 'right');\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        break;\r\n      case 'Escape':\r\n        this.cancel();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onBlur(event: FocusEvent) {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    if (!this.commit()) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.input.focus();\r\n    }\r\n  }\r\n\r\n  private _onInput(event: Event) {\r\n    this.inputChanged.emit(void 0);\r\n  }\r\n\r\n  protected input: HTMLInputElement;\r\n  protected abstract inputType: string;\r\n}\r\n\r\n/**\r\n * Cell editor for text cells.\r\n */\r\nexport\r\nclass TextCellEditor extends InputCellEditor {\r\n  /**\r\n   * Return the current text input entered.\r\n   */\r\n  protected getInput(): string | null {\r\n    return this.input.value;\r\n  }\r\n\r\n  protected inputType: string = 'text';\r\n}\r\n\r\n/**\r\n * Cell editor for real number cells.\r\n */\r\nexport\r\nclass NumberCellEditor extends InputCellEditor {\r\n  /**\r\n   * Start editing the cell.\r\n   */\r\n  protected startEditing() {\r\n    super.startEditing();\r\n\r\n    this.input.step = 'any';\r\n\r\n    const cell = this.cell;\r\n\r\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\r\n    const constraint = metadata.constraint;\r\n    if (constraint) {\r\n      if (constraint.minimum) {\r\n        this.input.min = constraint.minimum;\r\n      }\r\n      if (constraint.maximum) {\r\n        this.input.max = constraint.maximum;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the current number input entered. This method throws exception\r\n   * if input is invalid.\r\n   */\r\n  protected getInput(): number | null {\r\n    let value = this.input.value;\r\n    if (value.trim() === '') {\r\n      return null;\r\n    }\r\n\r\n    const floatValue = parseFloat(value);\r\n    if (isNaN(floatValue)) {\r\n      throw new Error('Invalid input');\r\n    }\r\n\r\n    return floatValue;\r\n  }\r\n\r\n  protected inputType: string = 'number';\r\n}\r\n\r\n/**\r\n * Cell editor for integer cells.\r\n */\r\nexport\r\nclass IntegerCellEditor extends InputCellEditor {\r\n  /**\r\n   * Start editing the cell.\r\n   */\r\n  protected startEditing() {\r\n    super.startEditing();\r\n\r\n    this.input.step = '1';\r\n\r\n    const cell = this.cell;\r\n\r\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\r\n    const constraint = metadata.constraint;\r\n    if (constraint) {\r\n      if (constraint.minimum) {\r\n        this.input.min = constraint.minimum;\r\n      }\r\n      if (constraint.maximum) {\r\n        this.input.max = constraint.maximum;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the current integer input entered. This method throws exception\r\n   * if input is invalid.\r\n   */\r\n  protected getInput(): number | null {\r\n    let value = this.input.value;\r\n    if (value.trim() === '') {\r\n      return null;\r\n    }\r\n\r\n    let intValue = parseInt(value);\r\n    if (isNaN(intValue)) {\r\n      throw new Error('Invalid input');\r\n    }\r\n\r\n    return intValue;\r\n  }\r\n\r\n  protected inputType: string = 'number';\r\n}\r\n\r\n/**\r\n * Cell editor for date cells.\r\n */\r\nexport\r\nclass DateCellEditor extends CellEditor {\r\n  /**\r\n   * Handle the DOM events for the editor.\r\n   *\r\n   * @param event - The DOM event sent to the editor.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'keydown':\r\n        this._onKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'blur':\r\n        this._onBlur(event as FocusEvent);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by cell editor.\r\n   */\r\n  dispose() {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    this._unbindEvents();\r\n\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Start editing the cell.\r\n   */\r\n  protected startEditing() {\r\n    this._createWidget();\r\n\r\n    const cell = this.cell;\r\n    const cellInfo = this.getCellInfo(cell);\r\n    this._input.value = this._deserialize(cellInfo.data);\r\n    this.editorContainer.appendChild(this._input);\r\n    this._input.focus();\r\n\r\n    this._bindEvents();\r\n  }\r\n\r\n  /**\r\n   * Return the current date input entered.\r\n   */\r\n  protected getInput(): string | null {\r\n    return this._input.value;\r\n  }\r\n\r\n  private _deserialize(value: any): any {\r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    }\r\n\r\n    return value.toString();\r\n  }\r\n\r\n  private _createWidget() {\r\n    const input = document.createElement('input');\r\n    input.type = 'date';\r\n    input.pattern = \"\\d{4}-\\d{2}-\\d{2}\";\r\n    input.classList.add('lm-DataGrid-cellEditorWidget');\r\n    input.classList.add('lm-DataGrid-cellEditorInput');\r\n\r\n    this._input = input;\r\n  }\r\n\r\n  private _bindEvents() {\r\n    this._input.addEventListener('keydown', this);\r\n    this._input.addEventListener('blur', this);\r\n  }\r\n\r\n  private _unbindEvents() {\r\n    this._input.removeEventListener('keydown', this);\r\n    this._input.removeEventListener('blur', this);\r\n  }\r\n\r\n  private _onKeyDown(event: KeyboardEvent) {\r\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\r\n      case 'Enter':\r\n        this.commit(event.shiftKey ? 'up' : 'down');\r\n        break;\r\n      case 'Tab':\r\n        this.commit(event.shiftKey ? 'left' : 'right');\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        break;\r\n      case 'Escape':\r\n        this.cancel();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onBlur(event: FocusEvent) {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    if (!this.commit()) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this._input.focus();\r\n    }\r\n  }\r\n\r\n  private _input: HTMLInputElement;\r\n}\r\n\r\n/**\r\n * Cell editor for boolean cells.\r\n */\r\nexport\r\nclass BooleanCellEditor extends CellEditor {\r\n  /**\r\n   * Handle the DOM events for the editor.\r\n   *\r\n   * @param event - The DOM event sent to the editor.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'keydown':\r\n        this._onKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'mousedown':\r\n        // fix focus loss problem in Safari and Firefox\r\n        this._input.focus();\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        break;\r\n      case 'blur':\r\n        this._onBlur(event as FocusEvent);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by cell editor.\r\n   */\r\n  dispose() {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    this._unbindEvents();\r\n\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Start editing the cell.\r\n   */\r\n  protected startEditing() {\r\n    this._createWidget();\r\n\r\n    const cell = this.cell;\r\n    const cellInfo = this.getCellInfo(cell);\r\n    this._input.checked = this._deserialize(cellInfo.data);\r\n    this.editorContainer.appendChild(this._input);\r\n    this._input.focus();\r\n\r\n    this._bindEvents();\r\n  }\r\n\r\n  /**\r\n   * Return the current boolean input entered.\r\n   */\r\n  protected getInput(): boolean | null {\r\n    return this._input.checked;\r\n  }\r\n\r\n  private _deserialize(value: any): any {\r\n    if (value === null || value === undefined) {\r\n      return false;\r\n    }\r\n\r\n    return value == true;\r\n  }\r\n\r\n  private _createWidget() {\r\n    const input = document.createElement('input');\r\n    input.classList.add('lm-DataGrid-cellEditorWidget');\r\n    input.classList.add('lm-DataGrid-cellEditorCheckbox');\r\n    input.type = 'checkbox';\r\n    input.spellcheck = false;\r\n\r\n    this._input = input;\r\n  }\r\n\r\n  private _bindEvents() {\r\n    this._input.addEventListener('keydown', this);\r\n    this._input.addEventListener('mousedown', this);\r\n    this._input.addEventListener('blur', this);\r\n  }\r\n\r\n  private _unbindEvents() {\r\n    this._input.removeEventListener('keydown', this);\r\n    this._input.removeEventListener('mousedown', this);\r\n    this._input.removeEventListener('blur', this);\r\n  }\r\n\r\n  private _onKeyDown(event: KeyboardEvent) {\r\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\r\n      case 'Enter':\r\n        this.commit(event.shiftKey ? 'up' : 'down');\r\n        break;\r\n      case 'Tab':\r\n        this.commit(event.shiftKey ? 'left' : 'right');\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        break;\r\n      case 'Escape':\r\n        this.cancel();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onBlur(event: FocusEvent) {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    if (!this.commit()) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this._input.focus();\r\n    }\r\n  }\r\n\r\n  private _input: HTMLInputElement;\r\n}\r\n\r\n\r\n/**\r\n * Cell editor for option cells.\r\n * \r\n * It supports multiple option selection. If cell metadata contains\r\n * type attribute 'array', then it behaves as a multi select.\r\n * In that case cell data is expected to be list of string values.\r\n */\r\nexport\r\nclass OptionCellEditor extends CellEditor {\r\n  /**\r\n   * Dispose of the resources held by cell editor.\r\n   */\r\n  dispose() {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    super.dispose();\r\n\r\n    if (this._isMultiSelect) {\r\n      document.body.removeChild(this._select);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start editing the cell.\r\n   */\r\n  protected startEditing() {\r\n    const cell = this.cell;\r\n    const cellInfo = this.getCellInfo(cell);\r\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\r\n    this._isMultiSelect = metadata.type === 'array';\r\n    this._createWidget();\r\n\r\n    if (this._isMultiSelect) {\r\n      this._select.multiple = true;\r\n      const values = this._deserialize(cellInfo.data) as string[];\r\n      for (let i = 0; i < this._select.options.length; ++i) {\r\n        const option = this._select.options.item(i);\r\n        option!.selected = values.indexOf(option!.value) !== -1;\r\n      }\r\n      document.body.appendChild(this._select);\r\n    } else {\r\n      this._select.value = this._deserialize(cellInfo.data) as string;\r\n      this.editorContainer.appendChild(this._select);\r\n    }\r\n\r\n    this._select.focus();\r\n\r\n    this._bindEvents();\r\n\r\n    this.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * Return the current option input.\r\n   */\r\n  protected getInput(): string | string[] | null {\r\n    if (this._isMultiSelect) {\r\n      const input: string[] = [];\r\n      for (let i = 0; i < this._select.selectedOptions.length; ++i) {\r\n        input.push(this._select.selectedOptions.item(i)!.value);\r\n      }\r\n      return input;\r\n    } else {\r\n      return this._select.value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reposition cell editor.\r\n   */\r\n  protected updatePosition(): void {\r\n    super.updatePosition();\r\n\r\n    if (!this._isMultiSelect) {\r\n      return;\r\n    }\r\n\r\n    const cellInfo = this.getCellInfo(this.cell);\r\n\r\n    this._select.style.position = 'absolute';\r\n    const editorContainerRect = this.editorContainer.getBoundingClientRect();\r\n\r\n    this._select.style.left = editorContainerRect.left + 'px';\r\n    this._select.style.top = (editorContainerRect.top + cellInfo.height) + 'px';\r\n    this._select.style.width = editorContainerRect.width + 'px';\r\n    this._select.style.maxHeight = '60px';\r\n\r\n    this.editorContainer.style.visibility = 'hidden';\r\n  }\r\n\r\n  private _deserialize(value: any): string | string[] {\r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    }\r\n\r\n    if (this._isMultiSelect) {\r\n      const values: string[] = [];\r\n      if (Array.isArray(value)) {\r\n        for (let item of value) {\r\n          values.push(item.toString());\r\n        }\r\n      }\r\n      return values;\r\n    } else {\r\n      return value.toString();\r\n    }\r\n  }\r\n\r\n  private _createWidget() {\r\n    const cell = this.cell;\r\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\r\n    const items = metadata.constraint.enum;\r\n\r\n    const select = document.createElement('select');\r\n    select.classList.add('lm-DataGrid-cellEditorWidget');\r\n    for (let item of items) {\r\n      const option = document.createElement(\"option\");\r\n      option.value = item;\r\n      option.text = item;\r\n      select.appendChild(option);\r\n    }\r\n\r\n    this._select = select;\r\n  }\r\n\r\n  private _bindEvents() {\r\n    this._select.addEventListener('keydown', this._onKeyDown.bind(this));\r\n    this._select.addEventListener('blur', this._onBlur.bind(this));\r\n  }\r\n\r\n  private _onKeyDown(event: KeyboardEvent) {\r\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\r\n      case 'Enter':\r\n        this.commit(event.shiftKey ? 'up' : 'down');\r\n        break;\r\n      case 'Tab':\r\n        this.commit(event.shiftKey ? 'left' : 'right');\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        break;\r\n      case 'Escape':\r\n        this.cancel();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onBlur(event: FocusEvent) {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    if (!this.commit()) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this._select.focus();\r\n    }\r\n  }\r\n\r\n  private _select: HTMLSelectElement;\r\n  private _isMultiSelect: boolean = false;\r\n}\r\n\r\n/**\r\n * Cell editor for option cells whose value can be any value\r\n * from set of pre-defined options or values that can be input by user.\r\n */\r\nexport\r\nclass DynamicOptionCellEditor extends CellEditor {\r\n  /**\r\n   * Handle the DOM events for the editor.\r\n   *\r\n   * @param event - The DOM event sent to the editor.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'keydown':\r\n        this._onKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'blur':\r\n        this._onBlur(event as FocusEvent);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by cell editor.\r\n   */\r\n  dispose() {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    this._unbindEvents();\r\n\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Start editing the cell.\r\n   */\r\n  protected startEditing() {\r\n    this._createWidget();\r\n\r\n    const cell = this.cell;\r\n    const cellInfo = this.getCellInfo(cell);\r\n    this._input.value = this._deserialize(cellInfo.data);\r\n    this.editorContainer.appendChild(this._input);\r\n    this._input.focus();\r\n    this._input.select();\r\n\r\n    this._bindEvents();\r\n  }\r\n\r\n  /**\r\n   * Return the current option input.\r\n   */\r\n  protected getInput(): string | null {\r\n    return this._input.value;\r\n  }\r\n\r\n  private _deserialize(value: any): any {\r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    }\r\n\r\n    return value.toString();\r\n  }\r\n\r\n  private _createWidget() {\r\n    const cell = this.cell;\r\n    const grid = cell.grid;\r\n    const dataModel = grid.dataModel!;\r\n    const rowCount = dataModel.rowCount('body');\r\n\r\n    const listId = 'cell-editor-list';\r\n    const list = document.createElement('datalist');\r\n    list.id = listId;\r\n    const input = document.createElement('input');\r\n    input.classList.add('lm-DataGrid-cellEditorWidget');\r\n    input.classList.add('lm-DataGrid-cellEditorInput');\r\n    const valueSet = new Set<string>();\r\n    for (let r = 0; r < rowCount; ++r) {\r\n      const data = dataModel.data('body', r, cell.column);\r\n      if (data) {\r\n        valueSet.add(data);\r\n      }\r\n    }\r\n    valueSet.forEach((value: string) => {\r\n      const option = document.createElement(\"option\");\r\n      option.value = value;\r\n      option.text = value;\r\n      list.appendChild(option);\r\n    });\r\n    this.editorContainer.appendChild(list);\r\n    input.setAttribute('list', listId);\r\n\r\n    this._input = input;\r\n  }\r\n\r\n  private _bindEvents() {\r\n    this._input.addEventListener('keydown', this);\r\n    this._input.addEventListener('blur', this);\r\n  }\r\n\r\n  private _unbindEvents() {\r\n    this._input.removeEventListener('keydown', this);\r\n    this._input.removeEventListener('blur', this);\r\n  }\r\n\r\n  private _onKeyDown(event: KeyboardEvent) {\r\n    switch (getKeyboardLayout().keyForKeydownEvent(event)) {\r\n      case 'Enter':\r\n        this.commit(event.shiftKey ? 'up' : 'down');\r\n        break;\r\n      case 'Tab':\r\n        this.commit(event.shiftKey ? 'left' : 'right');\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        break;\r\n      case 'Escape':\r\n        this.cancel();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _onBlur(event: FocusEvent) {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    if (!this.commit()) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this._input.focus();\r\n    }\r\n  }\r\n\r\n  private _input: HTMLInputElement;\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `CellEditor` class statics.\r\n */\r\nexport\r\nnamespace CellEditor {\r\n  /**\r\n   * An object which holds the configuration data for a cell.\r\n   */\r\n  export\r\n  type CellConfig = {\r\n    /**\r\n     * The grid containing the cell.\r\n     */\r\n    readonly grid: DataGrid;\r\n    /**\r\n     * The row index of the cell.\r\n     */\r\n    readonly row: number;\r\n\r\n    /**\r\n     * The column index of the cell.\r\n     */\r\n    readonly column: number;\r\n  };\r\n}\r\n\r\n/**\r\n * A namespace for module-private functionality.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A type alias for cell properties.\r\n   */\r\n  export type ICellInfo = {\r\n    grid: DataGrid,\r\n    row: number,\r\n    column: number,\r\n    data: any,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  };\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  ISignal, Signal\r\n} from '@lumino/signaling';\r\n\r\n\r\n/**\r\n * An object which provides the data for a data grid.\r\n *\r\n * #### Notes\r\n * If the predefined data models are insufficient for a particular use\r\n * case, a custom model can be defined which derives from this class.\r\n */\r\nexport\r\nabstract class DataModel {\r\n  /**\r\n   * A signal emitted when the data model has changed.\r\n   */\r\n  get changed(): ISignal<this, DataModel.ChangedArgs> {\r\n    return this._changed;\r\n  }\r\n\r\n  /**\r\n   * Get the row count for a region in the data model.\r\n   *\r\n   * @param region - The row region of interest.\r\n   *\r\n   * @returns - The row count for the region.\r\n   *\r\n   * #### Notes\r\n   * This method is called often, and so should be efficient.\r\n   */\r\n  abstract rowCount(region: DataModel.RowRegion): number;\r\n\r\n  /**\r\n   * Get the column count for a region in the data model.\r\n   *\r\n   * @param region - The column region of interest.\r\n   *\r\n   * @returns - The column count for the region.\r\n   *\r\n   * #### Notes\r\n   * This method is called often, and so should be efficient.\r\n   */\r\n  abstract columnCount(region: DataModel.ColumnRegion): number;\r\n\r\n  /**\r\n   * Get the data value for a cell in the data model.\r\n   *\r\n   * @param region - The cell region of interest.\r\n   *\r\n   * @param row - The row index of the cell of interest.\r\n   *\r\n   * @param column - The column index of the cell of interest.\r\n   *\r\n   * @returns The data value for the specified cell.\r\n   *\r\n   * #### Notes\r\n   * The returned data should be treated as immutable.\r\n   *\r\n   * This method is called often, and so should be efficient.\r\n   */\r\n  abstract data(region: DataModel.CellRegion, row: number, column: number): any;\r\n\r\n  /**\r\n   * Get the metadata for a cell in the data model.\r\n   *\r\n   * @param region - The cell region of interest.\r\n   *\r\n   * @param row - The row index of the cell of interest.\r\n   *\r\n   * @param column - The column index of the cell of interest.\r\n   *\r\n   * @returns The metadata for the specified cell.\r\n   *\r\n   * #### Notes\r\n   * The returned metadata should be treated as immutable.\r\n   *\r\n   * This method is called often, and so should be efficient.\r\n   *\r\n   * The default implementation returns `{}`.\r\n   */\r\n  metadata(region: DataModel.CellRegion, row: number, column: number): DataModel.Metadata {\r\n    return DataModel.emptyMetadata;\r\n  }\r\n\r\n  /**\r\n   * Emit the `changed` signal for the data model.\r\n   *\r\n   * #### Notes\r\n   * Subclasses should call this method whenever the data model has\r\n   * changed so that attached data grids can update themselves.\r\n   */\r\n  protected emitChanged(args: DataModel.ChangedArgs): void {\r\n    this._changed.emit(args);\r\n  }\r\n\r\n  private _changed = new Signal<this, DataModel.ChangedArgs>(this);\r\n}\r\n\r\n/**\r\n * An object which provides the mutable data for a data grid.\r\n *\r\n * #### Notes\r\n * This object is an extension to `DataModel` and it only adds ability to\r\n * change data for cells.\r\n */\r\nexport\r\nabstract class MutableDataModel extends DataModel {\r\n  /**\r\n   * Set the data value for a cell in the data model.\r\n   *\r\n   * @param region - The cell region of interest.\r\n   *\r\n   * @param row - The row index of the cell of interest.\r\n   *\r\n   * @param column - The column index of the cell of interest.\r\n   *\r\n   * @returns true if succeeds, false otherwise.\r\n   *\r\n   */\r\n  abstract setData(region: DataModel.CellRegion, row: number, column: number, value: any): boolean;\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `DataModel` class statics.\r\n */\r\nexport\r\nnamespace DataModel {\r\n  /**\r\n   * A type alias for the data model row regions.\r\n   */\r\n  export\r\n  type RowRegion = 'body' | 'column-header';\r\n\r\n  /**\r\n   * A type alias for the data model column regions.\r\n   */\r\n  export\r\n  type ColumnRegion = 'body' | 'row-header';\r\n\r\n  /**\r\n   * A type alias for the data model cell regions.\r\n   */\r\n  export\r\n  type CellRegion = 'body' | 'row-header' | 'column-header' | 'corner-header';\r\n\r\n  /**\r\n   * The metadata for a column in a data model.\r\n   */\r\n  export\r\n  type Metadata = { [key: string]: any };\r\n\r\n  /**\r\n   * A singleton empty metadata object.\r\n   */\r\n  export\r\n  const emptyMetadata: Metadata = Object.freeze({});\r\n\r\n  /**\r\n   * An arguments object for the `changed` signal.\r\n   *\r\n   * #### Notes\r\n   * Data models should emit the `changed` signal with this args object\r\n   * type when rows are inserted or removed.\r\n   */\r\n  export\r\n  type RowsChangedArgs = {\r\n    /**\r\n     * The discriminated type of the args object.\r\n     */\r\n    readonly type: 'rows-inserted' | 'rows-removed';\r\n\r\n    /**\r\n     * The region which contains the modified rows.\r\n     */\r\n    readonly region: RowRegion;\r\n\r\n    /**\r\n     * The index of the first modified row.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The number of modified rows.\r\n     */\r\n    readonly span: number;\r\n  };\r\n\r\n  /**\r\n   * An arguments object for the `changed` signal.\r\n   *\r\n   * #### Notes\r\n   * Data models should emit the `changed` signal with this args object\r\n   * type when columns are inserted or removed.\r\n   */\r\n  export\r\n  type ColumnsChangedArgs = {\r\n    /**\r\n     * The discriminated type of the args object.\r\n     */\r\n    readonly type: 'columns-inserted' | 'columns-removed';\r\n\r\n    /**\r\n     * The region which contains the modified columns.\r\n     */\r\n    readonly region: ColumnRegion;\r\n\r\n    /**\r\n     * The index of the first modified column.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The number of modified columns.\r\n     */\r\n    readonly span: number;\r\n  };\r\n\r\n  /**\r\n   * An arguments object for the `changed` signal.\r\n   *\r\n   * #### Notes\r\n   * Data models should emit the `changed` signal with this args object\r\n   * type when rows are moved.\r\n   */\r\n  export\r\n  type RowsMovedArgs = {\r\n    /**\r\n     * The discriminated type of the args object.\r\n     */\r\n    readonly type: 'rows-moved';\r\n\r\n    /**\r\n     * The region which contains the modified rows.\r\n     */\r\n    readonly region: RowRegion;\r\n\r\n    /**\r\n     * The starting index of the first modified row.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The number of modified rows.\r\n     */\r\n    readonly span: number;\r\n\r\n    /**\r\n     * The ending index of the first modified row.\r\n     */\r\n    readonly destination: number;\r\n  };\r\n\r\n  /**\r\n   * An arguments object for the `changed` signal.\r\n   *\r\n   * #### Notes\r\n   * Data models should emit the `changed` signal with this args object\r\n   * type when columns are moved.\r\n   */\r\n  export\r\n  type ColumnsMovedArgs = {\r\n    /**\r\n     * The discriminated type of the args object.\r\n     */\r\n    readonly type: 'columns-moved';\r\n\r\n    /**\r\n     * The region which contains the modified columns.\r\n     */\r\n    readonly region: ColumnRegion;\r\n\r\n    /**\r\n     * The starting index of the first modified column.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The number of modified columns.\r\n     */\r\n    readonly span: number;\r\n\r\n    /**\r\n     * The ending index of the first modified column.\r\n     */\r\n    readonly destination: number;\r\n  };\r\n\r\n  /**\r\n   * An arguments object for the `changed` signal.\r\n   *\r\n   * #### Notes\r\n   * Data models should emit the `changed` signal with this args object\r\n   * type when cells are changed in-place.\r\n   */\r\n  export\r\n  type CellsChangedArgs = {\r\n    /**\r\n     * The discriminated type of the args object.\r\n     */\r\n    readonly type: 'cells-changed';\r\n\r\n    /**\r\n     * The region which contains the modified cells.\r\n     */\r\n    readonly region: CellRegion;\r\n\r\n    /**\r\n     * The row index of the first modified cell.\r\n     */\r\n    readonly row: number;\r\n\r\n    /**\r\n     * The column index of the first modified cell.\r\n     */\r\n    readonly column: number;\r\n\r\n    /**\r\n     * The number of rows in the modified cell range.\r\n     */\r\n    readonly rowSpan: number;\r\n\r\n    /**\r\n     * The number of columns in the modified cell range.\r\n     */\r\n    readonly columnSpan: number;\r\n  };\r\n\r\n  /**\r\n   * An arguments object for the `changed` signal.\r\n   *\r\n   * #### Notes\r\n   * Data models should emit the `changed` signal with this args object\r\n   * type when the model has changed in a fashion that cannot be easily\r\n   * expressed by the other args object types.\r\n   *\r\n   * This is the \"big hammer\" approach, and will cause any associated\r\n   * data grid to perform a full reset. The other changed args types\r\n   * should be used whenever possible.\r\n   */\r\n  export\r\n  type ModelResetArgs = {\r\n    /**\r\n     * The discriminated type of the args object.\r\n     */\r\n    readonly type: 'model-reset';\r\n  };\r\n\r\n  /**\r\n   * A type alias for the args objects of the `changed` signal.\r\n   */\r\n  export\r\n  type ChangedArgs = (\r\n    RowsChangedArgs |\r\n    ColumnsChangedArgs |\r\n    RowsMovedArgs |\r\n    ColumnsMovedArgs |\r\n    CellsChangedArgs |\r\n    ModelResetArgs\r\n  );\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  IDisposable\r\n} from '@lumino/disposable';\r\n\r\n\r\n/**\r\n * A thin caching wrapper around a 2D canvas rendering context.\r\n *\r\n * #### Notes\r\n * This class is mostly a transparent wrapper around a canvas rendering\r\n * context which improves performance when writing context state.\r\n *\r\n * For best performance, avoid reading state from the `gc`. Writes are\r\n * cached based on the previously written value.\r\n *\r\n * Unless otherwise specified, the API and semantics of this class are\r\n * identical to the builtin 2D canvas rendering context:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\r\n *\r\n * The wrapped canvas context should not be manipulated externally\r\n * until the wrapping `GraphicsContext` object is disposed.\r\n */\r\nexport\r\nclass GraphicsContext implements IDisposable {\r\n  /**\r\n   * Create a new graphics context object.\r\n   *\r\n   * @param context - The 2D canvas rendering context to wrap.\r\n   */\r\n  constructor(context: CanvasRenderingContext2D) {\r\n    this._context = context;\r\n    this._state = Private.State.create(context);\r\n  }\r\n\r\n  dispose(): void {\r\n    // Bail if the gc is already disposed.\r\n    if (this._disposed) {\r\n      return;\r\n    }\r\n\r\n    // Mark the gc as disposed.\r\n    this._disposed = true;\r\n\r\n    // Pop any unrestored saves.\r\n    while (this._state.next) {\r\n      this._state = this._state.next;\r\n      this._context.restore();\r\n    }\r\n  }\r\n\r\n  get isDisposed(): boolean {\r\n    return this._disposed;\r\n  }\r\n\r\n  get fillStyle(): string | CanvasGradient | CanvasPattern {\r\n    return this._context.fillStyle;\r\n  }\r\n\r\n  set fillStyle(value: string | CanvasGradient | CanvasPattern) {\r\n    if (this._state.fillStyle !== value) {\r\n      this._state.fillStyle = value;\r\n      this._context.fillStyle = value;\r\n    }\r\n  }\r\n\r\n  get strokeStyle(): string | CanvasGradient | CanvasPattern {\r\n    return this._context.strokeStyle;\r\n  }\r\n\r\n  set strokeStyle(value: string | CanvasGradient | CanvasPattern) {\r\n    if (this._state.strokeStyle !== value) {\r\n      this._state.strokeStyle = value;\r\n      this._context.strokeStyle = value;\r\n    }\r\n  }\r\n\r\n  get font(): string {\r\n    return this._context.font;\r\n  }\r\n\r\n  set font(value: string) {\r\n    if (this._state.font !== value) {\r\n      this._state.font = value;\r\n      this._context.font = value;\r\n    }\r\n  }\r\n\r\n  get textAlign(): CanvasTextAlign {\r\n    return this._context.textAlign;\r\n  }\r\n\r\n  set textAlign(value: CanvasTextAlign) {\r\n    if (this._state.textAlign !== value) {\r\n      this._state.textAlign = value;\r\n      this._context.textAlign = value;\r\n    }\r\n  }\r\n\r\n  get textBaseline(): CanvasTextBaseline {\r\n    return this._context.textBaseline;\r\n  }\r\n\r\n  set textBaseline(value: CanvasTextBaseline) {\r\n    if (this._state.textBaseline !== value) {\r\n      this._state.textBaseline = value;\r\n      this._context.textBaseline = value;\r\n    }\r\n  }\r\n\r\n  get lineCap(): CanvasLineCap {\r\n    return this._context.lineCap;\r\n  }\r\n\r\n  set lineCap(value: CanvasLineCap) {\r\n    if (this._state.lineCap !== value) {\r\n      this._state.lineCap = value;\r\n      this._context.lineCap = value;\r\n    }\r\n  }\r\n\r\n  get lineDashOffset(): number {\r\n    return this._context.lineDashOffset;\r\n  }\r\n\r\n  set lineDashOffset(value: number) {\r\n    if (this._state.lineDashOffset !== value) {\r\n      this._state.lineDashOffset = value;\r\n      this._context.lineDashOffset = value;\r\n    }\r\n  }\r\n\r\n  get lineJoin(): CanvasLineJoin {\r\n    return this._context.lineJoin;\r\n  }\r\n\r\n  set lineJoin(value: CanvasLineJoin) {\r\n    if (this._state.lineJoin !== value) {\r\n      this._state.lineJoin = value;\r\n      this._context.lineJoin = value;\r\n    }\r\n  }\r\n\r\n  get lineWidth(): number {\r\n    return this._context.lineWidth;\r\n  }\r\n\r\n  set lineWidth(value: number) {\r\n    if (this._state.lineWidth !== value) {\r\n      this._state.lineWidth = value;\r\n      this._context.lineWidth = value;\r\n    }\r\n  }\r\n\r\n  get miterLimit(): number {\r\n    return this._context.miterLimit;\r\n  }\r\n\r\n  set miterLimit(value: number) {\r\n    if (this._state.miterLimit !== value) {\r\n      this._state.miterLimit = value;\r\n      this._context.miterLimit = value;\r\n    }\r\n  }\r\n\r\n  get shadowBlur(): number {\r\n    return this._context.shadowBlur;\r\n  }\r\n\r\n  set shadowBlur(value: number) {\r\n    if (this._state.shadowBlur !== value) {\r\n      this._state.shadowBlur = value;\r\n      this._context.shadowBlur = value;\r\n    }\r\n  }\r\n\r\n  get shadowColor(): string {\r\n    return this._context.shadowColor;\r\n  }\r\n\r\n  set shadowColor(value: string) {\r\n    if (this._state.shadowColor !== value) {\r\n      this._state.shadowColor = value;\r\n      this._context.shadowColor = value;\r\n    }\r\n  }\r\n\r\n  get shadowOffsetX(): number {\r\n    return this._context.shadowOffsetX;\r\n  }\r\n\r\n  set shadowOffsetX(value: number) {\r\n    if (this._state.shadowOffsetX !== value) {\r\n      this._state.shadowOffsetX = value;\r\n      this._context.shadowOffsetX = value;\r\n    }\r\n  }\r\n\r\n  get shadowOffsetY(): number {\r\n    return this._context.shadowOffsetY;\r\n  }\r\n\r\n  set shadowOffsetY(value: number) {\r\n    if (this._state.shadowOffsetY !== value) {\r\n      this._state.shadowOffsetY = value;\r\n      this._context.shadowOffsetY = value;\r\n    }\r\n  }\r\n\r\n  get imageSmoothingEnabled(): boolean {\r\n    return this._context.imageSmoothingEnabled;\r\n  }\r\n\r\n  set imageSmoothingEnabled(value: boolean) {\r\n    if (this._state.imageSmoothingEnabled !== value) {\r\n      this._state.imageSmoothingEnabled = value;\r\n      this._context.imageSmoothingEnabled = value;\r\n    }\r\n  }\r\n\r\n  get globalAlpha(): number {\r\n    return this._context.globalAlpha;\r\n  }\r\n\r\n  set globalAlpha(value: number) {\r\n    if (this._state.globalAlpha !== value) {\r\n      this._state.globalAlpha = value;\r\n      this._context.globalAlpha = value;\r\n    }\r\n  }\r\n\r\n  get globalCompositeOperation(): string {\r\n    return this._context.globalCompositeOperation;\r\n  }\r\n\r\n  set globalCompositeOperation(value: string) {\r\n    if (this._state.globalCompositeOperation !== value) {\r\n      this._state.globalCompositeOperation = value;\r\n      this._context.globalCompositeOperation = value;\r\n    }\r\n  }\r\n\r\n  getLineDash(): number[] {\r\n    return this._context.getLineDash();\r\n  }\r\n\r\n  setLineDash(segments: number[]): void {\r\n    this._context.setLineDash(segments);\r\n  }\r\n\r\n  rotate(angle: number): void {\r\n    this._context.rotate(angle);\r\n  }\r\n\r\n  scale(x: number, y: number): void {\r\n    this._context.scale(x, y);\r\n  }\r\n\r\n  transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void {\r\n    this._context.transform(m11, m12, m21, m22, dx, dy);\r\n  }\r\n\r\n  translate(x: number, y: number): void {\r\n    this._context.translate(x, y);\r\n  }\r\n\r\n  setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void {\r\n    this._context.setTransform(m11, m12, m21, m22, dx, dy);\r\n  }\r\n\r\n  save(): void {\r\n    // Clone an push the current state to the stack.\r\n    this._state = Private.State.push(this._state);\r\n\r\n    // Save the wrapped context state.\r\n    this._context.save();\r\n  }\r\n\r\n  restore(): void {\r\n    // Bail if there is no state to restore.\r\n    if (!this._state.next) {\r\n      return;\r\n    }\r\n\r\n    // Pop the saved state from the stack.\r\n    this._state = Private.State.pop(this._state);\r\n\r\n    // Restore the wrapped context state.\r\n    this._context.restore();\r\n  }\r\n\r\n  beginPath(): void {\r\n    return this._context.beginPath();\r\n  }\r\n\r\n  closePath(): void {\r\n    this._context.closePath();\r\n  }\r\n\r\n  isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean {\r\n    let result: boolean;\r\n    if (arguments.length === 2) {\r\n      result = this._context.isPointInPath(x, y);\r\n    } else {\r\n      result = this._context.isPointInPath(x, y, fillRule);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void {\r\n    if (arguments.length === 5) {\r\n      this._context.arc(x, y, radius, startAngle, endAngle);\r\n    } else {\r\n      this._context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\r\n    }\r\n  }\r\n\r\n  arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\r\n    this._context.arcTo(x1, y1, x2, y2, radius);\r\n  }\r\n\r\n  bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void {\r\n    this._context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\r\n  }\r\n\r\n  ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void {\r\n    if (arguments.length === 7) {\r\n      this._context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle);\r\n    } else {\r\n      this._context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise);\r\n    }\r\n  }\r\n\r\n  lineTo(x: number, y: number): void {\r\n    this._context.lineTo(x, y);\r\n  }\r\n\r\n  moveTo(x: number, y: number): void {\r\n    this._context.moveTo(x, y);\r\n  }\r\n\r\n  quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\r\n    this._context.quadraticCurveTo(cpx, cpy, x, y);\r\n  }\r\n\r\n  rect(x: number, y: number, w: number, h: number): void {\r\n    this._context.rect(x, y, w, h);\r\n  }\r\n\r\n  clip(fillRule?: CanvasFillRule): void {\r\n    if (arguments.length === 0) {\r\n      this._context.clip();\r\n    } else {\r\n      this._context.clip(fillRule);\r\n    }\r\n  }\r\n\r\n  fill(fillRule?: CanvasFillRule): void {\r\n    if (arguments.length === 0) {\r\n      this._context.fill();\r\n    } else {\r\n      this._context.fill(fillRule);\r\n    }\r\n  }\r\n\r\n  stroke(): void {\r\n    this._context.stroke();\r\n  }\r\n\r\n  clearRect(x: number, y: number, w: number, h: number): void {\r\n    return this._context.clearRect(x, y, w, h);\r\n  }\r\n\r\n  fillRect(x: number, y: number, w: number, h: number): void {\r\n    this._context.fillRect(x, y, w, h);\r\n  }\r\n\r\n  fillText(text: string, x: number, y: number, maxWidth?: number): void {\r\n    if (arguments.length === 3) {\r\n      this._context.fillText(text, x, y);\r\n    } else {\r\n      this._context.fillText(text, x, y, maxWidth);\r\n    }\r\n  }\r\n\r\n  strokeRect(x: number, y: number, w: number, h: number): void {\r\n    this._context.strokeRect(x, y, w, h);\r\n  }\r\n\r\n  strokeText(text: string, x: number, y: number, maxWidth?: number): void {\r\n    if (arguments.length === 3) {\r\n      this._context.strokeText(text, x, y);\r\n    } else {\r\n      this._context.strokeText(text, x, y, maxWidth);\r\n    }\r\n  }\r\n\r\n  measureText(text: string): TextMetrics {\r\n    return this._context.measureText(text);\r\n  }\r\n\r\n  createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient {\r\n    return this._context.createLinearGradient(x0, y0, x1, y1);\r\n  }\r\n\r\n  createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient {\r\n    return this._context.createRadialGradient(x0, y0, r0, x1, y1, r1);\r\n  }\r\n\r\n  createPattern(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, repetition: string): CanvasPattern | null {\r\n    return this._context.createPattern(image, repetition);\r\n  }\r\n\r\n  createImageData(imageData: ImageData): ImageData;\r\n  createImageData(sw: number, sh: number): ImageData;\r\n  createImageData() {\r\n    return this._context.createImageData.apply(this._context, arguments);\r\n  }\r\n\r\n  getImageData(sx: number, sy: number, sw: number, sh: number): ImageData {\r\n    return this._context.getImageData(sx, sy, sw, sh);\r\n  }\r\n\r\n  putImageData(imagedata: ImageData, dx: number, dy: number): void\r\n  putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number): void\r\n  putImageData(): void {\r\n    this._context.putImageData.apply(this._context, arguments);\r\n  }\r\n\r\n  drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number): void;\r\n  drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number, dstW: number, dstH: number): void;\r\n  drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, srcX: number, srcY: number, srcW: number, srcH: number, dstX: number, dstY: number, dstW: number, dstH: number): void;\r\n  drawImage(): void {\r\n    this._context.drawImage.apply(this._context, arguments);\r\n  }\r\n\r\n  drawFocusIfNeeded(element: Element): void {\r\n    this._context.drawFocusIfNeeded(element);\r\n  }\r\n\r\n  private _disposed = false;\r\n  private _state: Private.State;\r\n  private _context: CanvasRenderingContext2D;\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The index of next valid pool object.\r\n   */\r\n  let pi = -1;\r\n\r\n  /**\r\n   * A state object allocation pool.\r\n   */\r\n  const pool: State[] = [];\r\n\r\n  /**\r\n   * An object which holds the state for a gc.\r\n   */\r\n  export\r\n  class State {\r\n    /**\r\n     * Create a gc state object from a 2D canvas context.\r\n     */\r\n    static create(context: CanvasRenderingContext2D): State {\r\n      let state = pi < 0 ? new State() : pool[pi--];\r\n      state.next = null;\r\n      state.fillStyle = context.fillStyle;\r\n      state.font = context.font;\r\n      state.globalAlpha = context.globalAlpha;\r\n      state.globalCompositeOperation = context.globalCompositeOperation;\r\n      state.imageSmoothingEnabled = context.imageSmoothingEnabled;\r\n      state.lineCap = context.lineCap;\r\n      state.lineDashOffset = context.lineDashOffset;\r\n      state.lineJoin = context.lineJoin;\r\n      state.lineWidth = context.lineWidth;\r\n      state.miterLimit = context.miterLimit;\r\n      state.shadowBlur = context.shadowBlur;\r\n      state.shadowColor = context.shadowColor;\r\n      state.shadowOffsetX = context.shadowOffsetX;\r\n      state.shadowOffsetY = context.shadowOffsetY;\r\n      state.strokeStyle = context.strokeStyle;\r\n      state.textAlign = context.textAlign;\r\n      state.textBaseline = context.textBaseline;\r\n      return state;\r\n    }\r\n\r\n    /**\r\n     * Clone an existing gc state object and add it to the state stack.\r\n     */\r\n    static push(other: State): State {\r\n      let state = pi < 0 ? new State() : pool[pi--];\r\n      state.next = other;\r\n      state.fillStyle = other.fillStyle;\r\n      state.font = other.font;\r\n      state.globalAlpha = other.globalAlpha;\r\n      state.globalCompositeOperation = other.globalCompositeOperation;\r\n      state.imageSmoothingEnabled = other.imageSmoothingEnabled;\r\n      state.lineCap = other.lineCap;\r\n      state.lineDashOffset = other.lineDashOffset;\r\n      state.lineJoin = other.lineJoin;\r\n      state.lineWidth = other.lineWidth;\r\n      state.miterLimit = other.miterLimit;\r\n      state.shadowBlur = other.shadowBlur;\r\n      state.shadowColor = other.shadowColor;\r\n      state.shadowOffsetX = other.shadowOffsetX;\r\n      state.shadowOffsetY = other.shadowOffsetY;\r\n      state.strokeStyle = other.strokeStyle;\r\n      state.textAlign = other.textAlign;\r\n      state.textBaseline = other.textBaseline;\r\n      return state;\r\n    }\r\n\r\n    /**\r\n     * Pop the next state object and return the current to the pool\r\n     */\r\n    static pop(state: State): State {\r\n      state.fillStyle = '';\r\n      state.strokeStyle = '';\r\n      pool[++pi] = state;\r\n      return state.next!;\r\n    }\r\n\r\n    next: State | null;\r\n\r\n    fillStyle: string | CanvasGradient | CanvasPattern;\r\n    font: string;\r\n    globalAlpha: number;\r\n    globalCompositeOperation: string;\r\n    imageSmoothingEnabled: boolean;\r\n    lineCap: string;\r\n    lineDashOffset: number;\r\n    lineJoin: string;\r\n    lineWidth: number;\r\n    miterLimit: number;\r\n    shadowBlur: number;\r\n    shadowColor: string;\r\n    shadowOffsetX: number;\r\n    shadowOffsetY: number;\r\n    strokeStyle: string | CanvasGradient | CanvasPattern;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n\r\n    private constructor() { }\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  CellRenderer\r\n} from './cellrenderer';\r\n\r\nimport {\r\n  GraphicsContext\r\n} from './graphicscontext';\r\n\r\n\r\n/**\r\n * A cell renderer which renders data values as text.\r\n */\r\nexport\r\nclass TextRenderer extends CellRenderer {\r\n  /**\r\n   * Construct a new text renderer.\r\n   *\r\n   * @param options - The options for initializing the renderer.\r\n   */\r\n  constructor(options: TextRenderer.IOptions = {}) {\r\n    super();\r\n    this.font = options.font || '12px sans-serif';\r\n    this.textColor = options.textColor || '#000000';\r\n    this.backgroundColor = options.backgroundColor || '';\r\n    this.verticalAlignment = options.verticalAlignment || 'center';\r\n    this.horizontalAlignment = options.horizontalAlignment || 'left';\r\n    this.format = options.format || TextRenderer.formatGeneric();\r\n    this.elideDirection = options.elideDirection || 'right';\r\n    this.wrapText = options.wrapText || false;\r\n  }\r\n\r\n  /**\r\n   * The CSS shorthand font for drawing the text.\r\n   */\r\n  readonly font: CellRenderer.ConfigOption<string>;\r\n\r\n  /**\r\n   * The CSS color for drawing the text.\r\n   */\r\n  readonly textColor: CellRenderer.ConfigOption<string>;\r\n\r\n  /**\r\n   * The CSS color for the cell background.\r\n   */\r\n  readonly backgroundColor: CellRenderer.ConfigOption<string>;\r\n\r\n  /**\r\n   * The vertical alignment for the cell text.\r\n   */\r\n  readonly verticalAlignment: CellRenderer.ConfigOption<TextRenderer.VerticalAlignment>;\r\n\r\n  /**\r\n   * The horizontal alignment for the cell text.\r\n   */\r\n  readonly horizontalAlignment: CellRenderer.ConfigOption<TextRenderer.HorizontalAlignment>;\r\n\r\n  /**\r\n   * The format function for the cell value.\r\n   */\r\n  readonly format: TextRenderer.FormatFunc;\r\n\r\n  /**\r\n   * Which side to draw the ellipsis.\r\n   */\r\n  readonly elideDirection: CellRenderer.ConfigOption<TextRenderer.ElideDirection>;\r\n\r\n  /**\r\n   * Boolean flag for applying text wrapping.\r\n   */\r\n  readonly wrapText: CellRenderer.ConfigOption<boolean>;\r\n\r\n  /**\r\n   * Paint the content for a cell.\r\n   *\r\n   * @param gc - The graphics context to use for drawing.\r\n   *\r\n   * @param config - The configuration data for the cell.\r\n   */\r\n  paint(gc: GraphicsContext, config: CellRenderer.CellConfig): void {\r\n    this.drawBackground(gc, config);\r\n    this.drawText(gc, config);\r\n  }\r\n\r\n  /**\r\n   * Draw the background for the cell.\r\n   *\r\n   * @param gc - The graphics context to use for drawing.\r\n   *\r\n   * @param config - The configuration data for the cell.\r\n   */\r\n  drawBackground(gc: GraphicsContext, config: CellRenderer.CellConfig): void {\r\n    // Resolve the background color for the cell.\r\n    let color = CellRenderer.resolveOption(this.backgroundColor, config);\r\n\r\n    // Bail if there is no background color to draw.\r\n    if (!color) {\r\n      return;\r\n    }\r\n\r\n    // Fill the cell with the background color.\r\n    gc.fillStyle = color;\r\n    gc.fillRect(config.x, config.y, config.width, config.height);\r\n  }\r\n\r\n  /**\r\n   * Draw the text for the cell.\r\n   *\r\n   * @param gc - The graphics context to use for drawing.\r\n   *\r\n   * @param config - The configuration data for the cell.\r\n   */\r\n  drawText(gc: GraphicsContext, config: CellRenderer.CellConfig): void {\r\n    // Resolve the font for the cell.\r\n    let font = CellRenderer.resolveOption(this.font, config);\r\n\r\n    // Bail if there is no font to draw.\r\n    if (!font) {\r\n      return;\r\n    }\r\n\r\n    // Resolve the text color for the cell.\r\n    let color = CellRenderer.resolveOption(this.textColor, config);\r\n\r\n    // Bail if there is no text color to draw.\r\n    if (!color) {\r\n      return;\r\n    }\r\n\r\n    // Format the cell value to text.\r\n    let format = this.format;\r\n    let text = format(config);\r\n\r\n    // Bail if there is no text to draw.\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    // Resolve the vertical and horizontal alignment.\r\n    let vAlign = CellRenderer.resolveOption(this.verticalAlignment, config);\r\n    let hAlign = CellRenderer.resolveOption(this.horizontalAlignment, config);\r\n\r\n    // Resolve the elision direction\r\n    let elideDirection = CellRenderer.resolveOption(this.elideDirection, config);\r\n\r\n    // Resolve the text wrapping flag\r\n    let wrapText = CellRenderer.resolveOption(this.wrapText, config);\r\n\r\n    // Compute the padded text box height for the specified alignment.\r\n    let boxHeight = config.height - (vAlign === 'center' ? 1 : 2);\r\n\r\n    // Bail if the text box has no effective size.\r\n    if (boxHeight <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Compute the text height for the gc font.\r\n    let textHeight = TextRenderer.measureFontHeight(font);\r\n\r\n    // Set up the text position variables.\r\n    let textX: number;\r\n    let textY: number;\r\n    let boxWidth: number;\r\n\r\n    // Compute the Y position for the text.\r\n    switch (vAlign) {\r\n    case 'top':\r\n      textY = config.y + 2 + textHeight;\r\n      break;\r\n    case 'center':\r\n      textY = config.y + config.height / 2 + textHeight / 2;\r\n      break;\r\n    case 'bottom':\r\n      textY = config.y + config.height - 2;\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n\r\n    // Compute the X position for the text.\r\n    switch (hAlign) {\r\n    case 'left':\r\n      textX = config.x + 8;\r\n      boxWidth = config.width - 14;\r\n      break;\r\n    case 'center':\r\n      textX = config.x + config.width / 2;\r\n      boxWidth = config.width;\r\n      break;\r\n    case 'right':\r\n      textX = config.x + config.width - 8;\r\n      boxWidth = config.width - 14;\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n\r\n    // Clip the cell if the text is taller than the text box height.\r\n    if (textHeight > boxHeight) {\r\n      gc.beginPath();\r\n      gc.rect(config.x, config.y, config.width, config.height - 1);\r\n      gc.clip();\r\n    }\r\n\r\n    // Set the gc state.\r\n    gc.font = font;\r\n    gc.fillStyle = color;\r\n    gc.textAlign = hAlign;\r\n    gc.textBaseline = 'bottom';\r\n\r\n    // The current text width in pixels.\r\n    let textWidth = gc.measureText(text).width;\r\n\r\n    // Apply text wrapping if enabled.\r\n    if (wrapText && textWidth > boxWidth) {\r\n      // Make sure box clipping happens.\r\n      gc.beginPath();\r\n      gc.rect(config.x, config.y, config.width, config.height - 1);\r\n      gc.clip();\r\n\r\n      // Split column name to words based on\r\n      // whitespace preceding a word boundary.\r\n      // \"Hello  world\" --> [\"Hello  \", \"world\"]\r\n      const wordsInColumn = text.split(/\\s(?=\\b)/);\r\n\r\n      // Y-coordinate offset for any additional lines\r\n      let curY = textY;\r\n      let textInCurrentLine = wordsInColumn.shift()!\r\n\r\n      // Single word. Applying text wrap on word by splitting\r\n      // it into characters and fitting the maximum number of\r\n      // characters possible per line (box width).\r\n      if (wordsInColumn.length === 0) {\r\n        let curLineTextWidth = gc.measureText(textInCurrentLine).width;\r\n        while (curLineTextWidth > boxWidth && textInCurrentLine !== \"\") {\r\n          // Iterating from the end of the string until we find a\r\n          // substring (0,i) which has a width less than the box width.\r\n          for (let i = textInCurrentLine.length; i > 0; i--) {\r\n            const curSubString = textInCurrentLine.substring(0,i);\r\n            const curSubStringWidth = gc.measureText(curSubString).width;\r\n            if (curSubStringWidth < boxWidth || curSubString.length === 1) {\r\n              // Found a substring which has a width less than the current\r\n              // box width. Rendering that substring on the current line\r\n              // and setting the remainder of the parent string as the next\r\n              // string to iterate on for the next line.\r\n              const nextLineText = textInCurrentLine.substring(i, textInCurrentLine.length);\r\n              textInCurrentLine = nextLineText;\r\n              curLineTextWidth = gc.measureText(textInCurrentLine).width;\r\n              gc.fillText(curSubString, textX, curY);\r\n              curY += textHeight;\r\n              // No need to continue iterating after we identified\r\n              // an index to break the string on.\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Multiple words in column header. Fitting maximum \r\n      // number of words possible per line (box width).\r\n      else {\r\n        while (wordsInColumn.length !== 0) {\r\n          // Processing the next word in the queue.\r\n          const curWord = wordsInColumn.shift();\r\n          // Joining that word with the existing text for\r\n          // the current line.\r\n          const incrementedText = [textInCurrentLine, curWord].join(\" \");\r\n          const incrementedTextWidth = gc.measureText(incrementedText).width;\r\n          if (incrementedTextWidth > boxWidth) {\r\n            // If the newly combined text has a width larger than\r\n            // the box width, we render the line before the current\r\n            // word was added. We set the current word as the next\r\n            // line.\r\n            gc.fillText(textInCurrentLine, textX, curY);\r\n            curY += textHeight;\r\n            textInCurrentLine = curWord!;\r\n          } \r\n          else {\r\n            // The combined text hasd a width less than the box width. We\r\n            // set the the current line text to be the new combined text.\r\n            textInCurrentLine = incrementedText;\r\n          }\r\n        }\r\n      }\r\n      gc.fillText(textInCurrentLine!, textX, curY);\r\n      // Terminating the call here as we don't want\r\n      // to apply text eliding when wrapping is active.\r\n      return;\r\n    }\r\n\r\n    // Elide text that is too long\r\n    let elide = '\\u2026';\r\n\r\n    // Compute elided text\r\n    if (elideDirection === 'right') {\r\n      while ((textWidth > boxWidth) && (text.length > 1)) {\r\n        if (text.length > 4 && textWidth >= 2 * boxWidth) {\r\n          // If text width is substantially bigger, take half the string\r\n          text = text.substring(0, (text.length / 2) + 1) + elide;\r\n        } else {\r\n          // Otherwise incrementally remove the last character\r\n          text = text.substring(0, text.length - 2) + elide;\r\n        }\r\n        textWidth = gc.measureText(text).width;\r\n      } \r\n    } else {\r\n      while ((textWidth > boxWidth) && (text.length > 1)) {\r\n        if (text.length > 4 && textWidth >= 2 * boxWidth) {\r\n          // If text width is substantially bigger, take half the string\r\n          text = elide + text.substring((text.length / 2));\r\n        } else {\r\n          // Otherwise incrementally remove the last character\r\n          text = elide + text.substring(2);\r\n        }\r\n        textWidth = gc.measureText(text).width;\r\n      }\r\n    }\r\n\r\n    // Draw the text for the cell.\r\n    gc.fillText(text, textX, textY);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `TextRenderer` class statics.\r\n */\r\nexport\r\nnamespace TextRenderer {\r\n  /**\r\n   * A type alias for the supported vertical alignment modes.\r\n   */\r\n  export\r\n  type VerticalAlignment = 'top' | 'center' | 'bottom';\r\n\r\n  /**\r\n   * A type alias for the supported horizontal alignment modes.\r\n   */\r\n  export\r\n  type HorizontalAlignment = 'left' | 'center' | 'right';\r\n\r\n  /**\r\n   * A type alias for the supported ellipsis sides.\r\n   */\r\n  export\r\n  type ElideDirection = 'left' | 'right';\r\n\r\n  /**\r\n   * An options object for initializing a text renderer.\r\n   */\r\n  export\r\n  interface IOptions {\r\n    /**\r\n     * The font for drawing the cell text.\r\n     *\r\n     * The default is `'12px sans-serif'`.\r\n     */\r\n    font?: CellRenderer.ConfigOption<string>;\r\n\r\n    /**\r\n     * The color for the drawing the cell text.\r\n     *\r\n     * The default `'#000000'`.\r\n     */\r\n    textColor?: CellRenderer.ConfigOption<string>;\r\n\r\n    /**\r\n     * The background color for the cells.\r\n     *\r\n     * The default is `''`.\r\n     */\r\n    backgroundColor?: CellRenderer.ConfigOption<string>;\r\n\r\n    /**\r\n     * The vertical alignment for the cell text.\r\n     *\r\n     * The default is `'center'`.\r\n     */\r\n    verticalAlignment?: CellRenderer.ConfigOption<VerticalAlignment>;\r\n\r\n    /**\r\n     * The horizontal alignment for the cell text.\r\n     *\r\n     * The default is `'left'`.\r\n     */\r\n    horizontalAlignment?: CellRenderer.ConfigOption<HorizontalAlignment>;\r\n\r\n    /**\r\n     * The format function for the renderer.\r\n     *\r\n     * The default is `TextRenderer.formatGeneric()`.\r\n     */\r\n    format?: FormatFunc;\r\n\r\n    /**\r\n     * The ellipsis direction for the cell text.\r\n     *\r\n     * The default is `'right'`.\r\n     */\r\n    elideDirection?: CellRenderer.ConfigOption<ElideDirection>;\r\n\r\n    /**\r\n     * Whether or not to apply text wrapping.\r\n     *\r\n     * The default is `'false'`.\r\n     */\r\n    wrapText?: CellRenderer.ConfigOption<boolean>;\r\n  }\r\n\r\n  /**\r\n   * A type alias for a format function.\r\n   */\r\n  export\r\n  type FormatFunc = CellRenderer.ConfigFunc<string>;\r\n\r\n  /**\r\n   * Create a generic text format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new generic text format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses the builtin `String()` to coerce any value\r\n   * to a string.\r\n   */\r\n  export\r\n  function formatGeneric(options: formatGeneric.IOptions = {}): FormatFunc {\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      return String(value);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatGeneric` function statics.\r\n   */\r\n  export\r\n  namespace formatGeneric {\r\n    /**\r\n     * The options for creating a generic format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a fixed decimal format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new fixed decimal format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses the builtin `Number()` and `toFixed()` to\r\n   * coerce values.\r\n   *\r\n   * The `formatIntlNumber()` formatter is more flexible, but slower.\r\n   */\r\n  export\r\n  function formatFixed(options: formatFixed.IOptions = {}): FormatFunc {\r\n    let digits = options.digits;\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      return Number(value).toFixed(digits);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatFixed` function statics.\r\n   */\r\n  export\r\n  namespace formatFixed {\r\n    /**\r\n     * The options for creating a fixed format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The number of digits to include after the decimal point.\r\n       *\r\n       * The default is determined by the user agent.\r\n       */\r\n      digits?: number;\r\n\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a significant figure format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new significant figure format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses the builtin `Number()` and `toPrecision()`\r\n   * to coerce values.\r\n   *\r\n   * The `formatIntlNumber()` formatter is more flexible, but slower.\r\n   */\r\n  export\r\n  function formatPrecision(options: formatPrecision.IOptions = {}): FormatFunc {\r\n    let digits = options.digits;\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      return Number(value).toPrecision(digits);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatPrecision` function statics.\r\n   */\r\n  export\r\n  namespace formatPrecision {\r\n    /**\r\n     * The options for creating a precision format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The number of significant figures to include in the value.\r\n       *\r\n       * The default is determined by the user agent.\r\n       */\r\n      digits?: number;\r\n\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a scientific notation format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new scientific notation format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses the builtin `Number()` and `toExponential()`\r\n   * to coerce values.\r\n   *\r\n   * The `formatIntlNumber()` formatter is more flexible, but slower.\r\n   */\r\n  export\r\n  function formatExponential(options: formatExponential.IOptions = {}): FormatFunc {\r\n    let digits = options.digits;\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      return Number(value).toExponential(digits);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatExponential` function statics.\r\n   */\r\n  export\r\n  namespace formatExponential {\r\n    /**\r\n     * The options for creating an exponential format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The number of digits to include after the decimal point.\r\n       *\r\n       * The default is determined by the user agent.\r\n       */\r\n      digits?: number;\r\n\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an international number format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new international number format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses the builtin `Intl.NumberFormat` object to\r\n   * coerce values.\r\n   *\r\n   * This is the most flexible (but slowest) number formatter.\r\n   */\r\n  export\r\n  function formatIntlNumber(options: formatIntlNumber.IOptions = {}): FormatFunc {\r\n    let missing = options.missing || '';\r\n    let nft = new Intl.NumberFormat(options.locales, options.options);\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      return nft.format(value);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatIntlNumber` function statics.\r\n   */\r\n  export\r\n  namespace formatIntlNumber {\r\n    /**\r\n     * The options for creating an intl number format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The locales to pass to the `Intl.NumberFormat` constructor.\r\n       *\r\n       * The default is determined by the user agent.\r\n       */\r\n      locales?: string | string[];\r\n\r\n      /**\r\n       * The options to pass to the `Intl.NumberFormat` constructor.\r\n       *\r\n       * The default is determined by the user agent.\r\n       */\r\n      options?: Intl.NumberFormatOptions;\r\n\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a date format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new date format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses `Date.toDateString()` to format the values.\r\n   *\r\n   * If a value is not a `Date` object, `new Date(value)` is used to\r\n   * coerce the value to a date.\r\n   *\r\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\r\n   */\r\n  export\r\n  function formatDate(options: formatDate.IOptions = {}): FormatFunc {\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      if (value instanceof Date) {\r\n        return value.toDateString();\r\n      }\r\n      return (new Date(value)).toDateString();\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatDate` function statics.\r\n   */\r\n  export\r\n  namespace formatDate {\r\n    /**\r\n     * The options for creating a date format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a time format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new time format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses `Date.toTimeString()` to format the values.\r\n   *\r\n   * If a value is not a `Date` object, `new Date(value)` is used to\r\n   * coerce the value to a date.\r\n   *\r\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\r\n   */\r\n  export\r\n  function formatTime(options: formatTime.IOptions = {}): FormatFunc {\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      if (value instanceof Date) {\r\n        return value.toTimeString();\r\n      }\r\n      return (new Date(value)).toTimeString();\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatTime` function statics.\r\n   */\r\n  export\r\n  namespace formatTime {\r\n    /**\r\n     * The options for creating a time format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an ISO datetime format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new ISO datetime format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses `Date.toISOString()` to format the values.\r\n   *\r\n   * If a value is not a `Date` object, `new Date(value)` is used to\r\n   * coerce the value to a date.\r\n   *\r\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\r\n   */\r\n  export\r\n  function formatISODateTime(options: formatISODateTime.IOptions = {}): FormatFunc {\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      if (value instanceof Date) {\r\n        return value.toISOString();\r\n      }\r\n      return (new Date(value)).toISOString();\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatISODateTime` function statics.\r\n   */\r\n  export\r\n  namespace formatISODateTime {\r\n    /**\r\n     * The options for creating an ISO datetime format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a UTC datetime format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new UTC datetime format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses `Date.toUTCString()` to format the values.\r\n   *\r\n   * If a value is not a `Date` object, `new Date(value)` is used to\r\n   * coerce the value to a date.\r\n   *\r\n   * The `formatIntlDateTime()` formatter is more flexible, but slower.\r\n   */\r\n  export\r\n  function formatUTCDateTime(options: formatUTCDateTime.IOptions = {}): FormatFunc {\r\n    let missing = options.missing || '';\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      if (value instanceof Date) {\r\n        return value.toUTCString();\r\n      }\r\n      return (new Date(value)).toUTCString();\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatUTCDateTime` function statics.\r\n   */\r\n  export\r\n  namespace formatUTCDateTime {\r\n    /**\r\n     * The options for creating a UTC datetime format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an international datetime format function.\r\n   *\r\n   * @param options - The options for creating the format function.\r\n   *\r\n   * @returns A new international datetime format function.\r\n   *\r\n   * #### Notes\r\n   * This formatter uses the builtin `Intl.DateTimeFormat` object to\r\n   * coerce values.\r\n   *\r\n   * This is the most flexible (but slowest) datetime formatter.\r\n   */\r\n  export\r\n  function formatIntlDateTime(options: formatIntlDateTime.IOptions = {}): FormatFunc {\r\n    let missing = options.missing || '';\r\n    let dtf = new Intl.DateTimeFormat(options.locales, options.options);\r\n    return ({ value }) => {\r\n      if (value === null || value === undefined) {\r\n        return missing;\r\n      }\r\n      return dtf.format(value);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `formatIntlDateTime` function statics.\r\n   */\r\n  export\r\n  namespace formatIntlDateTime {\r\n    /**\r\n     * The options for creating an intl datetime format function.\r\n     */\r\n    export\r\n    interface IOptions {\r\n      /**\r\n       * The locales to pass to the `Intl.DateTimeFormat` constructor.\r\n       *\r\n       * The default is determined by the user agent.\r\n       */\r\n      locales?: string | string[];\r\n\r\n      /**\r\n       * The options to pass to the `Intl.DateTimeFormat` constructor.\r\n       *\r\n       * The default is determined by the user agent.\r\n       */\r\n      options?: Intl.DateTimeFormatOptions;\r\n\r\n      /**\r\n       * The text to use for a `null` or `undefined` data value.\r\n       *\r\n       * The default is `''`.\r\n       */\r\n      missing?: string;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Measure the height of a font.\r\n   *\r\n   * @param font - The CSS font string of interest.\r\n   *\r\n   * @returns The height of the font bounding box.\r\n   *\r\n   * #### Notes\r\n   * This function uses a temporary DOM node to measure the text box\r\n   * height for the specified font. The first call for a given font\r\n   * will incur a DOM reflow, but the return value is cached, so any\r\n   * subsequent call for the same font will return the cached value.\r\n   */\r\n  export\r\n  function measureFontHeight(font: string): number {\r\n    // Look up the cached font height.\r\n    let height = Private.fontHeightCache[font];\r\n\r\n    // Return the cached font height if it exists.\r\n    if (height !== undefined) {\r\n      return height;\r\n    }\r\n\r\n    // Normalize the font.\r\n    Private.fontMeasurementGC.font = font;\r\n    let normFont = Private.fontMeasurementGC.font;\r\n\r\n    // Set the font on the measurement node.\r\n    Private.fontMeasurementNode.style.font = normFont;\r\n\r\n    // Add the measurement node to the document.\r\n    document.body.appendChild(Private.fontMeasurementNode);\r\n\r\n    // Measure the node height.\r\n    height = Private.fontMeasurementNode.offsetHeight;\r\n\r\n    // Remove the measurement node from the document.\r\n    document.body.removeChild(Private.fontMeasurementNode);\r\n\r\n    // Cache the measured height for the font and norm font.\r\n    Private.fontHeightCache[font] = height;\r\n    Private.fontHeightCache[normFont] = height;\r\n\r\n    // Return the measured height.\r\n    return height;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A cache of measured font heights.\r\n   */\r\n  export\r\n  const fontHeightCache: { [font: string]: number } = Object.create(null);\r\n\r\n  /**\r\n   * The DOM node used for font height measurement.\r\n   */\r\n  export\r\n  const fontMeasurementNode = (() => {\r\n    let node = document.createElement('div');\r\n    node.style.position = 'absolute';\r\n    node.style.top = '-99999px';\r\n    node.style.left = '-99999px';\r\n    node.style.visibility = 'hidden';\r\n    node.textContent = 'M';\r\n    return node;\r\n  })();\r\n\r\n  /**\r\n   * The GC used for font measurement.\r\n   */\r\n  export\r\n  const fontMeasurementGC = (() => {\r\n    let canvas = document.createElement('canvas');\r\n    canvas.width = 0;\r\n    canvas.height = 0;\r\n    return canvas.getContext('2d')!;\r\n  })();\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  ISignal, Signal\r\n} from '@lumino/signaling';\r\n\r\nimport {\r\n  CellRenderer\r\n} from './cellrenderer';\r\n\r\nimport {\r\n  DataModel\r\n} from './datamodel';\r\n\r\nimport {\r\n  TextRenderer\r\n} from './textrenderer';\r\n\r\n\r\n/**\r\n * A class which manages the mapping of cell renderers.\r\n */\r\nexport\r\nclass RendererMap {\r\n  /**\r\n   * Construct a new renderer map.\r\n   *\r\n   * @param values - The initial values for the map.\r\n   *\r\n   * @param fallback - The renderer of last resort.\r\n   */\r\n  constructor(values: RendererMap.Values = {}, fallback?: CellRenderer) {\r\n    this._values = { ...values };\r\n    this._fallback = fallback || new TextRenderer();\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the renderer map has changed.\r\n   */\r\n  get changed(): ISignal<this, void> {\r\n    return this._changed;\r\n  }\r\n\r\n  /**\r\n   * Get the cell renderer to use for the given cell config.\r\n   *\r\n   * @param config - The cell config of interest.\r\n   *\r\n   * @returns The renderer to use for the cell.\r\n   */\r\n  get(config: CellRenderer.CellConfig): CellRenderer {\r\n    // Fetch the renderer from the values map.\r\n    let renderer = this._values[config.region];\r\n\r\n    // Execute a resolver function if necessary.\r\n    if (typeof renderer === 'function') {\r\n      try {\r\n        renderer = renderer(config);\r\n      } catch (err) {\r\n        renderer = undefined;\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    // Return the renderer or the fallback.\r\n    return renderer || this._fallback;\r\n  }\r\n\r\n  /**\r\n   * Update the renderer map with new values\r\n   *\r\n   * @param values - The updated values for the map.\r\n   *\r\n   * @param fallback - The renderer of last resort.\r\n   *\r\n   * #### Notes\r\n   * This method always emits the `changed` signal.\r\n   */\r\n  update(values: RendererMap.Values = {}, fallback?: CellRenderer): void {\r\n    this._values = { ...this._values, ...values };\r\n    this._fallback = fallback || this._fallback;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  private _fallback: CellRenderer;\r\n  private _values: RendererMap.Values;\r\n  private _changed = new Signal<this, void>(this);\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `RendererMap` class statics.\r\n */\r\nexport\r\nnamespace RendererMap {\r\n  /**\r\n   * A type alias for a cell renderer resolver function.\r\n   */\r\n  export\r\n  type Resolver = CellRenderer.ConfigFunc<CellRenderer | undefined>;\r\n\r\n  /**\r\n   * A type alias for a `RendererMap` values type.\r\n   */\r\n  export\r\n  type Values = {\r\n    [R in DataModel.CellRegion]?: Resolver | CellRenderer | undefined;\r\n  };\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  ArrayExt\r\n} from '@lumino/algorithm';\r\n\r\n\r\n/**\r\n * An object which manages a collection of variable sized sections.\r\n *\r\n * #### Notes\r\n * This class is an implementation detail. It is designed to manage\r\n * the variable row and column sizes for a data grid. User code will\r\n * not interact with this class directly.\r\n */\r\nexport\r\nclass SectionList {\r\n  /**\r\n   * Construct a new section list.\r\n   *\r\n   * @param options - The options for initializing the list.\r\n   */\r\n  constructor(options: SectionList.IOptions) {\r\n    this._minimumSize = options.minimumSize || 2;\r\n    this._defaultSize = Math.max(this._minimumSize, Math.floor(options.defaultSize));\r\n  }\r\n\r\n  /**\r\n   * The total size of all sections in the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get length(): number {\r\n    return this._length;\r\n  }\r\n\r\n  /**\r\n   * The total number of sections in the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get count(): number {\r\n    return this._count;\r\n  }\r\n\r\n  /**\r\n   * Get the minimum size of sections in the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get minimumSize(): number {\r\n    return this._minimumSize;\r\n  }\r\n\r\n  /**\r\n   * Set the minimum size of sections in the list.\r\n   *\r\n   * #### Complexity\r\n   * Linear on the number of resized sections.\r\n   */\r\n  set minimumSize(value: number) {\r\n    // Normalize the value.\r\n    value = Math.max(2, Math.floor(value));\r\n\r\n    // Bail early if the value does not change.\r\n    if (this._minimumSize === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal minimum size.\r\n    this._minimumSize = value;\r\n\r\n    // Update default size if larger than minimum size\r\n    if (value > this._defaultSize) {\r\n      this.defaultSize = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the default size of sections in the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get defaultSize(): number {\r\n    return this._defaultSize;\r\n  }\r\n\r\n  /**\r\n   * Set the default size of sections in the list.\r\n   *\r\n   * #### Complexity\r\n   * Linear on the number of resized sections.\r\n   */\r\n  set defaultSize(value: number) {\r\n    // Normalize the value.\r\n    value = Math.max(this._minimumSize, Math.floor(value));\r\n\r\n    // Bail early if the value does not change.\r\n    if (this._defaultSize === value) {\r\n      return;\r\n    }\r\n\r\n    // Compute the delta default size.\r\n    let delta = value - this._defaultSize;\r\n\r\n    // Update the internal default size.\r\n    this._defaultSize = value;\r\n\r\n    // Update the length.\r\n    this._length += delta * (this._count - this._sections.length);\r\n\r\n    // Bail early if there are no modified sections.\r\n    if (this._sections.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Recompute the offsets of the modified sections.\r\n    for (let i = 0, n = this._sections.length; i < n; ++i) {\r\n      // Look up the previous and current modified sections.\r\n      let prev = this._sections[i - 1];\r\n      let curr = this._sections[i];\r\n\r\n      // Adjust the offset for the current section.\r\n      if (prev) {\r\n        let count = curr.index - prev.index - 1;\r\n        curr.offset = prev.offset + prev.size + count * value;\r\n      } else {\r\n        curr.offset = curr.index * value;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clamp a size to the minimum section size\r\n   *\r\n   * @param size - The size to clamp.\r\n   *\r\n   * @returns The size or the section minimum size, whichever is larger\r\n   */\r\n  clampSize(size: number): number {\r\n    return Math.max(this._minimumSize, Math.floor(size));\r\n  }\r\n\r\n  /**\r\n   * Find the index of the section which covers the given offset.\r\n   *\r\n   * @param offset - The offset of the section of interest.\r\n   *\r\n   * @returns The index of the section which covers the given offset,\r\n   *   or `-1` if the offset is out of range.\r\n   *\r\n   * #### Complexity\r\n   * Logarithmic on the number of resized sections.\r\n   */\r\n  indexOf(offset: number): number {\r\n    // Bail early if the offset is out of range.\r\n    if (offset < 0 || offset >= this._length || this._count === 0) {\r\n      return -1;\r\n    }\r\n\r\n    // Handle the simple case of no modified sections.\r\n    if (this._sections.length === 0) {\r\n      return Math.floor(offset / this._defaultSize);\r\n    }\r\n\r\n    // Find the modified section for the given offset.\r\n    let i = ArrayExt.lowerBound(this._sections, offset, Private.offsetCmp);\r\n\r\n    // Return the index of an exact match.\r\n    if (i < this._sections.length && this._sections[i].offset <= offset) {\r\n      return this._sections[i].index;\r\n    }\r\n\r\n    // Handle the case of no modified sections before the offset.\r\n    if (i === 0) {\r\n      return Math.floor(offset / this._defaultSize);\r\n    }\r\n\r\n    // Compute the index from the previous modified section.\r\n    let section = this._sections[i - 1];\r\n    let span = offset - (section.offset + section.size);\r\n    return section.index + Math.floor(span / this._defaultSize) + 1;\r\n  }\r\n\r\n  /**\r\n   * Find the offset of the section at the given index.\r\n   *\r\n   * @param index - The index of the section of interest.\r\n   *\r\n   * @returns The offset of the section at the given index, or `-1`\r\n   *   if the index is out of range.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   *\r\n   * #### Complexity\r\n   * Logarithmic on the number of resized sections.\r\n   */\r\n  offsetOf(index: number): number {\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= this._count) {\r\n      return -1;\r\n    }\r\n\r\n    // Handle the simple case of no modified sections.\r\n    if (this._sections.length === 0) {\r\n      return index * this._defaultSize;\r\n    }\r\n\r\n    // Find the modified section for the given index.\r\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\r\n\r\n    // Return the offset of an exact match.\r\n    if (i < this._sections.length && this._sections[i].index === index) {\r\n      return this._sections[i].offset;\r\n    }\r\n\r\n    // Handle the case of no modified sections before the index.\r\n    if (i === 0) {\r\n      return index * this._defaultSize;\r\n    }\r\n\r\n    // Compute the offset from the previous modified section.\r\n    let section = this._sections[i - 1];\r\n    let span = index - section.index - 1;\r\n    return section.offset + section.size + span * this._defaultSize;\r\n  }\r\n\r\n  /**\r\n   * Find the extent of the section at the given index.\r\n   *\r\n   * @param index - The index of the section of interest.\r\n   *\r\n   * @returns The extent of the section at the given index, or `-1`\r\n   *   if the index is out of range.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   *\r\n   * #### Complexity\r\n   * Logarithmic on the number of resized sections.\r\n   */\r\n  extentOf(index: number): number {\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= this._count) {\r\n      return -1;\r\n    }\r\n\r\n    // Handle the simple case of no modified sections.\r\n    if (this._sections.length === 0) {\r\n      return (index + 1) * this._defaultSize - 1;\r\n    }\r\n\r\n    // Find the modified section for the given index.\r\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\r\n\r\n    // Return the offset of an exact match.\r\n    if (i < this._sections.length && this._sections[i].index === index) {\r\n      return this._sections[i].offset + this._sections[i].size - 1;\r\n    }\r\n\r\n    // Handle the case of no modified sections before the index.\r\n    if (i === 0) {\r\n      return (index + 1) * this._defaultSize - 1;\r\n    }\r\n\r\n    // Compute the offset from the previous modified section.\r\n    let section = this._sections[i - 1];\r\n    let span = index - section.index;\r\n    return section.offset + section.size + span * this._defaultSize - 1;\r\n  }\r\n\r\n  /**\r\n   * Find the size of the section at the given index.\r\n   *\r\n   * @param index - The index of the section of interest.\r\n   *\r\n   * @returns The size of the section at the given index, or `-1`\r\n   *   if the index is out of range.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   *\r\n   * #### Complexity\r\n   * Logarithmic on the number of resized sections.\r\n   */\r\n  sizeOf(index: number): number {\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= this._count) {\r\n      return -1;\r\n    }\r\n\r\n    // Handle the simple case of no modified sections.\r\n    if (this._sections.length === 0) {\r\n      return this._defaultSize;\r\n    }\r\n\r\n    // Find the modified section for the given index.\r\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\r\n\r\n    // Return the size of an exact match.\r\n    if (i < this._sections.length && this._sections[i].index === index) {\r\n      return this._sections[i].size;\r\n    }\r\n\r\n    // Return the default size for all other cases.\r\n    return this._defaultSize;\r\n  }\r\n\r\n  /**\r\n   * Resize a section in the list.\r\n   *\r\n   * @param index - The index of the section to resize. This method\r\n   *   is a no-op if this value is out of range.\r\n   *\r\n   * @param size - The new size of the section. This value will be\r\n   *   clamped to an integer `>= 0`.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   *\r\n   * #### Complexity\r\n   * Linear on the number of resized sections.\r\n   */\r\n  resize(index: number, size: number): void {\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= this._count) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the size to an integer >= minimum size.\r\n    size = Math.max(this._minimumSize, Math.floor(size));\r\n\r\n    // Find the modified section for the given index.\r\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\r\n\r\n    // Update or create the modified section as needed.\r\n    let delta: number;\r\n    if (i < this._sections.length && this._sections[i].index === index) {\r\n      let section = this._sections[i];\r\n      delta = size - section.size;\r\n      section.size = size;\r\n    } else if (i === 0) {\r\n      let offset = index * this._defaultSize;\r\n      ArrayExt.insert(this._sections, i, { index, offset, size });\r\n      delta = size - this._defaultSize;\r\n    } else {\r\n      let section = this._sections[i - 1];\r\n      let span = index - section.index - 1;\r\n      let offset = section.offset + section.size + span * this._defaultSize;\r\n      ArrayExt.insert(this._sections, i, { index, offset, size });\r\n      delta = size - this._defaultSize;\r\n    }\r\n\r\n    // Adjust the length.\r\n    this._length += delta;\r\n\r\n    // Update all modified sections after the resized section.\r\n    for (let j = i + 1, n = this._sections.length; j < n; ++j) {\r\n      this._sections[j].offset += delta;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Insert sections into the list.\r\n   *\r\n   * @param index - The index at which to insert the sections. This\r\n   *   value will be clamped to the bounds of the list.\r\n   *\r\n   * @param count - The number of sections to insert. This method\r\n   *   is a no-op if this value is `<= 0`.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` or `count` which is non-integral.\r\n   *\r\n   * #### Complexity\r\n   * Linear on the number of resized sections.\r\n   */\r\n  insert(index: number, count: number): void {\r\n    // Bail early if there are no sections to insert.\r\n    if (count <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the index to the bounds of the list.\r\n    index = Math.max(0, Math.min(index, this._count));\r\n\r\n    // Add the new sections to the totals.\r\n    let span = count * this._defaultSize;\r\n    this._count += count;\r\n    this._length += span;\r\n\r\n    // Bail early if there are no modified sections to update.\r\n    if (this._sections.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Find the modified section for the given index.\r\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\r\n\r\n    // Update all modified sections after the insert location.\r\n    for (let n = this._sections.length; i < n; ++i) {\r\n      let section = this._sections[i];\r\n      section.index += count;\r\n      section.offset += span;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove sections from the list.\r\n   *\r\n   * @param index - The index of the first section to remove. This\r\n   *   method is a no-op if this value is out of range.\r\n   *\r\n   * @param count - The number of sections to remove. This method\r\n   *   is a no-op if this value is `<= 0`.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` or `count` which is non-integral.\r\n   *\r\n   * #### Complexity\r\n   * Linear on the number of resized sections.\r\n   */\r\n  remove(index: number, count: number): void {\r\n    // Bail early if there is nothing to remove.\r\n    if (index < 0 || index >= this._count || count <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the count to the bounds of the list.\r\n    count = Math.min(this._count - index, count);\r\n\r\n    // Handle the simple case of no modified sections to update.\r\n    if (this._sections.length === 0) {\r\n      this._count -= count;\r\n      this._length -= count * this._defaultSize;\r\n      return;\r\n    }\r\n\r\n    // Handle the simple case of removing all sections.\r\n    if (count === this._count) {\r\n      this._length = 0;\r\n      this._count = 0;\r\n      this._sections.length = 0;\r\n      return;\r\n    }\r\n\r\n    // Find the modified section for the start index.\r\n    let i = ArrayExt.lowerBound(this._sections, index, Private.indexCmp);\r\n\r\n    // Find the modified section for the end index.\r\n    let j = ArrayExt.lowerBound(this._sections, index + count, Private.indexCmp);\r\n\r\n    // Remove the relevant modified sections.\r\n    let removed = this._sections.splice(i, j - i);\r\n\r\n    // Compute the total removed span.\r\n    let span = (count - removed.length) * this._defaultSize;\r\n    for (let k = 0, n = removed.length; k < n; ++k) {\r\n      span += removed[k].size;\r\n    }\r\n\r\n    // Adjust the totals.\r\n    this._count -= count;\r\n    this._length -= span;\r\n\r\n    // Update all modified sections after the removed span.\r\n    for (let k = i, n = this._sections.length; k < n; ++k) {\r\n      let section = this._sections[k];\r\n      section.index -= count;\r\n      section.offset -= span;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move sections within the list.\r\n   *\r\n   * @param index - The index of the first section to move. This method\r\n   *   is a no-op if this value is out of range.\r\n   *\r\n   * @param count - The number of sections to move. This method is a\r\n   *   no-op if this value is `<= 0`.\r\n   *\r\n   * @param destination - The destination index for the first section.\r\n   *   This value will be clamped to the allowable range.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index`, `count`, or `destination` which is non-integral.\r\n   *\r\n   * #### Complexity\r\n   * Linear on the number of moved resized sections.\r\n   */\r\n  move(index: number, count: number, destination: number): void {\r\n    // Bail early if there is nothing to move.\r\n    if (index < 0 || index >= this._count || count <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Handle the simple case of no modified sections.\r\n    if (this._sections.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the move count to the limit.\r\n    count = Math.min(count, this._count - index);\r\n\r\n    // Clamp the destination index to the limit.\r\n    destination = Math.min(Math.max(0, destination), this._count - count);\r\n\r\n    // Bail early if there is no effective move.\r\n    if (index === destination) {\r\n      return;\r\n    }\r\n\r\n    // Compute the first affected index.\r\n    let i1 = Math.min(index, destination);\r\n\r\n    // Look up the first affected modified section.\r\n    let k1 = ArrayExt.lowerBound(this._sections, i1, Private.indexCmp);\r\n\r\n    // Bail early if there are no affected modified sections.\r\n    if (k1 === this._sections.length) {\r\n      return;\r\n    }\r\n\r\n    // Compute the last affected index.\r\n    let i2 = Math.max(index + count - 1, destination + count - 1);\r\n\r\n    // Look up the last affected modified section.\r\n    let k2 = ArrayExt.upperBound(this._sections, i2, Private.indexCmp) - 1;\r\n\r\n    // Bail early if there are no affected modified sections.\r\n    if (k2 < k1) {\r\n      return;\r\n    }\r\n\r\n    // Compute the pivot index.\r\n    let pivot = destination < index ? index : index + count;\r\n\r\n    // Compute the count for each side of the pivot.\r\n    let count1 = pivot - i1;\r\n    let count2 = i2 - pivot + 1;\r\n\r\n    // Compute the span for each side of the pivot.\r\n    let span1 = count1 * this._defaultSize;\r\n    let span2 = count2 * this._defaultSize;\r\n\r\n    // Adjust the spans for the modified sections.\r\n    for (let j = k1; j <= k2; ++j) {\r\n      let section = this._sections[j];\r\n      if (section.index < pivot) {\r\n        span1 += section.size - this._defaultSize;\r\n      } else {\r\n        span2 += section.size - this._defaultSize;\r\n      }\r\n    }\r\n\r\n    // Look up the pivot section.\r\n    let k3 = ArrayExt.lowerBound(this._sections, pivot, Private.indexCmp);\r\n\r\n    // Rotate the modified sections if needed.\r\n    if (k1 <= k3 && k3 <= k2) {\r\n      ArrayExt.rotate(this._sections, k3 - k1, k1, k2);\r\n    }\r\n\r\n    // Adjust the modified section indices and offsets.\r\n    for (let j = k1; j <= k2; ++j) {\r\n      let section = this._sections[j];\r\n      if (section.index < pivot) {\r\n        section.index += count2;\r\n        section.offset += span2;\r\n      } else {\r\n        section.index -= count1;\r\n        section.offset -= span1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset all modified sections to the default size.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  reset(): void {\r\n    this._sections.length = 0;\r\n    this._length = this._count * this._defaultSize;\r\n  }\r\n\r\n  /**\r\n   * Remove all sections from the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  clear(): void {\r\n    this._count = 0;\r\n    this._length = 0;\r\n    this._sections.length = 0;\r\n  }\r\n\r\n  private _count = 0;\r\n  private _length = 0;\r\n  private _minimumSize: number;\r\n  private _defaultSize: number;\r\n  private _sections: Private.Section[] = [];\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `SectionList` class statics.\r\n */\r\nexport\r\nnamespace SectionList {\r\n  /**\r\n   * An options object for initializing a section list.\r\n   */\r\n  export\r\n  interface IOptions {\r\n    /**\r\n     * The size of new sections added to the list.\r\n     */\r\n    defaultSize: number;\r\n\r\n    /**\r\n     * The minimum size of the section list.\r\n     */\r\n    minimumSize?: number;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * An object which represents a modified section.\r\n   */\r\n  export\r\n  type Section = {\r\n    /**\r\n     * The index of the section.\r\n     *\r\n     * This is always `>= 0`.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * The offset of the section.\r\n     */\r\n    offset: number;\r\n\r\n    /**\r\n     * The size of the section.\r\n     *\r\n     * This is always `>= 0`.\r\n     */\r\n    size: number;\r\n  };\r\n\r\n  /**\r\n   * A comparison function for searching by offset.\r\n   */\r\n  export\r\n  function offsetCmp(section: Section, offset: number): number {\r\n    if (offset < section.offset) {\r\n      return 1;\r\n    }\r\n    if (section.offset + section.size <= offset) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * A comparison function for searching by index.\r\n   */\r\n  export\r\n  function indexCmp(section: Section, index: number): number {\r\n    return section.index - index;\r\n  }\r\n}\r\n","/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n    ICellEditor,\r\n    CellEditor,\r\n    CellDataType,\r\n    ICellEditOptions,\r\n    TextCellEditor,\r\n    NumberCellEditor,\r\n    IntegerCellEditor,\r\n    BooleanCellEditor,\r\n    DateCellEditor,\r\n    OptionCellEditor,\r\n    DynamicOptionCellEditor,\r\n    ICellEditResponse\r\n} from './celleditor';\r\n\r\nimport {\r\n  DataModel, MutableDataModel\r\n} from './datamodel';\r\n\r\n/**\r\n * A type alias for cell editor override identifier.\r\n */\r\nexport\r\ntype EditorOverrideIdentifier = CellDataType | DataModel.Metadata | 'default';\r\n\r\n/**\r\n * An object which manages cell editing.\r\n */\r\nexport\r\ninterface ICellEditorController {\r\n  /**\r\n   * Override cell editor for the cells matching the identifier.\r\n   *\r\n   * @param identifier - Cell identifier to use when matching cells.\r\n   * if identifier is a CellDataType, then cell matching is done using data type of the cell,\r\n   * if identifier is a Metadata, then partial match of the cell metadata with identifier is used for match,\r\n   * if identifier is 'default' then override is used as default editor when no other editor is found suitable\r\n   *\r\n   * @param editor - The cell editor to use or resolver to use to get an editor for matching cells.\r\n   */\r\n  setEditor(identifier: EditorOverrideIdentifier, editor: ICellEditor | Resolver): void;\r\n  /**\r\n   * Start editing a cell.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param options - The cell editing options.\r\n   */\r\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): boolean;\r\n  /**\r\n   * Cancel editing.\r\n   */\r\n  cancel(): void;\r\n}\r\n\r\n/**\r\n * A type alias for a cell editor config function.\r\n *\r\n * This type is used to compute a value from a cell config object.\r\n */\r\nexport\r\ntype ConfigFunc<T> = (config: CellEditor.CellConfig) => T;\r\n\r\n/**\r\n * A type alias for a cell editor config option.\r\n *\r\n * A config option can be a static value or a config function.\r\n */\r\nexport\r\ntype ConfigOption<T> = T | ConfigFunc<T>;\r\n\r\n/**\r\n * A type alias for a cell editor resolver function.\r\n */\r\nexport\r\ntype Resolver = ConfigFunc<ICellEditor | undefined>;\r\n\r\n/**\r\n * Resolve a config option for a cell editor.\r\n *\r\n * @param option - The config option to resolve.\r\n *\r\n * @param config - The cell config object.\r\n *\r\n * @returns The resolved value for the option.\r\n */\r\nexport\r\nfunction resolveOption<T>(option: ConfigOption<T>, config: CellEditor.CellConfig): T {\r\n  return typeof option === 'function' ? (option as ConfigFunc<T>)(config) : option;\r\n}\r\n\r\n/**\r\n * An object which manages cell editing. It stores editor overrides,\r\n * decides which editor to use for a cell, makes sure there is only one editor active.\r\n */\r\nexport\r\nclass CellEditorController implements ICellEditorController {\r\n  /**\r\n   * Override cell editor for the cells matching the identifier.\r\n   *\r\n   * @param identifier - Cell identifier to use when matching cells.\r\n   * if identifier is a CellDataType, then cell matching is done using data type of the cell,\r\n   * if identifier is a Metadata, then partial match of the cell metadata with identifier is used for match,\r\n   * if identifier is 'default' then override is used as default editor when no other editor is found suitable\r\n   *\r\n   * @param editor - The cell editor to use or resolver to use to get an editor for matching cells.\r\n   */\r\n  setEditor(identifier: EditorOverrideIdentifier, editor: ICellEditor | Resolver) {\r\n    if (typeof identifier === 'string') {\r\n      this._typeBasedOverrides.set(identifier, editor);\r\n    } else {\r\n      const key = this._metadataIdentifierToKey(identifier);\r\n      this._metadataBasedOverrides.set(key, [identifier, editor]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start editing a cell.\r\n   *\r\n   * @param cell - The object holding cell configuration data.\r\n   *\r\n   * @param options - The cell editing options.\r\n   */\r\n  edit(cell: CellEditor.CellConfig, options?: ICellEditOptions): boolean {\r\n    const grid = cell.grid;\r\n\r\n    if (!grid.editable) {\r\n      console.error('Grid cannot be edited!');\r\n      return false;\r\n    }\r\n\r\n    this.cancel();\r\n\r\n    this._cell = cell;\r\n\r\n    options = options || {};\r\n    options.onCommit = options.onCommit || this._onCommit.bind(this);\r\n    options.onCancel = options.onCancel || this._onCancel.bind(this);\r\n\r\n    // if an editor is passed in with options, then use it for editing\r\n    if (options.editor) {\r\n      this._editor = options.editor;\r\n      options.editor.edit(cell, options);\r\n      return true;\r\n    }\r\n\r\n    // choose an editor based on overrides / cell data type\r\n    const editor = this._getEditor(cell);\r\n    if (editor) {\r\n      this._editor = editor;\r\n      editor.edit(cell, options);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Cancel editing.\r\n   */\r\n  cancel(): void {\r\n    if (this._editor) {\r\n      this._editor.cancel();\r\n      this._editor = null;\r\n    }\r\n\r\n    this._cell = null;\r\n  }\r\n\r\n  private _onCommit(response: ICellEditResponse): void {\r\n    const cell = this._cell;\r\n\r\n    if (!cell) {\r\n      return;\r\n    }\r\n\r\n    const grid = cell.grid;\r\n    const dataModel = grid.dataModel as MutableDataModel;\r\n    dataModel.setData('body', cell.row, cell.column, response.value);\r\n    grid.viewport.node.focus();\r\n    if (response.cursorMovement !== 'none') {\r\n      grid.moveCursor(response.cursorMovement);\r\n      grid.scrollToCursor();\r\n    }\r\n  }\r\n\r\n  private _onCancel(): void {\r\n    if (!this._cell) {\r\n      return;\r\n    }\r\n\r\n    this._cell.grid.viewport.node.focus();\r\n  }\r\n\r\n  private _getDataTypeKey(cell: CellEditor.CellConfig): string {\r\n    const metadata = cell.grid.dataModel ? cell.grid.dataModel.metadata('body', cell.row, cell.column) : null;\r\n\r\n    if (!metadata) {\r\n      return 'default';\r\n    }\r\n\r\n    let key = '';\r\n\r\n    if (metadata) {\r\n      key = metadata.type;\r\n    }\r\n\r\n    if (metadata.constraint && metadata.constraint.enum) {\r\n      if (metadata.constraint.enum === 'dynamic') {\r\n        key += ':dynamic-option';\r\n      } else {\r\n        key += ':option';\r\n      }\r\n    }\r\n\r\n    return key;\r\n  }\r\n\r\n  private _objectToKey(object: any): string {\r\n    let str = '';\r\n    for (let key in object) {\r\n      const value = object[key];\r\n      if (typeof value === 'object') {\r\n        str += `${key}:${this._objectToKey(value)}`;\r\n      } else {\r\n        str += `[${key}:${value}]`;\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  private _metadataIdentifierToKey(metadata: DataModel.Metadata): string {\r\n    return this._objectToKey(metadata);\r\n  }\r\n\r\n  private _metadataMatchesIdentifier(metadata: DataModel.Metadata, identifier: DataModel.Metadata): boolean {\r\n    for (let key in identifier) {\r\n      if (!metadata.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n\r\n      const identifierValue = identifier[key];\r\n      const metadataValue = metadata[key];\r\n      if (typeof identifierValue === 'object') {\r\n        if (!this._metadataMatchesIdentifier(metadataValue, identifierValue)) {\r\n          return false;\r\n        }\r\n      } else if (metadataValue !== identifierValue) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private _getMetadataBasedEditor(cell: CellEditor.CellConfig): ICellEditor | undefined {\r\n    let editorMatched: ICellEditor | undefined;\r\n    const metadata = cell.grid.dataModel!.metadata('body', cell.row, cell.column);\r\n    if (metadata) {\r\n      this._metadataBasedOverrides.forEach((value) => {\r\n        if (!editorMatched) {\r\n          let [identifier, editor] = value;\r\n          if (this._metadataMatchesIdentifier(metadata, identifier)) {\r\n            editorMatched = resolveOption(editor, cell);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return editorMatched;\r\n  }\r\n\r\n  /**\r\n   * Choose the most appropriate cell editor to use based on overrides / cell data type.\r\n   * \r\n   * If no match is found in overrides or based on cell data type, and if cell has a primitive\r\n   * data type then TextCellEditor is used as default cell editor. If 'default' cell editor\r\n   * is overridden, then it is used instead of TextCellEditor for default.\r\n   */\r\n  private _getEditor(cell: CellEditor.CellConfig): ICellEditor | undefined {\r\n    const dtKey = this._getDataTypeKey(cell);\r\n\r\n    // find an editor based on data type based override\r\n    if (this._typeBasedOverrides.has(dtKey)) {\r\n      const editor = this._typeBasedOverrides.get(dtKey);\r\n      return resolveOption(editor!, cell);\r\n    } // find an editor based on metadata match based override\r\n    else if (this._metadataBasedOverrides.size > 0) {\r\n      const editor = this._getMetadataBasedEditor(cell);\r\n      if (editor) {\r\n        return editor;\r\n      }\r\n    }\r\n\r\n    // choose an editor based on data type\r\n    switch (dtKey) {\r\n      case 'string':\r\n        return new TextCellEditor();\r\n      case 'number':\r\n        return new NumberCellEditor();\r\n      case 'integer':\r\n        return new IntegerCellEditor();\r\n      case 'boolean':\r\n        return new BooleanCellEditor();\r\n      case 'date':\r\n        return new DateCellEditor();\r\n      case 'string:option':\r\n      case 'number:option':\r\n      case 'integer:option':\r\n      case 'date:option':\r\n      case 'array:option':\r\n        return new OptionCellEditor();\r\n      case 'string:dynamic-option':\r\n      case 'number:dynamic-option':\r\n      case 'integer:dynamic-option':\r\n      case 'date:dynamic-option':\r\n        return new DynamicOptionCellEditor();\r\n    }\r\n\r\n    // if an override exists for 'default', then use it\r\n    if (this._typeBasedOverrides.has('default')) {\r\n      const editor = this._typeBasedOverrides.get('default');\r\n      return resolveOption(editor!, cell);\r\n    }\r\n\r\n    // if cell has a primitive data type then use TextCellEditor\r\n    const data = cell.grid.dataModel!.data('body', cell.row, cell.column);\r\n    if (!data || typeof data !== 'object') {\r\n      return new TextCellEditor();\r\n    }\r\n\r\n    // no suitable editor found for the cell\r\n    return undefined;\r\n  }\r\n\r\n  // active cell editor\r\n  private _editor: ICellEditor | null = null;\r\n  // active cell being edited\r\n  private _cell: CellEditor.CellConfig | null = null;\r\n  // cell editor overrides based on cell data type identifier\r\n  private _typeBasedOverrides: Map<string, ICellEditor | Resolver> = new Map();\r\n  // cell editor overrides based on partial metadata match\r\n  private _metadataBasedOverrides: Map<string, [DataModel.Metadata, ICellEditor | Resolver]> = new Map();\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  toArray\r\n} from '@lumino/algorithm';\r\n\r\nimport {\r\n  IDisposable\r\n} from '@lumino/disposable';\r\n\r\nimport {\r\n  ClipboardExt, ElementExt, Platform\r\n} from '@lumino/domutils';\r\n\r\nimport {\r\n  ConflatableMessage, IMessageHandler, Message, MessageLoop\r\n} from '@lumino/messaging';\r\n\r\nimport {\r\n  GridLayout, ScrollBar, Widget\r\n} from '@lumino/widgets';\r\n\r\nimport {\r\n  CellRenderer\r\n} from './cellrenderer';\r\n\r\nimport {\r\n  DataModel, MutableDataModel\r\n} from './datamodel';\r\n\r\nimport {\r\n  GraphicsContext\r\n} from './graphicscontext';\r\n\r\nimport {\r\n  RendererMap\r\n} from './renderermap';\r\n\r\nimport {\r\n  SectionList\r\n} from './sectionlist';\r\n\r\nimport {\r\n  SelectionModel\r\n} from './selectionmodel';\r\n\r\nimport {\r\n  ICellEditorController,\r\n  CellEditorController\r\n} from './celleditorcontroller';\r\n\r\n\r\n/**\r\n * A widget which implements a high-performance tabular data grid.\r\n *\r\n * #### Notes\r\n * A data grid is implemented as a composition of child widgets. These\r\n * child widgets are considered an implementation detail. Manipulating\r\n * the child widgets of a data grid directly is undefined behavior.\r\n *\r\n * This class is not designed to be subclassed.\r\n */\r\nexport\r\nclass DataGrid extends Widget {\r\n  /**\r\n   * Construct a new data grid.\r\n   *\r\n   * @param options - The options for initializing the data grid.\r\n   */\r\n  constructor(options: DataGrid.IOptions = {}) {\r\n    super();\r\n    this.addClass('lm-DataGrid');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-DataGrid');\r\n    /* </DEPRECATED> */\r\n\r\n    // Parse the simple options.\r\n    this._style = options.style || DataGrid.defaultStyle;\r\n    this._stretchLastRow = options.stretchLastRow || false;\r\n    this._stretchLastColumn = options.stretchLastColumn || false;\r\n    this._headerVisibility = options.headerVisibility || 'all';\r\n    this._cellRenderers = options.cellRenderers || new RendererMap();\r\n    this._copyConfig = options.copyConfig || DataGrid.defaultCopyConfig;\r\n\r\n    // Connect to the renderer map changed signal.\r\n    this._cellRenderers.changed.connect(this._onRenderersChanged, this);\r\n\r\n    // Parse the default sizes.\r\n    let defaultSizes = options.defaultSizes || DataGrid.defaultSizes;\r\n    let minimumSizes = options.minimumSizes || DataGrid.minimumSizes;\r\n\r\n    // Set up the sections lists.\r\n    this._rowSections = new SectionList({ defaultSize: defaultSizes.rowHeight,\r\n      minimumSize: minimumSizes.rowHeight });\r\n    this._columnSections = new SectionList({ defaultSize: defaultSizes.columnWidth,\r\n      minimumSize: minimumSizes.columnWidth});\r\n    this._rowHeaderSections = new SectionList({ defaultSize: defaultSizes.rowHeaderWidth,\r\n      minimumSize: minimumSizes.rowHeaderWidth});\r\n    this._columnHeaderSections = new SectionList({ defaultSize: defaultSizes.columnHeaderHeight,\r\n      minimumSize: minimumSizes.columnHeaderHeight});\r\n\r\n    // Create the canvas, buffer, and overlay objects.\r\n    this._canvas = Private.createCanvas();\r\n    this._buffer = Private.createCanvas();\r\n    this._overlay = Private.createCanvas();\r\n\r\n    // Get the graphics contexts for the canvases.\r\n    this._canvasGC = this._canvas.getContext('2d')!;\r\n    this._bufferGC = this._buffer.getContext('2d')!;\r\n    this._overlayGC = this._overlay.getContext('2d')!;\r\n\r\n    // Set up the on-screen canvas.\r\n    this._canvas.style.position = 'absolute';\r\n    this._canvas.style.top = '0px';\r\n    this._canvas.style.left = '0px';\r\n    this._canvas.style.width = '0px';\r\n    this._canvas.style.height = '0px';\r\n\r\n    // Set up the on-screen overlay.\r\n    this._overlay.style.position = 'absolute';\r\n    this._overlay.style.top = '0px';\r\n    this._overlay.style.left = '0px';\r\n    this._overlay.style.width = '0px';\r\n    this._overlay.style.height = '0px';\r\n\r\n    // Create the internal widgets for the data grid.\r\n    this._viewport = new Widget();\r\n    this._viewport.node.tabIndex = -1;\r\n    this._viewport.node.style.outline = 'none';\r\n    this._vScrollBar = new ScrollBar({ orientation: 'vertical' });\r\n    this._hScrollBar = new ScrollBar({ orientation: 'horizontal' });\r\n    this._scrollCorner = new Widget();\r\n\r\n    this._editorController = new CellEditorController();\r\n\r\n    // Add the extra class names to the child widgets.\r\n    this._viewport.addClass('lm-DataGrid-viewport');\r\n    this._vScrollBar.addClass('lm-DataGrid-scrollBar');\r\n    this._hScrollBar.addClass('lm-DataGrid-scrollBar');\r\n    this._scrollCorner.addClass('lm-DataGrid-scrollCorner');\r\n    /* <DEPRECATED> */\r\n    this._viewport.addClass('p-DataGrid-viewport');\r\n    this._vScrollBar.addClass('p-DataGrid-scrollBar');\r\n    this._hScrollBar.addClass('p-DataGrid-scrollBar');\r\n    this._scrollCorner.addClass('p-DataGrid-scrollCorner');\r\n    /* </DEPRECATED> */\r\n\r\n    // Add the on-screen canvas to the viewport node.\r\n    this._viewport.node.appendChild(this._canvas);\r\n\r\n    // Add the on-screen overlay to the viewport node.\r\n    this._viewport.node.appendChild(this._overlay);\r\n\r\n    // Install the message hooks.\r\n    MessageLoop.installMessageHook(this._viewport, this);\r\n    MessageLoop.installMessageHook(this._hScrollBar, this);\r\n    MessageLoop.installMessageHook(this._vScrollBar, this);\r\n\r\n    // Hide the scroll bars and corner from the outset.\r\n    this._vScrollBar.hide();\r\n    this._hScrollBar.hide();\r\n    this._scrollCorner.hide();\r\n\r\n    // Connect to the scroll bar signals.\r\n    this._vScrollBar.thumbMoved.connect(this._onThumbMoved, this);\r\n    this._hScrollBar.thumbMoved.connect(this._onThumbMoved, this);\r\n    this._vScrollBar.pageRequested.connect(this._onPageRequested, this);\r\n    this._hScrollBar.pageRequested.connect(this._onPageRequested, this);\r\n    this._vScrollBar.stepRequested.connect(this._onStepRequested, this);\r\n    this._hScrollBar.stepRequested.connect(this._onStepRequested, this);\r\n\r\n    // Set the layout cell config for the child widgets.\r\n    GridLayout.setCellConfig(this._viewport, { row: 0, column: 0 });\r\n    GridLayout.setCellConfig(this._vScrollBar, { row: 0, column: 1 });\r\n    GridLayout.setCellConfig(this._hScrollBar, { row: 1, column: 0 });\r\n    GridLayout.setCellConfig(this._scrollCorner, { row: 1, column: 1 });\r\n\r\n    // Create the layout for the data grid.\r\n    let layout = new GridLayout({\r\n      rowCount: 2,\r\n      columnCount: 2,\r\n      rowSpacing: 0,\r\n      columnSpacing: 0,\r\n      fitPolicy: 'set-no-constraint'\r\n    });\r\n\r\n    // Set the stretch factors for the grid.\r\n    layout.setRowStretch(0, 1);\r\n    layout.setRowStretch(1, 0);\r\n    layout.setColumnStretch(0, 1);\r\n    layout.setColumnStretch(1, 0);\r\n\r\n    // Add the child widgets to the layout.\r\n    layout.addWidget(this._viewport);\r\n    layout.addWidget(this._vScrollBar);\r\n    layout.addWidget(this._hScrollBar);\r\n    layout.addWidget(this._scrollCorner);\r\n\r\n    // Install the layout on the data grid.\r\n    this.layout = layout;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the widgets.\r\n   */\r\n  dispose(): void {\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n\r\n    // Dispose of the handlers.\r\n    if (this._keyHandler) {\r\n      this._keyHandler.dispose();\r\n    }\r\n    if (this._mouseHandler) {\r\n      this._mouseHandler.dispose();\r\n    }\r\n    this._keyHandler = null;\r\n    this._mouseHandler = null;\r\n\r\n    // Clear the models.\r\n    this._dataModel = null;\r\n    this._selectionModel = null;\r\n\r\n    // Clear the section lists.\r\n    this._rowSections.clear();\r\n    this._columnSections.clear();\r\n    this._rowHeaderSections.clear();\r\n    this._columnHeaderSections.clear();\r\n\r\n    // Dispose of the base class.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Get the data model for the data grid.\r\n   */\r\n  get dataModel(): DataModel | null {\r\n    return this._dataModel;\r\n  }\r\n\r\n  /**\r\n   * Set the data model for the data grid.\r\n   *\r\n   * #### Notes\r\n   * This will automatically remove the current selection model.\r\n   */\r\n  set dataModel(value: DataModel | null) {\r\n    // Do nothing if the model does not change.\r\n    if (this._dataModel === value) {\r\n      return;\r\n    }\r\n\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n\r\n    // Clear the selection model.\r\n    this.selectionModel = null;\r\n\r\n    // Disconnect the change handler from the old model.\r\n    if (this._dataModel) {\r\n      this._dataModel.changed.disconnect(this._onDataModelChanged, this);\r\n    }\r\n\r\n    // Connect the change handler for the new model.\r\n    if (value) {\r\n      value.changed.connect(this._onDataModelChanged, this);\r\n    }\r\n\r\n    // Update the internal model reference.\r\n    this._dataModel = value;\r\n\r\n    // Clear the section lists.\r\n    this._rowSections.clear();\r\n    this._columnSections.clear();\r\n    this._rowHeaderSections.clear();\r\n    this._columnHeaderSections.clear();\r\n\r\n    // Populate the section lists.\r\n    if (value) {\r\n      this._rowSections.insert(0, value.rowCount('body'));\r\n      this._columnSections.insert(0, value.columnCount('body'));\r\n      this._rowHeaderSections.insert(0, value.columnCount('row-header'));\r\n      this._columnHeaderSections.insert(0, value.rowCount('column-header'));\r\n    }\r\n\r\n    // Reset the scroll position.\r\n    this._scrollX = 0;\r\n    this._scrollY = 0;\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Get the selection model for the data grid.\r\n   */\r\n  get selectionModel(): SelectionModel | null {\r\n    return this._selectionModel;\r\n  }\r\n\r\n  /**\r\n   * Set the selection model for the data grid.\r\n   */\r\n  set selectionModel(value: SelectionModel | null) {\r\n    // Do nothing if the selection model does not change.\r\n    if (this._selectionModel === value) {\r\n      return;\r\n    }\r\n\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n\r\n    // Ensure the data models are a match.\r\n    if (value && value.dataModel !== this._dataModel) {\r\n      throw new Error('SelectionModel.dataModel !== DataGrid.dataModel');\r\n    }\r\n\r\n    // Disconnect the change handler from the old model.\r\n    if (this._selectionModel) {\r\n      this._selectionModel.changed.disconnect(this._onSelectionsChanged, this);\r\n    }\r\n\r\n    // Connect the change handler for the new model.\r\n    if (value) {\r\n      value.changed.connect(this._onSelectionsChanged, this);\r\n    }\r\n\r\n    // Update the internal selection model reference.\r\n    this._selectionModel = value;\r\n\r\n    // Schedule a repaint of the overlay.\r\n    this.repaintOverlay();\r\n  }\r\n\r\n  /**\r\n   * Get the key handler for the data grid.\r\n   */\r\n  get keyHandler(): DataGrid.IKeyHandler | null {\r\n    return this._keyHandler;\r\n  }\r\n\r\n  /**\r\n   * Set the key handler for the data grid.\r\n   */\r\n  set keyHandler(value: DataGrid.IKeyHandler | null) {\r\n    this._keyHandler = value;\r\n  }\r\n\r\n  /**\r\n   * Get the mouse handler for the data grid.\r\n   */\r\n  get mouseHandler(): DataGrid.IMouseHandler | null {\r\n    return this._mouseHandler;\r\n  }\r\n\r\n  /**\r\n   * Set the mouse handler for the data grid.\r\n   */\r\n  set mouseHandler(value: DataGrid.IMouseHandler | null) {\r\n    // Bail early if the mouse handler does not change.\r\n    if (this._mouseHandler === value) {\r\n      return;\r\n    }\r\n\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n\r\n    // Update the internal mouse handler.\r\n    this._mouseHandler = value;\r\n  }\r\n\r\n  /**\r\n   * Get the style for the data grid.\r\n   */\r\n  get style(): DataGrid.Style {\r\n    return this._style;\r\n  }\r\n\r\n  /**\r\n   * Set the style for the data grid.\r\n   */\r\n  set style(value: DataGrid.Style) {\r\n    // Bail if the style does not change.\r\n    if (this._style === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal style.\r\n    this._style = { ...value };\r\n\r\n    // Schedule a repaint of the content.\r\n    this.repaintContent();\r\n\r\n    // Schedule a repaint of the overlay.\r\n    this.repaintOverlay();\r\n  }\r\n\r\n  /**\r\n   * Get the cell renderer map for the data grid.\r\n   */\r\n  get cellRenderers(): RendererMap {\r\n    return this._cellRenderers;\r\n  }\r\n\r\n  /**\r\n   * Set the cell renderer map for the data grid.\r\n   */\r\n  set cellRenderers(value: RendererMap) {\r\n    // Bail if the renderer map does not change.\r\n    if (this._cellRenderers === value) {\r\n      return;\r\n    }\r\n\r\n    // Disconnect the old map.\r\n    this._cellRenderers.changed.disconnect(this._onRenderersChanged, this);\r\n\r\n    // Connect the new map.\r\n    value.changed.connect(this._onRenderersChanged, this);\r\n\r\n    // Update the internal renderer map.\r\n    this._cellRenderers = value;\r\n\r\n    // Schedule a repaint of the grid content.\r\n    this.repaintContent();\r\n  }\r\n\r\n  /**\r\n   * Get the header visibility for the data grid.\r\n   */\r\n  get headerVisibility(): DataGrid.HeaderVisibility {\r\n    return this._headerVisibility;\r\n  }\r\n\r\n  /**\r\n   * Set the header visibility for the data grid.\r\n   */\r\n  set headerVisibility(value: DataGrid.HeaderVisibility) {\r\n    // Bail if the visibility does not change.\r\n    if (this._headerVisibility === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal visibility.\r\n    this._headerVisibility = value;\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Get the default sizes for the various sections of the data grid.\r\n   */\r\n  get defaultSizes(): DataGrid.DefaultSizes {\r\n    let rowHeight = this._rowSections.defaultSize;\r\n    let columnWidth = this._columnSections.defaultSize;\r\n    let rowHeaderWidth = this._rowHeaderSections.defaultSize;\r\n    let columnHeaderHeight = this._columnHeaderSections.defaultSize;\r\n    return { rowHeight, columnWidth, rowHeaderWidth, columnHeaderHeight };\r\n  }\r\n\r\n  /**\r\n   * Set the default sizes for the various sections of the data grid.\r\n   */\r\n  set defaultSizes(value: DataGrid.DefaultSizes) {\r\n    // Update the section default sizes.\r\n    this._rowSections.defaultSize = value.rowHeight;\r\n    this._columnSections.defaultSize = value.columnWidth;\r\n    this._rowHeaderSections.defaultSize = value.rowHeaderWidth;\r\n    this._columnHeaderSections.defaultSize = value.columnHeaderHeight;\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Get the minimum sizes for the various sections of the data grid.\r\n   */\r\n  get minimumSizes(): DataGrid.DefaultSizes {\r\n    let rowHeight = this._rowSections.minimumSize;\r\n    let columnWidth = this._columnSections.minimumSize;\r\n    let rowHeaderWidth = this._rowHeaderSections.minimumSize;\r\n    let columnHeaderHeight = this._columnHeaderSections.minimumSize;\r\n    return { rowHeight, columnWidth, rowHeaderWidth, columnHeaderHeight };\r\n  }\r\n\r\n  /**\r\n   * Set the minimum sizes for the various sections of the data grid.\r\n   */\r\n  set minimumSizes(value: DataGrid.DefaultSizes) {\r\n    // Update the section default sizes.\r\n    this._rowSections.minimumSize = value.rowHeight;\r\n    this._columnSections.minimumSize = value.columnWidth;\r\n    this._rowHeaderSections.minimumSize = value.rowHeaderWidth;\r\n    this._columnHeaderSections.minimumSize = value.columnHeaderHeight;\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Get the copy configuration for the data grid.\r\n   */\r\n  get copyConfig(): DataGrid.CopyConfig {\r\n    return this._copyConfig;\r\n  }\r\n\r\n  /**\r\n   * Set the copy configuration for the data grid.\r\n   */\r\n  set copyConfig(value: DataGrid.CopyConfig) {\r\n    this._copyConfig = value;\r\n  }\r\n\r\n  /**\r\n   * Get whether the last row is stretched.\r\n   */\r\n  get stretchLastRow(): boolean {\r\n    return this._stretchLastRow;\r\n  }\r\n\r\n  /**\r\n   * Set whether the last row is stretched.\r\n   */\r\n  set stretchLastRow(value: boolean) {\r\n    // Bail early if the value does not change.\r\n    if (value === this._stretchLastRow) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal value.\r\n    this._stretchLastRow = value;\r\n\r\n    // Sync the viewport\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Get whether the last column is stretched.\r\n   */\r\n  get stretchLastColumn(): boolean {\r\n    return this._stretchLastColumn;\r\n  }\r\n\r\n  /**\r\n   * Set whether the last column is stretched.\r\n   */\r\n  set stretchLastColumn(value: boolean) {\r\n    // Bail early if the value does not change.\r\n    if (value === this._stretchLastColumn) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal value.\r\n    this._stretchLastColumn = value;\r\n\r\n    // Sync the viewport\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * The virtual width of the row headers.\r\n   */\r\n  get headerWidth(): number {\r\n    if (this._headerVisibility === 'none') {\r\n      return 0;\r\n    }\r\n    if (this._headerVisibility === 'column') {\r\n      return 0;\r\n    }\r\n    return this._rowHeaderSections.length;\r\n  }\r\n\r\n  /**\r\n   * The virtual height of the column headers.\r\n   */\r\n  get headerHeight(): number {\r\n    if (this._headerVisibility === 'none') {\r\n      return 0;\r\n    }\r\n    if (this._headerVisibility === 'row') {\r\n      return 0;\r\n    }\r\n    return this._columnHeaderSections.length;\r\n  }\r\n\r\n  /**\r\n   * The virtual width of the grid body.\r\n   *\r\n   * #### Notes\r\n   * This does *not* account for a stretched last column.\r\n   */\r\n  get bodyWidth(): number {\r\n    return this._columnSections.length;\r\n  }\r\n\r\n  /**\r\n   * The virtual height of the grid body.\r\n   *\r\n   * #### Notes\r\n   * This does *not* account for a stretched last row.\r\n   */\r\n  get bodyHeight(): number {\r\n    return this._rowSections.length;\r\n  }\r\n\r\n  /**\r\n   * The virtual width of the entire grid.\r\n   *\r\n   * #### Notes\r\n   * This does *not* account for a stretched last column.\r\n   */\r\n  get totalWidth(): number {\r\n    return this.headerWidth + this.bodyWidth;\r\n  }\r\n\r\n  /**\r\n   * The virtual height of the entire grid.\r\n   *\r\n   * #### Notes\r\n   * This does *not* account for a stretched last row.\r\n   */\r\n  get totalHeight(): number {\r\n    return this.headerHeight + this.bodyHeight;\r\n  }\r\n\r\n  /**\r\n   * The actual width of the viewport.\r\n   */\r\n  get viewportWidth(): number {\r\n    return this._viewportWidth;\r\n  }\r\n\r\n  /**\r\n   * The actual height of the viewport.\r\n   */\r\n  get viewportHeight(): number {\r\n    return this._viewportHeight;\r\n  }\r\n\r\n  /**\r\n   * The width of the visible portion of the grid body.\r\n   */\r\n  get pageWidth(): number {\r\n    return Math.max(0, this.viewportWidth - this.headerWidth);\r\n  }\r\n\r\n  /**\r\n   * The height of the visible portion of the grid body.\r\n   */\r\n  get pageHeight(): number {\r\n    return Math.max(0, this.viewportHeight - this.headerHeight);\r\n  }\r\n\r\n  /**\r\n   * The current scroll X position of the viewport.\r\n   */\r\n  get scrollX(): number {\r\n    return this._hScrollBar.value;\r\n  }\r\n\r\n  /**\r\n   * The current scroll Y position of the viewport.\r\n   */\r\n  get scrollY(): number {\r\n    return this._vScrollBar.value;\r\n  }\r\n\r\n  /**\r\n   * The maximum scroll X position for the grid.\r\n   */\r\n  get maxScrollX(): number {\r\n    return Math.max(0, this.bodyWidth - this.pageWidth - 1);\r\n  }\r\n\r\n  /**\r\n   * The maximum scroll Y position for the grid.\r\n   */\r\n  get maxScrollY(): number {\r\n    return Math.max(0, this.bodyHeight - this.pageHeight - 1);\r\n  }\r\n\r\n  /**\r\n   * The viewport widget for the data grid.\r\n   */\r\n  get viewport(): Widget {\r\n    return this._viewport;\r\n  }\r\n\r\n  /**\r\n   * The cell editor controller object for the data grid.\r\n   */\r\n  get editorController(): ICellEditorController | null {\r\n    return this._editorController;\r\n  }\r\n\r\n  set editorController(controller: ICellEditorController | null) {\r\n    this._editorController = controller;\r\n  }\r\n\r\n  /**\r\n   * Whether the cell editing is enabled for the data grid.\r\n   */\r\n  get editingEnabled(): boolean {\r\n    return this._editingEnabled;\r\n  }\r\n\r\n  set editingEnabled(enabled: boolean) {\r\n    this._editingEnabled = enabled;\r\n  }\r\n\r\n  /**\r\n   * Whether the grid cells are editable.\r\n   *\r\n   * `editingEnabled` flag must be on and grid must have required\r\n   * selection model, editor controller and data model properties.\r\n   */\r\n  get editable(): boolean {\r\n    return this._editingEnabled &&\r\n      this._selectionModel !== null &&\r\n      this._editorController !== null &&\r\n      this.dataModel instanceof MutableDataModel;\r\n  }\r\n\r\n  /**\r\n   * The rendering context for painting the data grid.\r\n   */\r\n  protected get canvasGC(): CanvasRenderingContext2D {\r\n    return this._canvasGC;\r\n  }\r\n\r\n  /**\r\n   * The row sections of the data grid.\r\n   */\r\n  protected get rowSections(): SectionList {\r\n    return this._rowSections;\r\n  }\r\n\r\n  /**\r\n   * The column sections of the data grid.\r\n   */\r\n  protected get columnSections(): SectionList {\r\n    return this._columnSections;\r\n  }\r\n\r\n  /**\r\n   * The row header sections of the data grid.\r\n   */\r\n  protected get rowHeaderSections(): SectionList {\r\n    return this._rowHeaderSections;\r\n  }\r\n\r\n  /**\r\n   * The column header sections of the data grid.\r\n   */\r\n  protected get columnHeaderSections(): SectionList {\r\n    return this._columnHeaderSections;\r\n  }\r\n\r\n  /**\r\n   * Scroll the grid to the specified row.\r\n   *\r\n   * @param row - The row index of the cell.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the row is already visible.\r\n   */\r\n  scrollToRow(row: number): void {\r\n    // Fetch the row count.\r\n    let nr = this._rowSections.count;\r\n\r\n    // Bail early if there is no content.\r\n    if (nr === 0) {\r\n      return;\r\n    }\r\n\r\n    // Floor the row index.\r\n    row = Math.floor(row);\r\n\r\n    // Clamp the row index.\r\n    row = Math.max(0, Math.min(row, nr - 1));\r\n\r\n    // Get the virtual bounds of the row.\r\n    let y1 = this._rowSections.offsetOf(row);\r\n    let y2 = this._rowSections.extentOf(row);\r\n\r\n    // Get the virtual bounds of the viewport.\r\n    let vy1 = this._scrollY;\r\n    let vy2 = this._scrollY + this.pageHeight - 1;\r\n\r\n    // Set up the delta variables.\r\n    let dy = 0;\r\n\r\n    // Compute the delta Y scroll.\r\n    if (y1 < vy1) {\r\n      dy = y1 - vy1 - 10;\r\n    } else if (y2 > vy2) {\r\n      dy = y2 - vy2 + 10;\r\n    }\r\n\r\n    // Bail early if no scroll is needed.\r\n    if (dy === 0) {\r\n      return;\r\n    }\r\n\r\n    // Scroll by the computed delta.\r\n    this.scrollBy(0, dy);\r\n  }\r\n\r\n  /**\r\n   * Scroll the grid to the specified column.\r\n   *\r\n   * @param column - The column index of the cell.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the column is already visible.\r\n   */\r\n  scrollToColumn(column: number): void {\r\n    // Fetch the column count.\r\n    let nc = this._columnSections.count;\r\n\r\n    // Bail early if there is no content.\r\n    if (nc === 0) {\r\n      return;\r\n    }\r\n\r\n    // Floor the column index.\r\n    column = Math.floor(column);\r\n\r\n    // Clamp the column index.\r\n    column = Math.max(0, Math.min(column, nc - 1));\r\n\r\n    // Get the virtual bounds of the column.\r\n    let x1 = this._columnSections.offsetOf(column);\r\n    let x2 = this._columnSections.extentOf(column);\r\n\r\n    // Get the virtual bounds of the viewport.\r\n    let vx1 = this._scrollX;\r\n    let vx2 = this._scrollX + this.pageWidth - 1;\r\n\r\n    // Set up the delta variables.\r\n    let dx = 0;\r\n\r\n    // Compute the delta X scroll.\r\n    if (x1 < vx1) {\r\n      dx = x1 - vx1 - 10;\r\n    } else if (x2 > vx2) {\r\n      dx = x2 - vx2 + 10;\r\n    }\r\n\r\n    // Bail early if no scroll is needed.\r\n    if (dx === 0) {\r\n      return;\r\n    }\r\n\r\n    // Scroll by the computed delta.\r\n    this.scrollBy(dx, 0);\r\n  }\r\n\r\n  /**\r\n   * Scroll the grid to the specified cell.\r\n   *\r\n   * @param row - The row index of the cell.\r\n   *\r\n   * @param column - The column index of the cell.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the cell is already visible.\r\n   */\r\n  scrollToCell(row: number, column: number): void {\r\n    // Fetch the row and column count.\r\n    let nr = this._rowSections.count;\r\n    let nc = this._columnSections.count;\r\n\r\n    // Bail early if there is no content.\r\n    if (nr === 0 || nc === 0) {\r\n      return;\r\n    }\r\n\r\n    // Floor the cell index.\r\n    row = Math.floor(row);\r\n    column = Math.floor(column);\r\n\r\n    // Clamp the cell index.\r\n    row = Math.max(0, Math.min(row, nr - 1));\r\n    column = Math.max(0, Math.min(column, nc - 1));\r\n\r\n    // Get the virtual bounds of the cell.\r\n    let x1 = this._columnSections.offsetOf(column);\r\n    let x2 = this._columnSections.extentOf(column);\r\n    let y1 = this._rowSections.offsetOf(row);\r\n    let y2 = this._rowSections.extentOf(row);\r\n\r\n    // Get the virtual bounds of the viewport.\r\n    let vx1 = this._scrollX;\r\n    let vx2 = this._scrollX + this.pageWidth - 1;\r\n    let vy1 = this._scrollY;\r\n    let vy2 = this._scrollY + this.pageHeight - 1;\r\n\r\n    // Set up the delta variables.\r\n    let dx = 0;\r\n    let dy = 0;\r\n\r\n    // Compute the delta X scroll.\r\n    if (x1 < vx1) {\r\n      dx = x1 - vx1 - 10;\r\n    } else if (x2 > vx2) {\r\n      dx = x2 - vx2 + 10;\r\n    }\r\n\r\n    // Compute the delta Y scroll.\r\n    if (y1 < vy1) {\r\n      dy = y1 - vy1 - 10;\r\n    } else if (y2 > vy2) {\r\n      dy = y2 - vy2 + 10;\r\n    }\r\n\r\n    // Bail early if no scroll is needed.\r\n    if (dx === 0 && dy === 0) {\r\n      return;\r\n    }\r\n\r\n    // Scroll by the computed delta.\r\n    this.scrollBy(dx, dy);\r\n  }\r\n\r\n  /**\r\n   * Move cursor down/up/left/right while making sure it remains\r\n   * within the bounds of selected rectangles\r\n   *\r\n   * @param direction - The direction of the movement.\r\n   */\r\n  moveCursor(direction: SelectionModel.CursorMoveDirection): void {\r\n    // Bail early if there is no selection\r\n    if (!this.dataModel ||\r\n      !this._selectionModel ||\r\n      this._selectionModel.isEmpty) {\r\n      return;\r\n    }\r\n\r\n    const iter = this._selectionModel.selections();\r\n    const onlyOne = iter.next() && !iter.next();\r\n\r\n    // if there is a single selection that is a single cell selection\r\n    // then move the selection and cursor within grid bounds\r\n    if (onlyOne) {\r\n      const currentSel = this._selectionModel.currentSelection()!;\r\n      if (currentSel.r1 === currentSel.r2 &&\r\n        currentSel.c1 === currentSel.c2\r\n      ) {\r\n        const dr = direction === 'down' ? 1 : direction === 'up' ? -1 : 0;\r\n        const dc = direction === 'right' ? 1 : direction === 'left' ? -1 : 0;\r\n        let newRow = currentSel.r1 + dr;\r\n        let newColumn = currentSel.c1 + dc;\r\n        const rowCount = this.dataModel.rowCount('body');\r\n        const columnCount = this.dataModel.columnCount('body');\r\n        if (newRow >= rowCount) {\r\n          newRow = 0;\r\n          newColumn += 1;\r\n        } else if (newRow === -1) {\r\n          newRow = rowCount - 1;\r\n          newColumn -= 1;\r\n        }\r\n        if (newColumn >= columnCount) {\r\n          newColumn = 0;\r\n          newRow += 1;\r\n          if (newRow >= rowCount) {\r\n            newRow = 0;\r\n          }\r\n        } else if (newColumn === -1) {\r\n          newColumn = columnCount - 1;\r\n          newRow -= 1;\r\n          if (newRow === -1) {\r\n            newRow = rowCount - 1;\r\n          }\r\n        }\r\n\r\n        this._selectionModel.select({\r\n          r1: newRow, c1: newColumn,\r\n          r2: newRow, c2: newColumn,\r\n          cursorRow: newRow, cursorColumn: newColumn,\r\n          clear: 'all'\r\n        });\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    // if there are multiple selections, move cursor\r\n    // within selection rectangles\r\n    this._selectionModel.moveCursorWithinSelections(direction);\r\n  }\r\n\r\n  /**\r\n   * Scroll the grid to the current cursor position.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the cursor is already visible or\r\n   * if there is no selection model installed on the grid.\r\n   */\r\n  scrollToCursor(): void {\r\n    // Bail early if there is no selection model.\r\n    if (!this._selectionModel) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the cursor row and column.\r\n    let row = this._selectionModel.cursorRow;\r\n    let column = this._selectionModel.cursorColumn;\r\n\r\n    // Scroll to the cursor cell.\r\n    this.scrollToCell(row, column);\r\n  }\r\n\r\n  /**\r\n   * Scroll the viewport by the specified amount.\r\n   *\r\n   * @param dx - The X scroll amount.\r\n   *\r\n   * @param dy - The Y scroll amount.\r\n   */\r\n  scrollBy(dx: number, dy: number): void {\r\n    this.scrollTo(this.scrollX + dx, this.scrollY + dy);\r\n  }\r\n\r\n  /**\r\n   * Scroll the viewport by one page.\r\n   *\r\n   * @param dir - The desired direction of the scroll.\r\n   */\r\n  scrollByPage(dir: 'up' | 'down' | 'left' | 'right'): void {\r\n    let dx = 0;\r\n    let dy = 0;\r\n    switch (dir) {\r\n    case 'up':\r\n      dy = -this.pageHeight;\r\n      break;\r\n    case 'down':\r\n      dy = this.pageHeight;\r\n      break;\r\n    case 'left':\r\n      dx = -this.pageWidth;\r\n      break;\r\n    case 'right':\r\n      dx = this.pageWidth;\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n    this.scrollTo(this.scrollX + dx, this.scrollY + dy);\r\n  }\r\n\r\n  /**\r\n   * Scroll the viewport by one cell-aligned step.\r\n   *\r\n   * @param dir - The desired direction of the scroll.\r\n   */\r\n  scrollByStep(dir: 'up' | 'down' | 'left' | 'right'): void {\r\n    let r: number;\r\n    let c: number;\r\n    let x = this.scrollX;\r\n    let y = this.scrollY;\r\n    let rows = this._rowSections;\r\n    let columns = this._columnSections;\r\n    switch (dir) {\r\n    case 'up':\r\n      r = rows.indexOf(y - 1);\r\n      y = r < 0 ? y : rows.offsetOf(r);\r\n      break;\r\n    case 'down':\r\n      r = rows.indexOf(y);\r\n      y = r < 0 ? y : rows.offsetOf(r) + rows.sizeOf(r);\r\n      break;\r\n    case 'left':\r\n      c = columns.indexOf(x - 1);\r\n      x = c < 0 ? x : columns.offsetOf(c);\r\n      break;\r\n    case 'right':\r\n      c = columns.indexOf(x);\r\n      x = c < 0 ? x : columns.offsetOf(c) + columns.sizeOf(c);\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n    this.scrollTo(x, y);\r\n  }\r\n\r\n  /**\r\n   * Scroll to the specified offset position.\r\n   *\r\n   * @param x - The desired X position.\r\n   *\r\n   * @param y - The desired Y position.\r\n   */\r\n  scrollTo(x: number, y: number): void {\r\n    // Floor and clamp the position to the allowable range.\r\n    x = Math.max(0, Math.min(Math.floor(x), this.maxScrollX));\r\n    y = Math.max(0, Math.min(Math.floor(y), this.maxScrollY));\r\n\r\n    // Update the scroll bar values with the desired position.\r\n    this._hScrollBar.value = x;\r\n    this._vScrollBar.value = y;\r\n\r\n    // Post a scroll request message to the viewport.\r\n    MessageLoop.postMessage(this._viewport, Private.ScrollRequest);\r\n  }\r\n\r\n  /**\r\n   * Get the row count for a particular region in the data grid.\r\n   *\r\n   * @param region - The row region of interest.\r\n   *\r\n   * @returns The row count for the specified region.\r\n   */\r\n  rowCount(region: DataModel.RowRegion): number {\r\n    let count: number;\r\n    if (region === 'body') {\r\n      count = this._rowSections.count;\r\n    } else {\r\n      count = this._columnHeaderSections.count;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * Get the column count for a particular region in the data grid.\r\n   *\r\n   * @param region - The column region of interest.\r\n   *\r\n   * @returns The column count for the specified region.\r\n   */\r\n  columnCount(region: DataModel.ColumnRegion): number {\r\n    let count: number;\r\n    if (region === 'body') {\r\n      count = this._columnSections.count;\r\n    } else {\r\n      count = this._rowHeaderSections.count;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * Get the row at a virtual offset in the data grid.\r\n   *\r\n   * @param region - The region which holds the row of interest.\r\n   *\r\n   * @param offset - The virtual offset of the row of interest.\r\n   *\r\n   * @returns The index of the row, or `-1` if the offset is out of range.\r\n   *\r\n   * #### Notes\r\n   * This method accounts for a stretched last row.\r\n   */\r\n  rowAt(region: DataModel.RowRegion, offset: number): number {\r\n    // Bail early if the offset is negative.\r\n    if (offset < 0) {\r\n      return -1;\r\n    }\r\n\r\n    // Return early for the column header region.\r\n    if (region === 'column-header') {\r\n      return this._columnHeaderSections.indexOf(offset);\r\n    }\r\n\r\n    // Fetch the index.\r\n    let index = this._rowSections.indexOf(offset);\r\n\r\n    // Return early if the section is found.\r\n    if (index >= 0) {\r\n      return index;\r\n    }\r\n\r\n    // Bail early if the last row is not stretched.\r\n    if (!this._stretchLastRow) {\r\n      return -1;\r\n    }\r\n\r\n    // Fetch the geometry.\r\n    let bh = this.bodyHeight;\r\n    let ph = this.pageHeight;\r\n\r\n    // Bail early if no row stretching is required.\r\n    if (ph <= bh) {\r\n      return -1;\r\n    }\r\n\r\n    // Bail early if the offset is out of bounds.\r\n    if (offset >= ph) {\r\n      return -1;\r\n    }\r\n\r\n    // Otherwise, return the last row.\r\n    return this._rowSections.count - 1;\r\n  }\r\n\r\n  /**\r\n   * Get the column at a virtual offset in the data grid.\r\n   *\r\n   * @param region - The region which holds the column of interest.\r\n   *\r\n   * @param offset - The virtual offset of the column of interest.\r\n   *\r\n   * @returns The index of the column, or `-1` if the offset is out of range.\r\n   *\r\n   * #### Notes\r\n   * This method accounts for a stretched last column.\r\n   */\r\n  columnAt(region: DataModel.ColumnRegion, offset: number): number {\r\n    if (offset < 0) {\r\n      return -1;\r\n    }\r\n\r\n    // Return early for the row header region.\r\n    if (region === 'row-header') {\r\n      return this._rowHeaderSections.indexOf(offset);\r\n    }\r\n\r\n    // Fetch the index.\r\n    let index = this._columnSections.indexOf(offset);\r\n\r\n    // Return early if the section is found.\r\n    if (index >= 0) {\r\n      return index;\r\n    }\r\n\r\n    // Bail early if the last column is not stretched.\r\n    if (!this._stretchLastColumn) {\r\n      return -1;\r\n    }\r\n\r\n    // Fetch the geometry.\r\n    let bw = this.bodyWidth;\r\n    let pw = this.pageWidth;\r\n\r\n    // Bail early if no column stretching is required.\r\n    if (pw <= bw) {\r\n      return -1;\r\n    }\r\n\r\n    // Bail early if the offset is out of bounds.\r\n    if (offset >= pw) {\r\n      return -1;\r\n    }\r\n\r\n    // Otherwise, return the last column.\r\n    return this._columnSections.count - 1;\r\n  }\r\n\r\n  /**\r\n   * Get the offset of a row in the data grid.\r\n   *\r\n   * @param region - The region which holds the row of interest.\r\n   *\r\n   * @param index - The index of the row of interest.\r\n   *\r\n   * @returns The offset of the row, or `-1` if the index is out of range.\r\n   *\r\n   * #### Notes\r\n   * A stretched last row has no effect on the return value.\r\n   */\r\n  rowOffset(region: DataModel.RowRegion, index: number): number {\r\n    let offset: number;\r\n    if (region === 'body') {\r\n      offset = this._rowSections.offsetOf(index);\r\n    } else {\r\n      offset = this._columnHeaderSections.offsetOf(index);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Get the offset of a column in the data grid.\r\n   *\r\n   * @param region - The region which holds the column of interest.\r\n   *\r\n   * @param index - The index of the column of interest.\r\n   *\r\n   * @returns The offset of the column, or `-1` if the index is out of range.\r\n   *\r\n   * #### Notes\r\n   * A stretched last column has no effect on the return value.\r\n   */\r\n  columnOffset(region: DataModel.ColumnRegion, index: number): number {\r\n    let offset: number;\r\n    if (region === 'body') {\r\n      offset = this._columnSections.offsetOf(index);\r\n    } else {\r\n      offset = this._rowHeaderSections.offsetOf(index);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Get the size of a row in the data grid.\r\n   *\r\n   * @param region - The region which holds the row of interest.\r\n   *\r\n   * @param index - The index of the row of interest.\r\n   *\r\n   * @returns The size of the row, or `-1` if the index is out of range.\r\n   *\r\n   * #### Notes\r\n   * This method accounts for a stretched last row.\r\n   */\r\n  rowSize(region: DataModel.RowRegion, index: number): number {\r\n    // Return early for the column header region.\r\n    if (region === 'column-header') {\r\n      return this._columnHeaderSections.sizeOf(index);\r\n    }\r\n\r\n    // Fetch the row size.\r\n    let size = this._rowSections.sizeOf(index);\r\n\r\n    // Bail early if the index is out of bounds.\r\n    if (size < 0) {\r\n      return size;\r\n    }\r\n\r\n    // Return early if the last row is not stretched.\r\n    if (!this._stretchLastRow) {\r\n      return size;\r\n    }\r\n\r\n    // Return early if its not the last row.\r\n    if (index < this._rowSections.count - 1) {\r\n      return size;\r\n    }\r\n\r\n    // Fetch the geometry.\r\n    let bh = this.bodyHeight;\r\n    let ph = this.pageHeight;\r\n\r\n    // Return early if no stretching is needed.\r\n    if (ph <= bh) {\r\n      return size;\r\n    }\r\n\r\n    // Return the adjusted size.\r\n    return size + (ph - bh);\r\n  }\r\n\r\n  /**\r\n   * Get the size of a column in the data grid.\r\n   *\r\n   * @param region - The region which holds the column of interest.\r\n   *\r\n   * @param index - The index of the column of interest.\r\n   *\r\n   * @returns The size of the column, or `-1` if the index is out of range.\r\n   *\r\n   * #### Notes\r\n   * This method accounts for a stretched last column.\r\n   */\r\n  columnSize(region: DataModel.ColumnRegion, index: number): number {\r\n    // Return early for the row header region.\r\n    if (region === 'row-header') {\r\n      return this._rowHeaderSections.sizeOf(index);\r\n    }\r\n\r\n    // Fetch the column size.\r\n    let size = this._columnSections.sizeOf(index);\r\n\r\n    // Bail early if the index is out of bounds.\r\n    if (size < 0) {\r\n      return size;\r\n    }\r\n\r\n    // Return early if the last column is not stretched.\r\n    if (!this._stretchLastColumn) {\r\n      return size;\r\n    }\r\n\r\n    // Return early if its not the last column.\r\n    if (index < this._columnSections.count - 1) {\r\n      return size;\r\n    }\r\n\r\n    // Fetch the geometry.\r\n    let bw = this.bodyWidth;\r\n    let pw = this.pageWidth;\r\n\r\n    // Return early if no stretching is needed.\r\n    if (pw <= bw) {\r\n      return size;\r\n    }\r\n\r\n    // Return the adjusted size.\r\n    return size + (pw - bw);\r\n  }\r\n\r\n  /**\r\n   * Resize a row in the data grid.\r\n   *\r\n   * @param region - The region which holds the row of interest.\r\n   *\r\n   * @param index - The index of the row of interest.\r\n   *\r\n   * @param size - The desired size of the row.\r\n   */\r\n  resizeRow(region: DataModel.RowRegion, index: number, size: number): void {\r\n    let msg = new Private.RowResizeRequest(region, index, size);\r\n    MessageLoop.postMessage(this._viewport, msg);\r\n  }\r\n\r\n  /**\r\n   * Resize a column in the data grid.\r\n   *\r\n   * @param region - The region which holds the column of interest.\r\n   *\r\n   * @param index - The index of the column of interest.\r\n   *\r\n   * @param size - The desired size of the column.\r\n   */\r\n  resizeColumn(region: DataModel.ColumnRegion, index: number, size: number): void {\r\n    let msg = new Private.ColumnResizeRequest(region, index, size);\r\n    MessageLoop.postMessage(this._viewport, msg);\r\n  }\r\n\r\n  /**\r\n   * Reset modified rows to their default size.\r\n   *\r\n   * @param region - The row region of interest.\r\n   */\r\n  resetRows(region: DataModel.RowRegion | 'all'): void {\r\n    switch (region) {\r\n    case 'all':\r\n      this._rowSections.reset();\r\n      this._columnHeaderSections.reset();\r\n      break;\r\n    case 'body':\r\n      this._rowSections.reset();\r\n      break;\r\n    case 'column-header':\r\n      this._columnHeaderSections.reset();\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n    this.repaintContent();\r\n    this.repaintOverlay();\r\n  }\r\n\r\n  /**\r\n   * Reset modified columns to their default size.\r\n   *\r\n   * @param region - The column region of interest.\r\n   */\r\n  resetColumns(region: DataModel.ColumnRegion | 'all'): void {\r\n    switch (region) {\r\n    case 'all':\r\n      this._columnSections.reset();\r\n      this._rowHeaderSections.reset();\r\n      break;\r\n    case 'body':\r\n      this._columnSections.reset();\r\n      break;\r\n    case 'row-header':\r\n      this._rowHeaderSections.reset();\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n    this.repaintContent();\r\n    this.repaintOverlay();\r\n  }\r\n\r\n  /**\r\n   * Map a client position to local viewport coordinates.\r\n   *\r\n   * @param clientX - The client X position of the mouse.\r\n   *\r\n   * @param clientY - The client Y position of the mouse.\r\n   *\r\n   * @returns The local viewport coordinates for the position.\r\n   */\r\n  mapToLocal(clientX: number, clientY: number): { lx: number, ly: number } {\r\n    // Fetch the viewport rect.\r\n    let rect = this._viewport.node.getBoundingClientRect();\r\n\r\n    // Extract the rect coordinates.\r\n    let { left, top } = rect;\r\n\r\n    // Round the rect coordinates for sub-pixel positioning.\r\n    left = Math.floor(left);\r\n    top = Math.floor(top);\r\n\r\n    // Convert to local coordinates.\r\n    let lx = clientX - left;\r\n    let ly = clientY - top;\r\n\r\n    // Return the local coordinates.\r\n    return { lx, ly };\r\n  }\r\n\r\n  /**\r\n   * Map a client position to virtual grid coordinates.\r\n   *\r\n   * @param clientX - The client X position of the mouse.\r\n   *\r\n   * @param clientY - The client Y position of the mouse.\r\n   *\r\n   * @returns The virtual grid coordinates for the position.\r\n   */\r\n  mapToVirtual(clientX: number, clientY: number): { vx: number, vy: number } {\r\n    // Convert to local coordiates.\r\n    let { lx, ly } = this.mapToLocal(clientX, clientY);\r\n\r\n    // Convert to virtual coordinates.\r\n    let vx = lx + this.scrollX - this.headerWidth;\r\n    let vy = ly + this.scrollY - this.headerHeight;\r\n\r\n    // Return the local coordinates.\r\n    return { vx, vy };\r\n  }\r\n\r\n  /**\r\n   * Hit test the viewport for the given client position.\r\n   *\r\n   * @param clientX - The client X position of the mouse.\r\n   *\r\n   * @param clientY - The client Y position of the mouse.\r\n   *\r\n   * @returns The hit test result, or `null` if the client\r\n   *   position is out of bounds.\r\n   *\r\n   * #### Notes\r\n   * This method accounts for a stretched last row and/or column.\r\n   */\r\n  hitTest(clientX: number, clientY: number): DataGrid.HitTestResult {\r\n    // Convert the mouse position into local coordinates.\r\n    let { lx, ly } = this.mapToLocal(clientX, clientY);\r\n\r\n    // Fetch the header and body dimensions.\r\n    let hw = this.headerWidth;\r\n    let hh = this.headerHeight;\r\n    let bw = this.bodyWidth;\r\n    let bh = this.bodyHeight;\r\n    let ph = this.pageHeight;\r\n    let pw = this.pageWidth;\r\n\r\n    // Adjust the body width for a stretched last column.\r\n    if (this._stretchLastColumn && pw > bw) {\r\n      bw = pw;\r\n    }\r\n\r\n    // Adjust the body height for a stretched last row.\r\n    if (this._stretchLastRow && ph > bh) {\r\n      bh = ph;\r\n    }\r\n\r\n    // Check for a corner header hit.\r\n    if (lx >= 0 && lx < hw && ly >= 0 && ly < hh) {\r\n      // Convert to unscrolled virtual coordinates.\r\n      let vx = lx;\r\n      let vy = ly;\r\n\r\n      // Fetch the row and column index.\r\n      let row = this.rowAt('column-header', vy);\r\n      let column = this.columnAt('row-header', vx);\r\n\r\n      // Fetch the cell offset position.\r\n      let ox = this.columnOffset('row-header', column);\r\n      let oy = this.rowOffset('column-header', row);\r\n\r\n      // Fetch cell width and height.\r\n      let width = this.columnSize('row-header', column);\r\n      let height = this.rowSize('column-header', row);\r\n\r\n      // Compute the leading and trailing positions.\r\n      let x = vx - ox;\r\n      let y = vy - oy;\r\n\r\n      // Return the hit test result.\r\n      return { region: 'corner-header', row, column, x, y, width, height };\r\n    }\r\n\r\n    // Check for a column header hit.\r\n    if (ly >= 0 && ly < hh && lx >= 0 && lx < (hw + bw)) {\r\n      // Convert to unscrolled virtual coordinates.\r\n      let vx = lx + this._scrollX - hw;\r\n      let vy = ly\r\n\r\n      // Fetch the row and column index.\r\n      let row = this.rowAt('column-header', vy);\r\n      let column = this.columnAt('body', vx);\r\n\r\n      // Fetch the cell offset position.\r\n      let ox = this.columnOffset('body', column);\r\n      let oy = this.rowOffset('column-header', row);\r\n\r\n      // Fetch the cell width and height.\r\n      let width = this.columnSize('body', column);\r\n      let height = this.rowSize('column-header', row);\r\n\r\n      // Compute the leading and trailing positions.\r\n      let x = vx - ox;\r\n      let y = vy - oy;\r\n\r\n      // Return the hit test result.\r\n      return { region: 'column-header', row, column, x, y, width, height };\r\n    }\r\n\r\n    // Check for a row header hit.\r\n    if (lx >= 0 && lx < hw && ly >= 0 && ly < (hh + bh)) {\r\n      // Convert to unscrolled virtual coordinates.\r\n      let vx = lx\r\n      let vy = ly + this._scrollY - hh;\r\n\r\n      // Fetch the row and column index.\r\n      let row = this.rowAt('body', vy);\r\n      let column = this.columnAt('row-header', vx);\r\n\r\n      // Fetch the cell offset position.\r\n      let ox = this.columnOffset('row-header', column);\r\n      let oy = this.rowOffset('body', row);\r\n\r\n      // Fetch the cell width and height.\r\n      let width = this.columnSize('row-header', column);\r\n      let height = this.rowSize('body', row);\r\n\r\n      // Compute the leading and trailing positions.\r\n      let x = vx - ox;\r\n      let y = vy - oy;\r\n\r\n      // Return the hit test result.\r\n      return { region: 'row-header', row, column, x, y, width, height };\r\n    }\r\n\r\n    // Check for a body hit.\r\n    if (lx >= hw && lx < (hw + bw) && ly >= hh && ly < (hh + bh)) {\r\n      // Convert to unscrolled virtual coordinates.\r\n      let vx = lx + this._scrollX - hw\r\n      let vy = ly + this._scrollY - hh;\r\n\r\n      // Fetch the row and column index.\r\n      let row = this.rowAt('body', vy);\r\n      let column = this.columnAt('body', vx);\r\n\r\n      // Fetch the cell offset position.\r\n      let ox = this.columnOffset('body', column);\r\n      let oy = this.rowOffset('body', row);\r\n\r\n      // Fetch the cell width and height.\r\n      let width = this.columnSize('body', column);\r\n      let height = this.rowSize('body', row);\r\n\r\n      // Compute the part coordinates.\r\n      let x = vx - ox;\r\n      let y = vy - oy;\r\n\r\n      // Return the result.\r\n      return { region: 'body', row, column, x, y, width, height };\r\n    }\r\n\r\n    // Otherwise, it's a void space hit.\r\n    let row = -1;\r\n    let column = -1;\r\n    let x = -1;\r\n    let y = -1;\r\n    let width = -1;\r\n    let height = -1;\r\n\r\n    // Return the hit test result.\r\n    return { region: 'void', row, column, x, y, width, height };\r\n  }\r\n\r\n  /**\r\n   * Copy the current selection to the system clipboard.\r\n   *\r\n   * #### Notes\r\n   * The grid must have a data model and a selection model.\r\n   *\r\n   * The behavior can be configured via `DataGrid.copyConfig`.\r\n   */\r\n  copyToClipboard(): void {\r\n    // Fetch the data model.\r\n    let dataModel = this._dataModel;\r\n\r\n    // Bail early if there is no data model.\r\n    if (!dataModel) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection model.\r\n    let selectionModel = this._selectionModel;\r\n\r\n    // Bail early if there is no selection model.\r\n    if (!selectionModel) {\r\n      return;\r\n    }\r\n\r\n    // Coerce the selections to an array.\r\n    let selections = toArray(selectionModel.selections());\r\n\r\n    // Bail early if there are no selections.\r\n    if (selections.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Alert that multiple selections cannot be copied.\r\n    if (selections.length > 1) {\r\n      alert('Cannot copy multiple grid selections.');\r\n      return;\r\n    }\r\n\r\n    // Fetch the model counts.\r\n    let br = dataModel.rowCount('body');\r\n    let bc = dataModel.columnCount('body');\r\n\r\n    // Bail early if there is nothing to copy.\r\n    if (br === 0 || bc === 0) {\r\n      return;\r\n    }\r\n\r\n    // Unpack the selection.\r\n    let { r1, c1, r2, c2 } = selections[0];\r\n\r\n    // Clamp the selection to the model bounds.\r\n    r1 = Math.max(0, Math.min(r1, br - 1));\r\n    c1 = Math.max(0, Math.min(c1, bc - 1));\r\n    r2 = Math.max(0, Math.min(r2, br - 1));\r\n    c2 = Math.max(0, Math.min(c2, bc - 1));\r\n\r\n    // Ensure the limits are well-orderd.\r\n    if (r2 < r1) [r1, r2] = [r2, r1];\r\n    if (c2 < c1) [c1, c2] = [c2, c1];\r\n\r\n    // Fetch the header counts.\r\n    let rhc = dataModel.columnCount('row-header');\r\n    let chr = dataModel.rowCount('column-header');\r\n\r\n    // Unpack the copy config.\r\n    let separator = this._copyConfig.separator;\r\n    let format = this._copyConfig.format;\r\n    let headers = this._copyConfig.headers;\r\n    let warningThreshold = this._copyConfig.warningThreshold;\r\n\r\n    // Compute the number of cells to be copied.\r\n    let rowCount = r2 - r1 + 1;\r\n    let colCount = c2 - c1 + 1;\r\n    switch (headers) {\r\n    case 'none':\r\n      rhc = 0;\r\n      chr = 0;\r\n      break;\r\n    case 'row':\r\n      chr = 0;\r\n      colCount += rhc;\r\n      break;\r\n    case 'column':\r\n      rhc = 0;\r\n      rowCount += chr;\r\n      break;\r\n    case 'all':\r\n      rowCount += chr;\r\n      colCount += rhc;\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n\r\n    // Compute the total cell count.\r\n    let cellCount = rowCount * colCount;\r\n\r\n    // Allow the user to cancel a large copy request.\r\n    if (cellCount > warningThreshold) {\r\n      let msg = `Copying ${cellCount} cells may take a while. Continue?`;\r\n      if (!window.confirm(msg)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Set up the format args.\r\n    let args = {\r\n      region: 'body' as DataModel.CellRegion,\r\n      row: 0,\r\n      column: 0,\r\n      value: null as any,\r\n      metadata: {} as DataModel.Metadata\r\n    };\r\n\r\n    // Allocate the array of rows.\r\n    let rows = new Array<string[]>(rowCount);\r\n\r\n    // Iterate over the rows.\r\n    for (let j = 0; j < rowCount; ++j) {\r\n      // Allocate the array of cells.\r\n      let cells = new Array<string>(colCount);\r\n\r\n      // Iterate over the columns.\r\n      for (let i = 0; i < colCount; ++i) {\r\n        // Set up the format variables.\r\n        let region: DataModel.CellRegion;\r\n        let row: number;\r\n        let column: number;\r\n\r\n        // Populate the format variables.\r\n        if (j < chr && i < rhc) {\r\n          region = 'corner-header';\r\n          row = j;\r\n          column = i;\r\n        } else if (j < chr) {\r\n          region = 'column-header';\r\n          row = j;\r\n          column = i - rhc + c1;\r\n        } else if (i < rhc) {\r\n          region = 'row-header';\r\n          row = j - chr + r1;\r\n          column = i;\r\n        } else {\r\n          region = 'body';\r\n          row = j - chr + r1;\r\n          column = i - rhc + c1;\r\n        }\r\n\r\n        // Populate the format args.\r\n        args.region = region;\r\n        args.row = row;\r\n        args.column = column;\r\n        args.value = dataModel.data(region, row, column);\r\n        args.metadata = dataModel.metadata(region, row, column);\r\n\r\n        // Format the cell.\r\n        cells[i] = format(args);\r\n      }\r\n\r\n      // Save the row of cells.\r\n      rows[j] = cells;\r\n    }\r\n\r\n    // Convert the cells into lines.\r\n    let lines = rows.map(cells => cells.join(separator));\r\n\r\n    // Convert the lines into text.\r\n    let text = lines.join('\\n');\r\n\r\n    // Copy the text to the clipboard.\r\n    ClipboardExt.copyText(text);\r\n  }\r\n\r\n  /**\r\n   * Process a message sent to the widget.\r\n   *\r\n   * @param msg - The message sent to the widget.\r\n   */\r\n  processMessage(msg: Message): void {\r\n    // Ignore child show/hide messages. The data grid controls the\r\n    // visibility of its children, and will manually dispatch the\r\n    // fit-request messages as a result of visibility change.\r\n    if (msg.type === 'child-shown' || msg.type === 'child-hidden') {\r\n      return;\r\n    }\r\n\r\n    // Recompute the scroll bar minimums before the layout refits.\r\n    if (msg.type === 'fit-request') {\r\n      let vsbLimits = ElementExt.sizeLimits(this._vScrollBar.node);\r\n      let hsbLimits = ElementExt.sizeLimits(this._hScrollBar.node);\r\n      this._vScrollBarMinWidth = vsbLimits.minWidth;\r\n      this._hScrollBarMinHeight = hsbLimits.minHeight;\r\n    }\r\n\r\n    // Process all other messages as normal.\r\n    super.processMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * Intercept a message sent to a message handler.\r\n   *\r\n   * @param handler - The target handler of the message.\r\n   *\r\n   * @param msg - The message to be sent to the handler.\r\n   *\r\n   * @returns `true` if the message should continue to be processed\r\n   *   as normal, or `false` if processing should cease immediately.\r\n   */\r\n  messageHook(handler: IMessageHandler, msg: Message): boolean {\r\n    // Process viewport messages.\r\n    if (handler === this._viewport) {\r\n      this._processViewportMessage(msg);\r\n      return true;\r\n    }\r\n\r\n    // Process horizontal scroll bar messages.\r\n    if (handler === this._hScrollBar && msg.type === 'activate-request') {\r\n      this.activate();\r\n      return false;\r\n    }\r\n\r\n    // Process vertical scroll bar messages.\r\n    if (handler === this._vScrollBar && msg.type === 'activate-request') {\r\n      this.activate();\r\n      return false;\r\n    }\r\n\r\n    // Ignore all other messages.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the data grid.\r\n   *\r\n   * @param event - The DOM event sent to the data grid.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the data grid's DOM node. It\r\n   * should not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n    case 'keydown':\r\n      this._evtKeyDown(event as KeyboardEvent);\r\n      break;\r\n    case 'mousedown':\r\n      this._evtMouseDown(event as MouseEvent);\r\n      break;\r\n    case 'mousemove':\r\n      this._evtMouseMove(event as MouseEvent);\r\n      break;\r\n    case 'mouseup':\r\n      this._evtMouseUp(event as MouseEvent);\r\n      break;\r\n    case 'dblclick':\r\n      this._evtMouseDoubleClick(event as MouseEvent);\r\n      break;\r\n    case 'mouseleave':\r\n      this._evtMouseLeave(event as MouseEvent);\r\n      break;\r\n    case 'contextmenu':\r\n      this._evtContextMenu(event as MouseEvent);\r\n      break;\r\n    case 'wheel':\r\n      this._evtWheel(event as WheelEvent);\r\n      break;\r\n    case 'resize':\r\n      this._refreshDPI();\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'activate-request'` message.\r\n   */\r\n  protected onActivateRequest(msg: Message): void {\r\n    this.viewport.node.focus();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    window.addEventListener('resize', this);\r\n    this.node.addEventListener('wheel', this);\r\n    this._viewport.node.addEventListener('keydown', this);\r\n    this._viewport.node.addEventListener('mousedown', this);\r\n    this._viewport.node.addEventListener('mousemove', this);\r\n    this._viewport.node.addEventListener('dblclick', this);\r\n    this._viewport.node.addEventListener('mouseleave', this);\r\n    this._viewport.node.addEventListener('contextmenu', this);\r\n    this.repaintContent();\r\n    this.repaintOverlay();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    window.removeEventListener('resize', this);\r\n    this.node.removeEventListener('wheel', this);\r\n    this._viewport.node.removeEventListener('keydown', this);\r\n    this._viewport.node.removeEventListener('mousedown', this);\r\n    this._viewport.node.removeEventListener('mousemove', this);\r\n    this._viewport.node.removeEventListener('mouseleave', this);\r\n    this._viewport.node.removeEventListener('dblclick', this);\r\n    this._viewport.node.removeEventListener('contextmenu', this);\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {\r\n    this.repaintContent();\r\n    this.repaintOverlay();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    if (this._editorController) {\r\n      this._editorController.cancel();\r\n    }\r\n\r\n    this._syncScrollState();\r\n  }\r\n\r\n  /**\r\n   * Schedule a repaint of all of the grid content.\r\n   */\r\n  protected repaintContent(): void {\r\n    let msg = new Private.PaintRequest('all', 0, 0, 0, 0);\r\n    MessageLoop.postMessage(this._viewport, msg);\r\n  }\r\n\r\n  /**\r\n   * Schedule a repaint of specific grid content.\r\n   */\r\n  protected repaintRegion(region: DataModel.CellRegion, r1: number, c1: number, r2: number, c2: number): void {\r\n    let msg = new Private.PaintRequest(region, r1, c1, r2, c2);\r\n    MessageLoop.postMessage(this._viewport, msg);\r\n  }\r\n\r\n  /**\r\n   * Schedule a repaint of the overlay.\r\n   */\r\n  protected repaintOverlay(): void {\r\n    MessageLoop.postMessage(this._viewport, Private.OverlayPaintRequest);\r\n  }\r\n\r\n  /**\r\n   * Ensure the canvas is at least the specified size.\r\n   *\r\n   * This method will retain the valid canvas content.\r\n   */\r\n  private _resizeCanvasIfNeeded(width: number, height: number): void {\r\n    // Scale the size by the dpi ratio.\r\n    width = width * this._dpiRatio;\r\n    height = height * this._dpiRatio;\r\n\r\n    // Compute the maximum canvas size for the given width and height.\r\n    let maxW = (Math.ceil((width + 1) / 512) + 1) * 512;\r\n    let maxH = (Math.ceil((height + 1) / 512) + 1) * 512;\r\n\r\n    // Get the current size of the canvas.\r\n    let curW = this._canvas.width;\r\n    let curH = this._canvas.height;\r\n\r\n    // Bail early if the canvas size is within bounds.\r\n    if (curW >= width && curH >= height && curW <= maxW && curH <= maxH) {\r\n      return;\r\n    }\r\n\r\n    // Compute the expanded canvas size.\r\n    let expW = maxW - 512;\r\n    let expH = maxH - 512;\r\n\r\n    // Set the transforms to the identity matrix.\r\n    this._canvasGC.setTransform(1, 0, 0, 1, 0, 0);\r\n    this._bufferGC.setTransform(1, 0, 0, 1, 0, 0);\r\n    this._overlayGC.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    // Resize the buffer if needed.\r\n    if (curW < width) {\r\n      this._buffer.width = expW;\r\n    } else if (curW > maxW) {\r\n      this._buffer.width = maxW;\r\n    }\r\n\r\n    // Resize the buffer height if needed.\r\n    if (curH < height) {\r\n      this._buffer.height = expH;\r\n    } else if (curH > maxH) {\r\n      this._buffer.height = maxH;\r\n    }\r\n\r\n    // Test whether there is content to blit.\r\n    let needBlit = curH > 0 && curH > 0 && width > 0 && height > 0;\r\n\r\n    // Copy the valid canvas content into the buffer if needed.\r\n    if (needBlit) {\r\n      this._bufferGC.drawImage(this._canvas, 0, 0);\r\n    }\r\n\r\n    // Resize the canvas width if needed.\r\n    if (curW < width) {\r\n      this._canvas.width = expW;\r\n      this._canvas.style.width = `${expW / this._dpiRatio}px`;\r\n    } else if (curW > maxW) {\r\n      this._canvas.width = maxW;\r\n      this._canvas.style.width = `${maxW / this._dpiRatio}px`;\r\n    }\r\n\r\n    // Resize the canvas height if needed.\r\n    if (curH < height) {\r\n      this._canvas.height = expH;\r\n      this._canvas.style.height = `${expH / this._dpiRatio}px`;\r\n    } else if (curH > maxH) {\r\n      this._canvas.height = maxH;\r\n      this._canvas.style.height = `${maxH / this._dpiRatio}px`;\r\n    }\r\n\r\n    // Copy the valid canvas content from the buffer if needed.\r\n    if (needBlit) {\r\n      this._canvasGC.drawImage(this._buffer, 0, 0);\r\n    }\r\n\r\n    // Copy the valid overlay content into the buffer if needed.\r\n    if (needBlit) {\r\n      this._bufferGC.drawImage(this._overlay, 0, 0);\r\n    }\r\n\r\n    // Resize the overlay width if needed.\r\n    if (curW < width) {\r\n      this._overlay.width = expW;\r\n      this._overlay.style.width = `${expW / this._dpiRatio}px`;\r\n    } else if (curW > maxW) {\r\n      this._overlay.width = maxW;\r\n      this._overlay.style.width = `${maxW / this._dpiRatio}px`;\r\n    }\r\n\r\n    // Resize the overlay height if needed.\r\n    if (curH < height) {\r\n      this._overlay.height = expH;\r\n      this._overlay.style.height = `${expH / this._dpiRatio}px`;\r\n    } else if (curH > maxH) {\r\n      this._overlay.height = maxH;\r\n      this._overlay.style.height = `${maxH / this._dpiRatio}px`;\r\n    }\r\n\r\n    // Copy the valid overlay content from the buffer if needed.\r\n    if (needBlit) {\r\n      this._overlayGC.drawImage(this._buffer, 0, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sync the scroll bars and scroll state with the viewport.\r\n   *\r\n   * #### Notes\r\n   * If the visibility of either scroll bar changes, a synchronous\r\n   * fit-request will be dispatched to the data grid to immediately\r\n   * resize the viewport.\r\n   */\r\n  private _syncScrollState(): void {\r\n    // Fetch the viewport dimensions.\r\n    let bw = this.bodyWidth;\r\n    let bh = this.bodyHeight;\r\n    let pw = this.pageWidth;\r\n    let ph = this.pageHeight;\r\n\r\n    // Get the current scroll bar visibility.\r\n    let hasVScroll = !this._vScrollBar.isHidden;\r\n    let hasHScroll = !this._hScrollBar.isHidden;\r\n\r\n    // Get the minimum sizes of the scroll bars.\r\n    let vsw = this._vScrollBarMinWidth;\r\n    let hsh = this._hScrollBarMinHeight;\r\n\r\n    // Get the page size as if no scroll bars are visible.\r\n    let apw = pw + (hasVScroll ? vsw : 0);\r\n    let aph = ph + (hasHScroll ? hsh : 0);\r\n\r\n    // Test whether scroll bars are needed for the adjusted size.\r\n    let needVScroll = aph < bh - 1;\r\n    let needHScroll = apw < bw - 1;\r\n\r\n    // Re-test the horizontal scroll if a vertical scroll is needed.\r\n    if (needVScroll && !needHScroll) {\r\n      needHScroll = (apw - vsw) < bw - 1;\r\n    }\r\n\r\n    // Re-test the vertical scroll if a horizontal scroll is needed.\r\n    if (needHScroll && !needVScroll) {\r\n      needVScroll = (aph - hsh) < bh - 1;\r\n    }\r\n\r\n    // If the visibility changes, immediately refit the grid.\r\n    if (needVScroll !== hasVScroll || needHScroll !== hasHScroll) {\r\n      this._vScrollBar.setHidden(!needVScroll);\r\n      this._hScrollBar.setHidden(!needHScroll);\r\n      this._scrollCorner.setHidden(!needVScroll || !needHScroll);\r\n      MessageLoop.sendMessage(this, Widget.Msg.FitRequest);\r\n    }\r\n\r\n    // Update the scroll bar limits.\r\n    this._vScrollBar.maximum = this.maxScrollY;\r\n    this._vScrollBar.page = this.pageHeight;\r\n    this._hScrollBar.maximum = this.maxScrollX;\r\n    this._hScrollBar.page = this.pageWidth;\r\n\r\n    // Re-clamp the scroll position.\r\n    this._scrollTo(this._scrollX, this._scrollY);\r\n  }\r\n\r\n  /**\r\n   * Sync the viewport to the given scroll position.\r\n   *\r\n   * #### Notes\r\n   * This schedules a full repaint and syncs the scroll state.\r\n   */\r\n  private _syncViewport(): void {\r\n    this.repaintContent();\r\n    this.repaintOverlay();\r\n    this._syncScrollState();\r\n  }\r\n\r\n  /**\r\n   * Process a message sent to the viewport\r\n   */\r\n  private _processViewportMessage(msg: Message): void {\r\n    switch (msg.type) {\r\n    case 'resize':\r\n      this._onViewportResize(msg as Widget.ResizeMessage);\r\n      break;\r\n    case 'scroll-request':\r\n      this._onViewportScrollRequest(msg);\r\n      break;\r\n    case 'paint-request':\r\n      this._onViewportPaintRequest(msg as Private.PaintRequest);\r\n      break;\r\n    case 'overlay-paint-request':\r\n      this._onViewportOverlayPaintRequest(msg);\r\n      break;\r\n    case 'row-resize-request':\r\n      this._onViewportRowResizeRequest(msg as Private.RowResizeRequest);\r\n      break;\r\n    case 'column-resize-request':\r\n      this._onViewportColumnResizeRequest(msg as Private.ColumnResizeRequest);\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message hook invoked on a viewport `'resize'` message.\r\n   */\r\n  private _onViewportResize(msg: Widget.ResizeMessage): void {\r\n    // Bail early if the viewport is not visible.\r\n    if (!this._viewport.isVisible) {\r\n      return;\r\n    }\r\n\r\n    // Unpack the message data.\r\n    let { width, height } = msg;\r\n\r\n    // Measure the viewport node if the dimensions are unknown.\r\n    if (width === -1) {\r\n      width = this._viewport.node.offsetWidth;\r\n    }\r\n    if (height === -1) {\r\n      height = this._viewport.node.offsetHeight;\r\n    }\r\n\r\n    // Round the dimensions to the nearest pixel.\r\n    width = Math.round(width);\r\n    height = Math.round(height);\r\n\r\n    // Get the current size of the viewport.\r\n    let oldWidth = this._viewportWidth;\r\n    let oldHeight = this._viewportHeight;\r\n\r\n    // Updated internal viewport size.\r\n    this._viewportWidth = width;\r\n    this._viewportHeight = height;\r\n\r\n    // Resize the canvas if needed.\r\n    this._resizeCanvasIfNeeded(width, height);\r\n\r\n    // Bail early if there is nothing to paint.\r\n    if (width === 0 || height === 0) {\r\n      return;\r\n    }\r\n\r\n    // Paint the whole grid if the old size was zero.\r\n    if (oldWidth === 0 || oldHeight === 0) {\r\n      this.paintContent(0, 0, width, height);\r\n      this._paintOverlay();\r\n      return;\r\n    }\r\n\r\n    // Paint the right edge as needed.\r\n    if (this._stretchLastColumn && this.pageWidth > this.bodyWidth) {\r\n      let bx = this._columnSections.offsetOf(this._columnSections.count - 1);\r\n      let x = Math.min(this.headerWidth + bx, oldWidth);\r\n      this.paintContent(x, 0, width - x, height);\r\n    } else if (width > oldWidth) {\r\n      this.paintContent(oldWidth, 0, width - oldWidth, height);\r\n    }\r\n\r\n    // Paint the bottom edge as needed.\r\n    if (this._stretchLastRow && this.pageHeight > this.bodyHeight) {\r\n      let by = this._rowSections.offsetOf(this._rowSections.count - 1);\r\n      let y = Math.min(this.headerHeight + by, oldHeight);\r\n      this.paintContent(0, y, width, height - y);\r\n    } else if (height > oldHeight) {\r\n      this.paintContent(0, oldHeight, width, height - oldHeight);\r\n    }\r\n\r\n    // Paint the overlay.\r\n    this._paintOverlay();\r\n  }\r\n\r\n  /**\r\n   * A message hook invoked on a viewport `'scroll-request'` message.\r\n   */\r\n  private _onViewportScrollRequest(msg: Message): void {\r\n    this._scrollTo(this._hScrollBar.value, this._vScrollBar.value);\r\n  }\r\n\r\n  /**\r\n   * A message hook invoked on a viewport `'paint-request'` message.\r\n   */\r\n  private _onViewportPaintRequest(msg: Private.PaintRequest): void {\r\n    // Bail early if the viewport is not visible.\r\n    if (!this._viewport.isVisible) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if the viewport has zero area.\r\n    if (this._viewportWidth === 0 || this._viewportHeight === 0) {\r\n      return;\r\n    }\r\n\r\n    // Set up the paint limits.\r\n    let xMin = 0;\r\n    let yMin = 0;\r\n    let xMax = this._viewportWidth - 1;\r\n    let yMax = this._viewportHeight - 1;\r\n\r\n    // Fetch the scroll position.\r\n    let sx = this._scrollX;\r\n    let sy = this._scrollY;\r\n\r\n    // Fetch the header dimensions.\r\n    let hw = this.headerWidth;\r\n    let hh = this.headerHeight;\r\n\r\n    // Fetch the section lists.\r\n    let rs = this._rowSections;\r\n    let cs = this._columnSections;\r\n    let rhs = this._rowHeaderSections;\r\n    let chs = this._columnHeaderSections;\r\n\r\n    // Unpack the message data.\r\n    let { region, r1, c1, r2, c2 } = msg;\r\n\r\n    // Set up the paint variables.\r\n    let x1: number;\r\n    let y1: number;\r\n    let x2: number;\r\n    let y2: number;\r\n\r\n    // Fill the paint variables based on the paint region.\r\n    switch (region) {\r\n    case 'all':\r\n      x1 = xMin;\r\n      y1 = yMin;\r\n      x2 = xMax;\r\n      y2 = yMax;\r\n      break;\r\n    case 'body':\r\n      r1 = Math.max(0, Math.min(r1, rs.count));\r\n      c1 = Math.max(0, Math.min(c1, cs.count));\r\n      r2 = Math.max(0, Math.min(r2, rs.count));\r\n      c2 = Math.max(0, Math.min(c2, cs.count));\r\n      x1 = cs.offsetOf(c1) - sx + hw;\r\n      y1 = rs.offsetOf(r1) - sy + hh;\r\n      x2 = cs.extentOf(c2) - sx + hw;\r\n      y2 = rs.extentOf(r2) - sy + hh;\r\n      break;\r\n    case 'row-header':\r\n      r1 = Math.max(0, Math.min(r1, rs.count));\r\n      c1 = Math.max(0, Math.min(c1, rhs.count));\r\n      r2 = Math.max(0, Math.min(r2, rs.count));\r\n      c2 = Math.max(0, Math.min(c2, rhs.count));\r\n      x1 = rhs.offsetOf(c1);\r\n      y1 = rs.offsetOf(r1) - sy + hh;\r\n      x2 = rhs.extentOf(c2);\r\n      y2 = rs.extentOf(r2) - sy + hh;\r\n      break;\r\n    case 'column-header':\r\n      r1 = Math.max(0, Math.min(r1, chs.count));\r\n      c1 = Math.max(0, Math.min(c1, cs.count));\r\n      r2 = Math.max(0, Math.min(r2, chs.count));\r\n      c2 = Math.max(0, Math.min(c2, cs.count));\r\n      x1 = cs.offsetOf(c1) - sx + hw;\r\n      y1 = chs.offsetOf(r1);\r\n      x2 = cs.extentOf(c2) - sx + hw;\r\n      y2 = chs.extentOf(r2);\r\n      break;\r\n    case 'corner-header':\r\n      r1 = Math.max(0, Math.min(r1, chs.count));\r\n      c1 = Math.max(0, Math.min(c1, rhs.count));\r\n      r2 = Math.max(0, Math.min(r2, chs.count));\r\n      c2 = Math.max(0, Math.min(c2, rhs.count));\r\n      x1 = rhs.offsetOf(c1);\r\n      y1 = chs.offsetOf(r1);\r\n      x2 = rhs.extentOf(c2);\r\n      y2 = chs.extentOf(r2);\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n\r\n    // Bail early if the dirty rect is outside the bounds.\r\n    if (x2 < xMin || y2 < yMin || x1 > xMax || y1 > yMax) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the dirty rect to the paint bounds.\r\n    x1 = Math.max(xMin, Math.min(x1, xMax));\r\n    y1 = Math.max(yMin, Math.min(y1, yMax));\r\n    x2 = Math.max(xMin, Math.min(x2, xMax));\r\n    y2 = Math.max(yMin, Math.min(y2, yMax));\r\n\r\n    // Paint the content of the dirty rect.\r\n    this.paintContent(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\r\n  }\r\n\r\n  /**\r\n   * A message hook invoked on a viewport `'overlay-paint-request'` message.\r\n   */\r\n  private _onViewportOverlayPaintRequest(msg: Message): void {\r\n    // Bail early if the viewport is not visible.\r\n    if (!this._viewport.isVisible) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if the viewport has zero area.\r\n    if (this._viewportWidth === 0 || this._viewportHeight === 0) {\r\n      return;\r\n    }\r\n\r\n    // Paint the content of the overlay.\r\n    this._paintOverlay();\r\n  }\r\n\r\n  /**\r\n   * A message hook invoked on a viewport `'row-resize-request'` message.\r\n   */\r\n  private _onViewportRowResizeRequest(msg: Private.RowResizeRequest): void {\r\n    if (msg.region === 'body') {\r\n      this._resizeRow(msg.index, msg.size);\r\n    } else {\r\n      this._resizeColumnHeader(msg.index, msg.size);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message hook invoked on a viewport `'column-resize-request'` message.\r\n   */\r\n  private _onViewportColumnResizeRequest(msg: Private.ColumnResizeRequest): void {\r\n    if (msg.region === 'body') {\r\n      this._resizeColumn(msg.index, msg.size);\r\n    } else {\r\n      this._resizeRowHeader(msg.index, msg.size);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `thumbMoved` signal from a scroll bar.\r\n   */\r\n  private _onThumbMoved(sender: ScrollBar): void {\r\n    MessageLoop.postMessage(this._viewport, Private.ScrollRequest);\r\n  }\r\n\r\n  /**\r\n   * Handle the `pageRequested` signal from a scroll bar.\r\n   */\r\n  private _onPageRequested(sender: ScrollBar, dir: 'decrement' | 'increment'): void {\r\n    if (sender === this._vScrollBar) {\r\n      this.scrollByPage(dir === 'decrement' ? 'up' : 'down');\r\n    } else {\r\n      this.scrollByPage(dir === 'decrement' ? 'left' : 'right');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `stepRequested` signal from a scroll bar.\r\n   */\r\n  private _onStepRequested(sender: ScrollBar, dir: 'decrement' | 'increment'): void {\r\n    if (sender === this._vScrollBar) {\r\n      this.scrollByStep(dir === 'decrement' ? 'up' : 'down');\r\n    } else {\r\n      this.scrollByStep(dir === 'decrement' ? 'left' : 'right');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A signal handler for the data model `changed` signal.\r\n   */\r\n  private _onDataModelChanged(sender: DataModel, args: DataModel.ChangedArgs): void {\r\n    switch (args.type) {\r\n    case 'rows-inserted':\r\n      this._onRowsInserted(args);\r\n      break;\r\n    case 'columns-inserted':\r\n      this._onColumnsInserted(args);\r\n      break;\r\n    case 'rows-removed':\r\n      this._onRowsRemoved(args);\r\n      break;\r\n    case 'columns-removed':\r\n      this._onColumnsRemoved(args);\r\n      break;\r\n    case 'rows-moved':\r\n      this._onRowsMoved(args);\r\n      break;\r\n    case 'columns-moved':\r\n      this._onColumnsMoved(args);\r\n      break;\r\n    case 'cells-changed':\r\n      this._onCellsChanged(args);\r\n      break;\r\n    case 'model-reset':\r\n      this._onModelReset(args);\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A signal handler for the selection model `changed` signal.\r\n   */\r\n  private _onSelectionsChanged(sender: SelectionModel): void {\r\n    this.repaintOverlay();\r\n  }\r\n\r\n  /**\r\n   * Handle rows being inserted in the data model.\r\n   */\r\n  private _onRowsInserted(args: DataModel.RowsChangedArgs): void {\r\n    // Unpack the arg data.\r\n    let { region, index, span } = args;\r\n\r\n    // Bail early if there are no sections to insert.\r\n    if (span <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Look up the relevant section list.\r\n    let list: SectionList;\r\n    if (region === 'body') {\r\n      list = this._rowSections;\r\n    } else {\r\n      list = this._columnHeaderSections;\r\n    }\r\n\r\n    // Insert the span, maintaining the scroll position as needed.\r\n    if (this._scrollY === this.maxScrollY && this.maxScrollY > 0) {\r\n      list.insert(index, span);\r\n      this._scrollY = this.maxScrollY;\r\n    } else {\r\n      list.insert(index, span);\r\n    }\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Handle columns being inserted into the data model.\r\n   */\r\n  private _onColumnsInserted(args: DataModel.ColumnsChangedArgs): void {\r\n    // Unpack the arg data.\r\n    let { region, index, span } = args;\r\n\r\n    // Bail early if there are no sections to insert.\r\n    if (span <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Look up the relevant section list.\r\n    let list: SectionList;\r\n    if (region === 'body') {\r\n      list = this._columnSections;\r\n    } else {\r\n      list = this._rowHeaderSections;\r\n    }\r\n\r\n    // Insert the span, maintaining the scroll position as needed.\r\n    if (this._scrollX === this.maxScrollX && this.maxScrollX > 0) {\r\n      list.insert(index, span);\r\n      this._scrollX = this.maxScrollX;\r\n    } else {\r\n      list.insert(index, span);\r\n    }\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Handle rows being removed from the data model.\r\n   */\r\n  private _onRowsRemoved(args: DataModel.RowsChangedArgs): void {\r\n    // Unpack the arg data.\r\n    let { region, index, span } = args;\r\n\r\n    // Bail early if there are no sections to remove.\r\n    if (span <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Look up the relevant section list.\r\n    let list: SectionList;\r\n    if (region === 'body') {\r\n      list = this._rowSections;\r\n    } else {\r\n      list = this._columnHeaderSections;\r\n    }\r\n\r\n    // Bail if the index or is invalid\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Remove the span, maintaining the scroll position as needed.\r\n    if (this._scrollY === this.maxScrollY && this.maxScrollY > 0) {\r\n      list.remove(index, span);\r\n      this._scrollY = this.maxScrollY;\r\n    } else {\r\n      list.remove(index, span);\r\n    }\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Handle columns being removed from the data model.\r\n   */\r\n  private _onColumnsRemoved(args: DataModel.ColumnsChangedArgs): void {\r\n    // Unpack the arg data.\r\n    let { region, index, span } = args;\r\n\r\n    // Bail early if there are no sections to remove.\r\n    if (span <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Look up the relevant section list.\r\n    let list: SectionList;\r\n    if (region === 'body') {\r\n      list = this._columnSections;\r\n    } else {\r\n      list = this._rowHeaderSections;\r\n    }\r\n\r\n    // Bail if the index or is invalid\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Remove the span, maintaining the scroll position as needed.\r\n    if (this._scrollX === this.maxScrollX && this.maxScrollX > 0) {\r\n      list.remove(index, span);\r\n      this._scrollX = this.maxScrollX;\r\n    } else {\r\n      list.remove(index, span);\r\n    }\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Handle rows moving in the data model.\r\n   */\r\n  private _onRowsMoved(args: DataModel.RowsMovedArgs): void {\r\n    // Unpack the arg data.\r\n    let { region, index, span, destination } = args;\r\n\r\n    // Bail early if there are no sections to move.\r\n    if (span <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Look up the relevant section list.\r\n    let list: SectionList;\r\n    if (region === 'body') {\r\n      list = this._rowSections;\r\n    } else {\r\n      list = this._columnHeaderSections;\r\n    }\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the move span to the limit.\r\n    span = Math.min(span, list.count - index);\r\n\r\n    // Clamp the destination index to the limit.\r\n    destination = Math.min(Math.max(0, destination), list.count - span);\r\n\r\n    // Bail early if there is no effective move.\r\n    if (index === destination) {\r\n      return;\r\n    }\r\n\r\n    // Compute the first affected index.\r\n    let r1 = Math.min(index, destination);\r\n\r\n    // Compute the last affected index.\r\n    let r2 = Math.max(index + span - 1, destination + span - 1);\r\n\r\n    // Move the sections in the list.\r\n    list.move(index, span, destination);\r\n\r\n    // Schedule a repaint of the dirty cells.\r\n    if (region === 'body') {\r\n      this.repaintRegion('body', r1, 0, r2, Infinity);\r\n      this.repaintRegion('row-header', r1, 0, r2, Infinity);\r\n    } else {\r\n      this.repaintRegion('column-header', r1, 0, r2, Infinity);\r\n      this.repaintRegion('corner-header', r1, 0, r2, Infinity);\r\n    }\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Handle columns moving in the data model.\r\n   */\r\n  private _onColumnsMoved(args: DataModel.ColumnsMovedArgs): void {\r\n    // Unpack the arg data.\r\n    let { region, index, span, destination } = args;\r\n\r\n    // Bail early if there are no sections to move.\r\n    if (span <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Look up the relevant section list.\r\n    let list: SectionList;\r\n    if (region === 'body') {\r\n      list = this._columnSections;\r\n    } else {\r\n      list = this._rowHeaderSections;\r\n    }\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the move span to the limit.\r\n    span = Math.min(span, list.count - index);\r\n\r\n    // Clamp the destination index to the limit.\r\n    destination = Math.min(Math.max(0, destination), list.count - span);\r\n\r\n    // Bail early if there is no effective move.\r\n    if (index === destination) {\r\n      return;\r\n    }\r\n\r\n    // Move the sections in the list.\r\n    list.move(index, span, destination);\r\n\r\n    // Compute the first affected index.\r\n    let c1 = Math.min(index, destination);\r\n\r\n    // Compute the last affected index.\r\n    let c2 = Math.max(index + span - 1, destination + span - 1);\r\n\r\n    // Schedule a repaint of the dirty cells.\r\n    if (region === 'body') {\r\n      this.repaintRegion('body', 0, c1, Infinity, c2);\r\n      this.repaintRegion('column-header', 0, c1, Infinity, c2);\r\n    } else {\r\n      this.repaintRegion('row-header', 0, c1, Infinity, c2);\r\n      this.repaintRegion('corner-header', 0, c1, Infinity, c2);\r\n    }\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * Handle cells changing in the data model.\r\n   */\r\n  private _onCellsChanged(args: DataModel.CellsChangedArgs): void {\r\n    // Unpack the arg data.\r\n    let { region, row, column, rowSpan, columnSpan } = args;\r\n\r\n    // Bail early if there are no cells to modify.\r\n    if (rowSpan <= 0 && columnSpan <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Compute the changed cell bounds.\r\n    let r1 = row;\r\n    let c1 = column;\r\n    let r2 = r1 + rowSpan - 1;\r\n    let c2 = c1 + columnSpan - 1;\r\n\r\n    // Schedule a repaint of the cell content.\r\n    this.repaintRegion(region, r1, c1, r2, c2);\r\n  }\r\n\r\n  /**\r\n   * Handle a full data model reset.\r\n   */\r\n  private _onModelReset(args: DataModel.ModelResetArgs): void {\r\n    // Look up the various current section counts.\r\n    let nr = this._rowSections.count;\r\n    let nc = this._columnSections.count;\r\n    let nrh = this._rowHeaderSections.count;\r\n    let nch = this._columnHeaderSections.count;\r\n\r\n    // Compute the delta count for each region.\r\n    let dr = this._dataModel!.rowCount('body') - nr;\r\n    let dc = this._dataModel!.columnCount('body') - nc;\r\n    let drh = this._dataModel!.columnCount('row-header') - nrh;\r\n    let dch = this._dataModel!.rowCount('column-header') - nch;\r\n\r\n    // Update the row sections, if needed.\r\n    if (dr > 0) {\r\n      this._rowSections.insert(nr, dr);\r\n    } else if (dr < 0) {\r\n      this._rowSections.remove(nr + dr, -dr);\r\n    }\r\n\r\n    // Update the column sections, if needed.\r\n    if (dc > 0) {\r\n      this._columnSections.insert(nc, dc);\r\n    } else if (dc < 0) {\r\n      this._columnSections.remove(nc + dc, -dc);\r\n    }\r\n\r\n    // Update the row header sections, if needed.\r\n    if (drh > 0) {\r\n      this._rowHeaderSections.insert(nrh, drh);\r\n    } else if (drh < 0) {\r\n      this._rowHeaderSections.remove(nrh + drh, -drh);\r\n    }\r\n\r\n    // Update the column header sections, if needed.\r\n    if (dch > 0) {\r\n      this._columnHeaderSections.insert(nch, dch);\r\n    } else if (dch < 0) {\r\n      this._columnHeaderSections.remove(nch + dch, -dch);\r\n    }\r\n\r\n    // Sync the viewport.\r\n    this._syncViewport();\r\n  }\r\n\r\n  /**\r\n   * A signal handler for the renderer map `changed` signal.\r\n   */\r\n  private _onRenderersChanged(): void {\r\n    this.repaintContent();\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the data grid.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    if (this._mousedown) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else if (this._keyHandler) {\r\n      this._keyHandler.onKeyDown(this, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the data grid.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Ignore everything except the left mouse button.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Activate the grid.\r\n    this.activate();\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Add the extra document listeners.\r\n    document.addEventListener('keydown', this, true);\r\n    document.addEventListener('mouseup', this, true);\r\n    document.addEventListener('mousedown', this, true);\r\n    document.addEventListener('mousemove', this, true);\r\n    document.addEventListener('contextmenu', this, true);\r\n\r\n    // Flip the mousedown flag.\r\n    this._mousedown = true;\r\n\r\n    // Dispatch to the mouse handler.\r\n    if (this._mouseHandler) {\r\n      this._mouseHandler.onMouseDown(this, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the data grid.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Stop the event propagation if the mouse is down.\r\n    if (this._mousedown) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    // Bail if there is no mouse handler.\r\n    if (!this._mouseHandler) {\r\n      return;\r\n    }\r\n\r\n    // Dispatch to the mouse handler.\r\n    if (this._mousedown) {\r\n      this._mouseHandler.onMouseMove(this, event);\r\n    } else {\r\n      this._mouseHandler.onMouseHover(this, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseup'` event for the data grid.\r\n   */\r\n  private _evtMouseUp(event: MouseEvent): void {\r\n    // Ignore everything except the left mouse button.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Dispatch to the mouse handler.\r\n    if (this._mouseHandler) {\r\n      this._mouseHandler.onMouseUp(this, event);\r\n    }\r\n\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * Handle the `'dblclick'` event for the data grid.\r\n   */\r\n  private _evtMouseDoubleClick(event: MouseEvent): void {\r\n    // Ignore everything except the left mouse button.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Dispatch to the mouse handler.\r\n    if (this._mouseHandler) {\r\n      this._mouseHandler.onMouseDoubleClick(this, event);\r\n    }\r\n\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseleave'` event for the data grid.\r\n   */\r\n  private _evtMouseLeave(event: MouseEvent): void {\r\n    if (this._mousedown) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else if (this._mouseHandler) {\r\n      this._mouseHandler.onMouseLeave(this, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'contextmenu'` event for the data grid.\r\n   */\r\n  private _evtContextMenu(event: MouseEvent): void {\r\n    if (this._mousedown) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else if (this._mouseHandler) {\r\n      this._mouseHandler.onContextMenu(this, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'wheel'` event for the data grid.\r\n   */\r\n  private _evtWheel(event: WheelEvent): void {\r\n    // Ignore the event if `accel` is held.\r\n    if (Platform.accelKey(event)) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if there is no mouse handler.\r\n    if (!this._mouseHandler) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Dispatch to the mouse handler.\r\n    this._mouseHandler.onWheel(this, event);\r\n  }\r\n\r\n  /**\r\n   * Release the mouse grab.\r\n   */\r\n  private _releaseMouse(): void {\r\n    // Clear the mousedown flag.\r\n    this._mousedown = false;\r\n\r\n    // Relase the mouse handler.\r\n    if (this._mouseHandler) {\r\n      this._mouseHandler.release();\r\n    }\r\n\r\n    // Remove the document listeners.\r\n    document.removeEventListener('keydown', this, true);\r\n    document.removeEventListener('mouseup', this, true);\r\n    document.removeEventListener('mousedown', this, true);\r\n    document.removeEventListener('mousemove', this, true);\r\n    document.removeEventListener('contextmenu', this, true);\r\n  }\r\n\r\n  /**\r\n   * Refresh the dpi ratio.\r\n   */\r\n  private _refreshDPI(): void {\r\n    // Get the best integral value for the dpi ratio.\r\n    let dpiRatio = Math.ceil(window.devicePixelRatio);\r\n\r\n    // Bail early if the computed dpi ratio has not changed.\r\n    if (this._dpiRatio === dpiRatio) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal dpi ratio.\r\n    this._dpiRatio = dpiRatio;\r\n\r\n    // Schedule a repaint of the content.\r\n    this.repaintContent();\r\n\r\n    // Schedule a repaint of the overlay.\r\n    this.repaintOverlay();\r\n\r\n    // Update the canvas size for the new dpi ratio.\r\n    this._resizeCanvasIfNeeded(this._viewportWidth, this._viewportHeight);\r\n\r\n    // Ensure the canvas style is scaled for the new ratio.\r\n    this._canvas.style.width = `${this._canvas.width / this._dpiRatio}px`;\r\n    this._canvas.style.height = `${this._canvas.height / this._dpiRatio}px`;\r\n\r\n    // Ensure the overlay style is scaled for the new ratio.\r\n    this._overlay.style.width = `${this._overlay.width / this._dpiRatio}px`;\r\n    this._overlay.style.height = `${this._overlay.height / this._dpiRatio}px`;\r\n  }\r\n\r\n  /**\r\n   * Resize a row section immediately.\r\n   */\r\n  private _resizeRow(index: number, size: number): void {\r\n    // Look up the target section list.\r\n    let list = this._rowSections;\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Look up the old size of the section.\r\n    let oldSize = list.sizeOf(index);\r\n\r\n    // Normalize the new size of the section.\r\n    let newSize = list.clampSize(size);\r\n\r\n    // Bail early if the size does not change.\r\n    if (oldSize === newSize) {\r\n      return;\r\n    }\r\n\r\n    // Resize the section in the list.\r\n    list.resize(index, newSize);\r\n\r\n    // Get the current size of the viewport.\r\n    let vw = this._viewportWidth;\r\n    let vh = this._viewportHeight;\r\n\r\n    // If there is nothing to paint, sync the scroll state.\r\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the size delta.\r\n    let delta = newSize - oldSize;\r\n\r\n    // Look up the column header height.\r\n    let hh = this.headerHeight;\r\n\r\n    // Compute the viewport offset of the section.\r\n    let offset = list.offsetOf(index) + hh - this._scrollY;\r\n\r\n    // Bail early if there is nothing to paint.\r\n    if (hh >= vh || offset >= vh) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Update the scroll position if the section is not visible.\r\n    if (offset + oldSize <= hh) {\r\n      this._scrollY += delta;\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the paint origin of the section.\r\n    let pos = Math.max(hh, offset);\r\n\r\n    // Paint from the section onward if it spans the viewport.\r\n    if (offset + oldSize >= vh || offset + newSize >= vh) {\r\n      this.paintContent(0, pos, vw, vh - pos);\r\n      this._paintOverlay();\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the X blit dimensions.\r\n    let sx = 0;\r\n    let sw = vw;\r\n    let dx = 0;\r\n\r\n    // Compute the Y blit dimensions.\r\n    let sy: number;\r\n    let sh: number;\r\n    let dy: number;\r\n    if (offset + newSize <= hh) {\r\n      sy = hh - delta;\r\n      sh = vh - sy;\r\n      dy = hh;\r\n    } else {\r\n      sy = offset + oldSize;\r\n      sh = vh - sy;\r\n      dy = sy + delta;\r\n    }\r\n\r\n    // Blit the valid content to the destination.\r\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\r\n\r\n    // Repaint the section if needed.\r\n    if (newSize > 0 && offset + newSize > hh) {\r\n      this.paintContent(0, pos, vw, offset + newSize - pos);\r\n    }\r\n\r\n    // Paint the trailing space as needed.\r\n    if (this._stretchLastRow && this.pageHeight > this.bodyHeight) {\r\n      let r = this._rowSections.count - 1;\r\n      let y = hh + this._rowSections.offsetOf(r);\r\n      this.paintContent(0, y, vw, vh - y);\r\n    } else if (delta < 0) {\r\n      this.paintContent(0, vh + delta, vw, -delta);\r\n    }\r\n\r\n    // Paint the overlay.\r\n    this._paintOverlay();\r\n\r\n    // Sync the scroll state.\r\n    this._syncScrollState();\r\n  }\r\n\r\n  /**\r\n   * Resize a column section immediately.\r\n   */\r\n  private _resizeColumn(index: number, size: number): void {\r\n    // Look up the target section list.\r\n    let list = this._columnSections;\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Look up the old size of the section.\r\n    let oldSize = list.sizeOf(index);\r\n\r\n    // Normalize the new size of the section.\r\n    let newSize = list.clampSize(size);\r\n\r\n    // Bail early if the size does not change.\r\n    if (oldSize === newSize) {\r\n      return;\r\n    }\r\n\r\n    // Resize the section in the list.\r\n    list.resize(index, newSize);\r\n\r\n    // Get the current size of the viewport.\r\n    let vw = this._viewportWidth;\r\n    let vh = this._viewportHeight;\r\n\r\n    // If there is nothing to paint, sync the scroll state.\r\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the size delta.\r\n    let delta = newSize - oldSize;\r\n\r\n    // Look up the row header width.\r\n    let hw = this.headerWidth;\r\n\r\n    // Compute the viewport offset of the section.\r\n    let offset = list.offsetOf(index) + hw - this._scrollX;\r\n\r\n    // Bail early if there is nothing to paint.\r\n    if (hw >= vw || offset >= vw) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Update the scroll position if the section is not visible.\r\n    if (offset + oldSize <= hw) {\r\n      this._scrollX += delta;\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the paint origin of the section.\r\n    let pos = Math.max(hw, offset);\r\n\r\n    // Paint from the section onward if it spans the viewport.\r\n    if (offset + oldSize >= vw || offset + newSize >= vw) {\r\n      this.paintContent(pos, 0, vw - pos, vh);\r\n      this._paintOverlay();\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the Y blit dimensions.\r\n    let sy = 0;\r\n    let sh = vh;\r\n    let dy = 0;\r\n\r\n    // Compute the X blit dimensions.\r\n    let sx: number;\r\n    let sw: number;\r\n    let dx: number;\r\n    if (offset + newSize <= hw) {\r\n      sx = hw - delta;\r\n      sw = vw - sx;\r\n      dx = hw;\r\n    } else {\r\n      sx = offset + oldSize;\r\n      sw = vw - sx;\r\n      dx = sx + delta;\r\n    }\r\n\r\n    // Blit the valid content to the destination.\r\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\r\n\r\n    // Repaint the section if needed.\r\n    if (newSize > 0 && offset + newSize > hw) {\r\n      this.paintContent(pos, 0, offset + newSize - pos, vh);\r\n    }\r\n\r\n    // Paint the trailing space as needed.\r\n    if (this._stretchLastColumn && this.pageWidth > this.bodyWidth) {\r\n      let c = this._columnSections.count - 1;\r\n      let x = hw + this._columnSections.offsetOf(c);\r\n      this.paintContent(x, 0, vw - x, vh);\r\n    } else if (delta < 0) {\r\n      this.paintContent(vw + delta, 0, -delta, vh);\r\n    }\r\n\r\n    // Paint the overlay.\r\n    this._paintOverlay();\r\n\r\n    // Sync the scroll state after painting.\r\n    this._syncScrollState();\r\n  }\r\n\r\n  /**\r\n   * Resize a row header section immediately.\r\n   */\r\n  private _resizeRowHeader(index: number, size: number): void {\r\n    // Look up the target section list.\r\n    let list = this._rowHeaderSections;\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Look up the old size of the section.\r\n    let oldSize = list.sizeOf(index);\r\n\r\n    // Normalize the new size of the section.\r\n    let newSize = list.clampSize(size);\r\n\r\n    // Bail early if the size does not change.\r\n    if (oldSize === newSize) {\r\n      return;\r\n    }\r\n\r\n    // Resize the section in the list.\r\n    list.resize(index, newSize);\r\n\r\n    // Get the current size of the viewport.\r\n    let vw = this._viewportWidth;\r\n    let vh = this._viewportHeight;\r\n\r\n    // If there is nothing to paint, sync the scroll state.\r\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the size delta.\r\n    let delta = newSize - oldSize;\r\n\r\n    // Look up the offset of the section.\r\n    let offset = list.offsetOf(index);\r\n\r\n    // Bail early if the section is fully outside the viewport.\r\n    if (offset >= vw) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Paint the entire tail if the section spans the viewport.\r\n    if (offset + oldSize >= vw || offset + newSize >= vw) {\r\n      this.paintContent(offset, 0, vw - offset, vh);\r\n      this._paintOverlay();\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the blit content dimensions.\r\n    let sx = offset + oldSize;\r\n    let sy = 0;\r\n    let sw = vw - sx;\r\n    let sh = vh;\r\n    let dx = sx + delta;\r\n    let dy = 0;\r\n\r\n    // Blit the valid contents to the destination.\r\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\r\n\r\n    // Repaint the header section if needed.\r\n    if (newSize > 0) {\r\n      this.paintContent(offset, 0, newSize, vh);\r\n    }\r\n\r\n    // Paint the trailing space as needed.\r\n    if (this._stretchLastColumn && this.pageWidth > this.bodyWidth) {\r\n      let c = this._columnSections.count - 1;\r\n      let x = this.headerWidth + this._columnSections.offsetOf(c);\r\n      this.paintContent(x, 0, vw - x, vh);\r\n    } else if (delta < 0) {\r\n      this.paintContent(vw + delta, 0, -delta, vh);\r\n    }\r\n\r\n    // Paint the overlay.\r\n    this._paintOverlay();\r\n\r\n    // Sync the scroll state after painting.\r\n    this._syncScrollState();\r\n  }\r\n\r\n  /**\r\n   * Resize a column header section immediately.\r\n   */\r\n  private _resizeColumnHeader(index: number, size: number): void {\r\n    // Look up the target section list.\r\n    let list = this._columnHeaderSections;\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= list.count) {\r\n      return;\r\n    }\r\n\r\n    // Look up the old size of the section.\r\n    let oldSize = list.sizeOf(index);\r\n\r\n    // Normalize the new size of the section.\r\n    let newSize = list.clampSize(size);\r\n\r\n    // Bail early if the size does not change.\r\n    if (oldSize === newSize) {\r\n      return;\r\n    }\r\n\r\n    // Resize the section in the list.\r\n    list.resize(index, newSize);\r\n\r\n    // Get the current size of the viewport.\r\n    let vw = this._viewportWidth;\r\n    let vh = this._viewportHeight;\r\n\r\n    // If there is nothing to paint, sync the scroll state.\r\n    if (!this._viewport.isVisible || vw === 0 || vh === 0) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Paint the overlay.\r\n    this._paintOverlay();\r\n\r\n    // Compute the size delta.\r\n    let delta = newSize - oldSize;\r\n\r\n    // Look up the offset of the section.\r\n    let offset = list.offsetOf(index);\r\n\r\n    // Bail early if the section is fully outside the viewport.\r\n    if (offset >= vh) {\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Paint the entire tail if the section spans the viewport.\r\n    if (offset + oldSize >= vh || offset + newSize >= vh) {\r\n      this.paintContent(0, offset, vw, vh - offset);\r\n      this._paintOverlay();\r\n      this._syncScrollState();\r\n      return;\r\n    }\r\n\r\n    // Compute the blit content dimensions.\r\n    let sx = 0;\r\n    let sy = offset + oldSize;\r\n    let sw = vw;\r\n    let sh = vh - sy;\r\n    let dx = 0;\r\n    let dy = sy + delta;\r\n\r\n    // Blit the valid contents to the destination.\r\n    this._blitContent(this._canvas, sx, sy, sw, sh, dx, dy);\r\n\r\n    // Repaint the header section if needed.\r\n    if (newSize > 0) {\r\n      this.paintContent(0, offset, vw, newSize);\r\n    }\r\n\r\n    // Paint the trailing space as needed.\r\n    if (this._stretchLastRow && this.pageHeight > this.bodyHeight) {\r\n      let r = this._rowSections.count - 1;\r\n      let y = this.headerHeight + this._rowSections.offsetOf(r);\r\n      this.paintContent(0, y, vw, vh - y);\r\n    } else if (delta < 0) {\r\n      this.paintContent(0, vh + delta, vw, -delta);\r\n    }\r\n\r\n    // Paint the overlay.\r\n    this._paintOverlay();\r\n\r\n    // Sync the scroll state after painting.\r\n    this._syncScrollState();\r\n  }\r\n\r\n  /**\r\n   * Scroll immediately to the specified offset position.\r\n   */\r\n  private _scrollTo(x: number, y: number): void {\r\n    // Floor and clamp the position to the allowable range.\r\n    x = Math.max(0, Math.min(Math.floor(x), this.maxScrollX));\r\n    y = Math.max(0, Math.min(Math.floor(y), this.maxScrollY));\r\n\r\n    // Synchronize the scroll bar values.\r\n    this._hScrollBar.value = x;\r\n    this._vScrollBar.value = y;\r\n\r\n    // Compute the delta scroll amount.\r\n    let dx = x - this._scrollX;\r\n    let dy = y - this._scrollY;\r\n\r\n    // Bail early if there is no effective scroll.\r\n    if (dx === 0 && dy === 0) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if the viewport is not visible.\r\n    if (!this._viewport.isVisible) {\r\n      this._scrollX = x;\r\n      this._scrollY = y;\r\n      return;\r\n    }\r\n\r\n    // Get the current size of the viewport.\r\n    let width = this._viewportWidth;\r\n    let height = this._viewportHeight;\r\n\r\n    // Bail early if the viewport is empty.\r\n    if (width === 0 || height === 0) {\r\n      this._scrollX = x;\r\n      this._scrollY = y;\r\n      return;\r\n    }\r\n\r\n    // Get the visible content origin.\r\n    let contentX = this.headerWidth;\r\n    let contentY = this.headerHeight;\r\n\r\n    // Get the visible content dimensions.\r\n    let contentWidth = width - contentX;\r\n    let contentHeight = height - contentY;\r\n\r\n    // Bail early if there is no content to draw.\r\n    if (contentWidth <= 0 && contentHeight <= 0) {\r\n      this._scrollX = x;\r\n      this._scrollY = y;\r\n      return;\r\n    }\r\n\r\n    // Compute the area which needs painting for the `dx` scroll.\r\n    let dxArea = 0;\r\n    if (dx !== 0 && contentWidth > 0) {\r\n      if (Math.abs(dx) >= contentWidth) {\r\n        dxArea = contentWidth * height;\r\n      } else {\r\n        dxArea = Math.abs(dx) * height;\r\n      }\r\n    }\r\n\r\n    // Compute the area which needs painting for the `dy` scroll.\r\n    let dyArea = 0;\r\n    if (dy !== 0 && contentHeight > 0) {\r\n      if (Math.abs(dy) >= contentHeight) {\r\n        dyArea = width * contentHeight;\r\n      } else {\r\n        dyArea = width * Math.abs(dy);\r\n      }\r\n    }\r\n\r\n    // If the area sum is larger than the total, paint everything.\r\n    if ((dxArea + dyArea) >= (width * height)) {\r\n      this._scrollX = x;\r\n      this._scrollY = y;\r\n      this.paintContent(0, 0, width, height);\r\n      this._paintOverlay();\r\n      return;\r\n    }\r\n\r\n    // Update the internal Y scroll position.\r\n    this._scrollY = y;\r\n\r\n    // Scroll the Y axis if needed. If the scroll distance exceeds\r\n    // the visible height, paint everything. Otherwise, blit the\r\n    // valid content and paint the dirty region.\r\n    if (dy !== 0 && contentHeight > 0) {\r\n      if (Math.abs(dy) >= contentHeight) {\r\n        this.paintContent(0, contentY, width, contentHeight);\r\n      } else {\r\n        let x = 0;\r\n        let y = dy < 0 ? contentY : contentY + dy;\r\n        let w = width;\r\n        let h = contentHeight - Math.abs(dy);\r\n        this._blitContent(this._canvas, x, y, w, h, x, y - dy);\r\n        this.paintContent(0, dy < 0 ? contentY : height - dy, width, Math.abs(dy));\r\n      }\r\n    }\r\n\r\n    // Update the internal X scroll position.\r\n    this._scrollX = x;\r\n\r\n    // Scroll the X axis if needed. If the scroll distance exceeds\r\n    // the visible width, paint everything. Otherwise, blit the\r\n    // valid content and paint the dirty region.\r\n    if (dx !== 0 && contentWidth > 0) {\r\n      if (Math.abs(dx) >= contentWidth) {\r\n        this.paintContent(contentX, 0, contentWidth, height);\r\n      } else {\r\n        let x = dx < 0 ? contentX : contentX + dx;\r\n        let y = 0;\r\n        let w = contentWidth - Math.abs(dx);\r\n        let h = height;\r\n        this._blitContent(this._canvas, x, y, w, h, x - dx, y);\r\n        this.paintContent(dx < 0 ? contentX : width - dx, 0, Math.abs(dx), height);\r\n      }\r\n    }\r\n\r\n    // Paint the overlay.\r\n    this._paintOverlay();\r\n  }\r\n\r\n  /**\r\n   * Blit content into the on-screen grid canvas.\r\n   *\r\n   * The rect should be expressed in viewport coordinates.\r\n   *\r\n   * This automatically accounts for the dpi ratio.\r\n   */\r\n  private _blitContent(source: HTMLCanvasElement, x: number, y: number, w: number, h: number, dx: number, dy: number): void {\r\n    // Scale the blit coordinates by the dpi ratio.\r\n    x *= this._dpiRatio;\r\n    y *= this._dpiRatio;\r\n    w *= this._dpiRatio;\r\n    h *= this._dpiRatio;\r\n    dx *= this._dpiRatio;\r\n    dy *= this._dpiRatio;\r\n\r\n    // Save the current gc state.\r\n    this._canvasGC.save();\r\n\r\n    // Set the transform to the identity matrix.\r\n    this._canvasGC.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    // Draw the specified content.\r\n    this._canvasGC.drawImage(source, x, y, w, h, dx, dy, w, h);\r\n\r\n    // Restore the gc state.\r\n    this._canvasGC.restore();\r\n  }\r\n\r\n  /**\r\n   * Paint the grid content for the given dirty rect.\r\n   *\r\n   * The rect should be expressed in valid viewport coordinates.\r\n   *\r\n   * This is the primary paint entry point. The individual `_draw*`\r\n   * methods should not be invoked directly. This method dispatches\r\n   * to the drawing methods in the correct order.\r\n   */\r\n  protected paintContent(rx: number, ry: number, rw: number, rh: number): void {\r\n    // Scale the canvas and buffer GC for the dpi ratio.\r\n    this._canvasGC.setTransform(this._dpiRatio, 0, 0, this._dpiRatio, 0, 0);\r\n    this._bufferGC.setTransform(this._dpiRatio, 0, 0, this._dpiRatio, 0, 0);\r\n\r\n    // Clear the dirty rect of all content.\r\n    this._canvasGC.clearRect(rx, ry, rw, rh);\r\n\r\n    // Draw the void region.\r\n    this._drawVoidRegion(rx, ry, rw, rh);\r\n\r\n    // Draw the body region.\r\n    this._drawBodyRegion(rx, ry, rw, rh);\r\n\r\n    // Draw the row header region.\r\n    this._drawRowHeaderRegion(rx, ry, rw, rh);\r\n\r\n    // Draw the column header region.\r\n    this._drawColumnHeaderRegion(rx, ry, rw, rh);\r\n\r\n    // Draw the corner header region.\r\n    this.drawCornerHeaderRegion(rx, ry, rw, rh);\r\n  }\r\n\r\n  /**\r\n   * Paint the overlay content for the entire grid.\r\n   *\r\n   * This is the primary overlay paint entry point. The individual\r\n   * `_draw*` methods should not be invoked directly. This method\r\n   * dispatches to the drawing methods in the correct order.\r\n   */\r\n  private _paintOverlay(): void {\r\n    // Scale the overlay GC for the dpi ratio.\r\n    this._overlayGC.setTransform(this._dpiRatio, 0, 0, this._dpiRatio, 0, 0);\r\n\r\n    // Clear the overlay of all content.\r\n    this._overlayGC.clearRect(0, 0, this._overlay.width, this._overlay.height);\r\n\r\n    // Draw the body selections.\r\n    this._drawBodySelections();\r\n\r\n    // Draw the row header selections.\r\n    this._drawRowHeaderSelections();\r\n\r\n    // Draw the column header selections.\r\n    this._drawColumnHeaderSelections();\r\n\r\n    // Draw the cursor.\r\n    this._drawCursor();\r\n\r\n    // Draw the shadows.\r\n    this._drawShadows();\r\n  }\r\n\r\n  /**\r\n   * Draw the void region for the dirty rect.\r\n   */\r\n  private _drawVoidRegion(rx: number, ry: number, rw: number, rh: number): void {\r\n    // Look up the void color.\r\n    let color = this._style.voidColor;\r\n\r\n    // Bail if there is no void color.\r\n    if (!color) {\r\n      return;\r\n    }\r\n\r\n    // Fill the dirty rect with the void color.\r\n    this._canvasGC.fillStyle = color;\r\n    this._canvasGC.fillRect(rx, ry, rw, rh);\r\n  }\r\n\r\n  /**\r\n   * Draw the body region which intersects the dirty rect.\r\n   */\r\n  private _drawBodyRegion(rx: number, ry: number, rw: number, rh: number): void {\r\n    // Get the visible content dimensions.\r\n    let contentW = this._columnSections.length - this._scrollX;\r\n    let contentH = this._rowSections.length - this._scrollY;\r\n\r\n    // Bail if there is no content to draw.\r\n    if (contentW <= 0 || contentH <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Get the visible content origin.\r\n    let contentX = this.headerWidth;\r\n    let contentY = this.headerHeight;\r\n\r\n    // Bail if the dirty rect does not intersect the content area.\r\n    if (rx + rw <= contentX) {\r\n      return;\r\n    }\r\n    if (ry + rh <= contentY) {\r\n      return;\r\n    }\r\n    if (rx >= contentX + contentW) {\r\n      return;\r\n    }\r\n    if (ry >= contentY + contentH) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the geometry.\r\n    let bh = this.bodyHeight;\r\n    let bw = this.bodyWidth;\r\n    let ph = this.pageHeight;\r\n    let pw = this.pageWidth;\r\n\r\n    // Get the upper and lower bounds of the dirty content area.\r\n    let x1 = Math.max(rx, contentX);\r\n    let y1 = Math.max(ry, contentY);\r\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\r\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\r\n\r\n    // Convert the dirty content bounds into cell bounds.\r\n    let r1 = this._rowSections.indexOf(y1 - contentY + this._scrollY);\r\n    let c1 = this._columnSections.indexOf(x1 - contentX + this._scrollX);\r\n    let r2 = this._rowSections.indexOf(y2 - contentY + this._scrollY);\r\n    let c2 = this._columnSections.indexOf(x2 - contentX + this._scrollX);\r\n\r\n    // Fetch the max row and column.\r\n    let maxRow = this._rowSections.count - 1;\r\n    let maxColumn = this._columnSections.count - 1;\r\n\r\n    // Handle a dirty content area larger than the cell count.\r\n    if (r2 < 0) {\r\n      r2 = maxRow;\r\n    }\r\n    if (c2 < 0) {\r\n      c2 = maxColumn;\r\n    }\r\n\r\n    // Convert the cell bounds back to visible coordinates.\r\n    let x = this._columnSections.offsetOf(c1) + contentX - this._scrollX;\r\n    let y = this._rowSections.offsetOf(r1) + contentY - this._scrollY;\r\n\r\n    // Set up the paint region size variables.\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    // Allocate the section sizes arrays.\r\n    let rowSizes = new Array<number>(r2 - r1 + 1);\r\n    let columnSizes = new Array<number>(c2 - c1 + 1);\r\n\r\n    // Get the row sizes for the region.\r\n    for (let j = r1; j <= r2; ++j) {\r\n      let size = this._rowSections.sizeOf(j);\r\n      rowSizes[j - r1] = size;\r\n      height += size;\r\n    }\r\n\r\n    // Get the column sizes for the region.\r\n    for (let i = c1; i <= c2; ++i) {\r\n      let size = this._columnSections.sizeOf(i);\r\n      columnSizes[i - c1] = size;\r\n      width += size;\r\n    }\r\n\r\n    // Adjust the geometry if the last row is streched.\r\n    if (this._stretchLastRow && ph > bh && r2 === maxRow) {\r\n      let dh = this.pageHeight - this.bodyHeight;\r\n      rowSizes[rowSizes.length - 1] += dh;\r\n      height += dh;\r\n      y2 += dh;\r\n    }\r\n\r\n    // Adjust the geometry if the last column is streched.\r\n    if (this._stretchLastColumn && pw > bw && c2 === maxColumn) {\r\n      let dw = this.pageWidth - this.bodyWidth;\r\n      columnSizes[columnSizes.length - 1] += dw;\r\n      width += dw;\r\n      x2 += dw;\r\n    }\r\n\r\n    // Create the paint region object.\r\n    let rgn: Private.PaintRegion = {\r\n      region: 'body',\r\n      xMin: x1, yMin: y1,\r\n      xMax: x2, yMax: y2,\r\n      x, y, width, height,\r\n      row: r1, column: c1,\r\n      rowSizes, columnSizes\r\n    };\r\n\r\n    // Draw the background.\r\n    this._drawBackground(rgn, this._style.backgroundColor);\r\n\r\n    // Draw the row background.\r\n    this._drawRowBackground(rgn, this._style.rowBackgroundColor);\r\n\r\n    // Draw the column background.\r\n    this._drawColumnBackground(rgn, this._style.columnBackgroundColor);\r\n\r\n    // Draw the cell content for the paint region.\r\n    this._drawCells(rgn);\r\n\r\n    // Draw the horizontal grid lines.\r\n    this._drawHorizontalGridLines(rgn,\r\n      this._style.horizontalGridLineColor ||\r\n      this._style.gridLineColor\r\n    );\r\n\r\n    // Draw the vertical grid lines.\r\n    this._drawVerticalGridLines(rgn,\r\n      this._style.verticalGridLineColor ||\r\n      this._style.gridLineColor\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Draw the row header region which intersects the dirty rect.\r\n   */\r\n  private _drawRowHeaderRegion(rx: number, ry: number, rw: number, rh: number): void {\r\n    // Get the visible content dimensions.\r\n    let contentW = this.headerWidth;\r\n    let contentH = this.bodyHeight - this._scrollY;\r\n\r\n    // Bail if there is no content to draw.\r\n    if (contentW <= 0 || contentH <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Get the visible content origin.\r\n    let contentX = 0;\r\n    let contentY = this.headerHeight;\r\n\r\n    // Bail if the dirty rect does not intersect the content area.\r\n    if (rx + rw <= contentX) {\r\n      return;\r\n    }\r\n    if (ry + rh <= contentY) {\r\n      return;\r\n    }\r\n    if (rx >= contentX + contentW) {\r\n      return;\r\n    }\r\n    if (ry >= contentY + contentH) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the geometry.\r\n    let bh = this.bodyHeight;\r\n    let ph = this.pageHeight;\r\n\r\n    // Get the upper and lower bounds of the dirty content area.\r\n    let x1 = rx;\r\n    let y1 = Math.max(ry, contentY);\r\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\r\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\r\n\r\n    // Convert the dirty content bounds into cell bounds.\r\n    let r1 = this._rowSections.indexOf(y1 - contentY + this._scrollY);\r\n    let c1 = this._rowHeaderSections.indexOf(x1);\r\n    let r2 = this._rowSections.indexOf(y2 - contentY + this._scrollY);\r\n    let c2 = this._rowHeaderSections.indexOf(x2);\r\n\r\n    // Fetch max row and column.\r\n    let maxRow = this._rowSections.count - 1;\r\n    let maxColumn = this._rowHeaderSections.count - 1;\r\n\r\n    // Handle a dirty content area larger than the cell count.\r\n    if (r2 < 0) {\r\n      r2 = maxRow;\r\n    }\r\n    if (c2 < 0) {\r\n      c2 = maxColumn;\r\n    }\r\n\r\n    // Convert the cell bounds back to visible coordinates.\r\n    let x = this._rowHeaderSections.offsetOf(c1);\r\n    let y = this._rowSections.offsetOf(r1) + contentY - this._scrollY;\r\n\r\n    // Set up the paint region size variables.\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    // Allocate the section sizes arrays.\r\n    let rowSizes = new Array<number>(r2 - r1 + 1);\r\n    let columnSizes = new Array<number>(c2 - c1 + 1);\r\n\r\n    // Get the row sizes for the region.\r\n    for (let j = r1; j <= r2; ++j) {\r\n      let size = this._rowSections.sizeOf(j);\r\n      rowSizes[j - r1] = size;\r\n      height += size;\r\n    }\r\n\r\n    // Get the column sizes for the region.\r\n    for (let i = c1; i <= c2; ++i) {\r\n      let size = this._rowHeaderSections.sizeOf(i);\r\n      columnSizes[i - c1] = size;\r\n      width += size;\r\n    }\r\n\r\n    // Adjust the geometry if the last row is stretched.\r\n    if (this._stretchLastRow && ph > bh && r2 === maxRow) {\r\n      let dh = this.pageHeight - this.bodyHeight;\r\n      rowSizes[rowSizes.length - 1] += dh;\r\n      height += dh;\r\n      y2 += dh;\r\n    }\r\n\r\n    // Create the paint region object.\r\n    let rgn: Private.PaintRegion = {\r\n      region: 'row-header',\r\n      xMin: x1, yMin: y1,\r\n      xMax: x2, yMax: y2,\r\n      x, y, width, height,\r\n      row: r1, column: c1,\r\n      rowSizes, columnSizes\r\n    };\r\n\r\n    // Draw the background.\r\n    this._drawBackground(rgn, this._style.headerBackgroundColor);\r\n\r\n    // Draw the cell content for the paint region.\r\n    this._drawCells(rgn);\r\n\r\n    // Draw the horizontal grid lines.\r\n    this._drawHorizontalGridLines(rgn,\r\n      this._style.headerHorizontalGridLineColor ||\r\n      this._style.headerGridLineColor\r\n    );\r\n\r\n    // Draw the vertical grid lines.\r\n    this._drawVerticalGridLines(rgn,\r\n      this._style.headerVerticalGridLineColor ||\r\n      this._style.headerGridLineColor\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Draw the column header region which intersects the dirty rect.\r\n   */\r\n  private _drawColumnHeaderRegion(rx: number, ry: number, rw: number, rh: number): void {\r\n    // Get the visible content dimensions.\r\n    let contentW = this.bodyWidth - this._scrollX;\r\n    let contentH = this.headerHeight;\r\n\r\n    // Bail if there is no content to draw.\r\n    if (contentW <= 0 || contentH <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Get the visible content origin.\r\n    let contentX = this.headerWidth;\r\n    let contentY = 0;\r\n\r\n    // Bail if the dirty rect does not intersect the content area.\r\n    if (rx + rw <= contentX) {\r\n      return;\r\n    }\r\n    if (ry + rh <= contentY) {\r\n      return;\r\n    }\r\n    if (rx >= contentX + contentW) {\r\n      return;\r\n    }\r\n    if (ry >= contentY + contentH) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the geometry.\r\n    let bw = this.bodyWidth;\r\n    let pw = this.pageWidth;\r\n\r\n    // Get the upper and lower bounds of the dirty content area.\r\n    let x1 = Math.max(rx, contentX);\r\n    let y1 = ry;\r\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\r\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\r\n\r\n    // Convert the dirty content bounds into cell bounds.\r\n    let r1 = this._columnHeaderSections.indexOf(y1);\r\n    let c1 = this._columnSections.indexOf(x1 - contentX + this._scrollX);\r\n    let r2 = this._columnHeaderSections.indexOf(y2);\r\n    let c2 = this._columnSections.indexOf(x2 - contentX + this._scrollX);\r\n\r\n    // Fetch the max row and column.\r\n    let maxRow = this._columnHeaderSections.count - 1;\r\n    let maxColumn = this._columnSections.count - 1;\r\n\r\n    // Handle a dirty content area larger than the cell count.\r\n    if (r2 < 0) {\r\n      r2 = maxRow;\r\n    }\r\n    if (c2 < 0) {\r\n      c2 = maxColumn;\r\n    }\r\n\r\n    // Convert the cell bounds back to visible coordinates.\r\n    let x = this._columnSections.offsetOf(c1) + contentX - this._scrollX;\r\n    let y = this._columnHeaderSections.offsetOf(r1);\r\n\r\n    // Set up the paint region size variables.\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    // Allocate the section sizes arrays.\r\n    let rowSizes = new Array<number>(r2 - r1 + 1);\r\n    let columnSizes = new Array<number>(c2 - c1 + 1);\r\n\r\n    // Get the row sizes for the region.\r\n    for (let j = r1; j <= r2; ++j) {\r\n      let size = this._columnHeaderSections.sizeOf(j);\r\n      rowSizes[j - r1] = size;\r\n      height += size;\r\n    }\r\n\r\n    // Get the column sizes for the region.\r\n    for (let i = c1; i <= c2; ++i) {\r\n      let size = this._columnSections.sizeOf(i);\r\n      columnSizes[i - c1] = size;\r\n      width += size;\r\n    }\r\n\r\n    // Adjust the geometry if the last column is stretched.\r\n    if (this._stretchLastColumn && pw > bw && c2 === maxColumn) {\r\n      let dw = this.pageWidth - this.bodyWidth;\r\n      columnSizes[columnSizes.length - 1] += dw;\r\n      width += dw;\r\n      x2 += dw;\r\n    }\r\n\r\n    // Create the paint region object.\r\n    let rgn: Private.PaintRegion = {\r\n      region: 'column-header',\r\n      xMin: x1, yMin: y1,\r\n      xMax: x2, yMax: y2,\r\n      x, y, width, height,\r\n      row: r1, column: c1,\r\n      rowSizes, columnSizes\r\n    };\r\n\r\n    // Draw the background.\r\n    this._drawBackground(rgn, this._style.headerBackgroundColor);\r\n\r\n    // Draw the cell content for the paint region.\r\n    this._drawCells(rgn);\r\n\r\n    // Draw the horizontal grid lines.\r\n    this._drawHorizontalGridLines(rgn,\r\n      this._style.headerHorizontalGridLineColor ||\r\n      this._style.headerGridLineColor\r\n    );\r\n\r\n    // Draw the vertical grid lines.\r\n    this._drawVerticalGridLines(rgn,\r\n      this._style.headerVerticalGridLineColor ||\r\n      this._style.headerGridLineColor\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Draw the corner header region which intersects the dirty rect.\r\n   */\r\n  protected drawCornerHeaderRegion(rx: number, ry: number, rw: number, rh: number): void {\r\n    // Get the visible content dimensions.\r\n    let contentW = this.headerWidth;\r\n    let contentH = this.headerHeight;\r\n\r\n    // Bail if there is no content to draw.\r\n    if (contentW <= 0 || contentH <= 0) {\r\n      return;\r\n    }\r\n\r\n    // Get the visible content origin.\r\n    let contentX = 0;\r\n    let contentY = 0;\r\n\r\n    // Bail if the dirty rect does not intersect the content area.\r\n    if (rx + rw <= contentX) {\r\n      return;\r\n    }\r\n    if (ry + rh <= contentY) {\r\n      return;\r\n    }\r\n    if (rx >= contentX + contentW) {\r\n      return;\r\n    }\r\n    if (ry >= contentY + contentH) {\r\n      return;\r\n    }\r\n\r\n    // Get the upper and lower bounds of the dirty content area.\r\n    let x1 = rx;\r\n    let y1 = ry;\r\n    let x2 = Math.min(rx + rw - 1, contentX + contentW - 1);\r\n    let y2 = Math.min(ry + rh - 1, contentY + contentH - 1);\r\n\r\n    // Convert the dirty content bounds into cell bounds.\r\n    let r1 = this._columnHeaderSections.indexOf(y1);\r\n    let c1 = this._rowHeaderSections.indexOf(x1);\r\n    let r2 = this._columnHeaderSections.indexOf(y2);\r\n    let c2 = this._rowHeaderSections.indexOf(x2);\r\n\r\n    // Handle a dirty content area larger than the cell count.\r\n    if (r2 < 0) {\r\n      r2 = this._columnHeaderSections.count - 1;\r\n    }\r\n    if (c2 < 0) {\r\n      c2 = this._rowHeaderSections.count - 1;\r\n    }\r\n\r\n    // Convert the cell bounds back to visible coordinates.\r\n    let x = this._rowHeaderSections.offsetOf(c1);\r\n    let y = this._columnHeaderSections.offsetOf(r1);\r\n\r\n    // Set up the paint region size variables.\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    // Allocate the section sizes arrays.\r\n    let rowSizes = new Array<number>(r2 - r1 + 1);\r\n    let columnSizes = new Array<number>(c2 - c1 + 1);\r\n\r\n    // Get the row sizes for the region.\r\n    for (let j = r1; j <= r2; ++j) {\r\n      let size = this._columnHeaderSections.sizeOf(j);\r\n      rowSizes[j - r1] = size;\r\n      height += size;\r\n    }\r\n\r\n    // Get the column sizes for the region.\r\n    for (let i = c1; i <= c2; ++i) {\r\n      let size = this._rowHeaderSections.sizeOf(i);\r\n      columnSizes[i - c1] = size;\r\n      width += size;\r\n    }\r\n\r\n    // Create the paint region object.\r\n    let rgn: Private.PaintRegion = {\r\n      region: 'corner-header',\r\n      xMin: x1, yMin: y1,\r\n      xMax: x2, yMax: y2,\r\n      x, y, width, height,\r\n      row: r1, column: c1,\r\n      rowSizes, columnSizes\r\n    };\r\n\r\n    // Draw the background.\r\n    this._drawBackground(rgn, this._style.headerBackgroundColor);\r\n\r\n    // Draw the cell content for the paint region.\r\n    this._drawCells(rgn);\r\n\r\n    // Draw the horizontal grid lines.\r\n    this._drawHorizontalGridLines(rgn,\r\n      this._style.headerHorizontalGridLineColor ||\r\n      this._style.headerGridLineColor\r\n    );\r\n\r\n    // Draw the vertical grid lines.\r\n    this._drawVerticalGridLines(rgn,\r\n      this._style.headerVerticalGridLineColor ||\r\n      this._style.headerGridLineColor\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Draw the background for the given paint region.\r\n   */\r\n  private _drawBackground(rgn: Private.PaintRegion, color: string | undefined): void {\r\n    // Bail if there is no color to draw.\r\n    if (!color) {\r\n      return;\r\n    }\r\n\r\n    // Unpack the region.\r\n    let { xMin, yMin, xMax, yMax } = rgn;\r\n\r\n    // Fill the region with the specified color.\r\n    this._canvasGC.fillStyle = color;\r\n    this._canvasGC.fillRect(xMin, yMin, xMax - xMin + 1, yMax - yMin + 1);\r\n  }\r\n\r\n  /**\r\n   * Draw the row background for the given paint region.\r\n   */\r\n  private _drawRowBackground(rgn: Private.PaintRegion, colorFn: ((i: number) => string) | undefined): void {\r\n    // Bail if there is no color function.\r\n    if (!colorFn) {\r\n      return;\r\n    }\r\n\r\n    // Compute the X bounds for the row.\r\n    let x1 = Math.max(rgn.xMin, rgn.x);\r\n    let x2 = Math.min(rgn.x + rgn.width - 1, rgn.xMax);\r\n\r\n    // Draw the background for the rows in the region.\r\n    for (let y = rgn.y, j = 0, n = rgn.rowSizes.length; j < n; ++j) {\r\n      // Fetch the size of the row.\r\n      let size = rgn.rowSizes[j];\r\n\r\n      // Skip zero sized rows.\r\n      if (size === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Get the background color for the row.\r\n      let color = colorFn(rgn.row + j);\r\n\r\n      // Fill the row with the background color if needed.\r\n      if (color) {\r\n        let y1 = Math.max(rgn.yMin, y);\r\n        let y2 = Math.min(y + size - 1, rgn.yMax);\r\n        this._canvasGC.fillStyle = color;\r\n        this._canvasGC.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\r\n      }\r\n\r\n      // Increment the running Y coordinate.\r\n      y += size;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw the column background for the given paint region.\r\n   */\r\n  private _drawColumnBackground(rgn: Private.PaintRegion, colorFn: ((i: number) => string) | undefined): void {\r\n    // Bail if there is no color function.\r\n    if (!colorFn) {\r\n      return;\r\n    }\r\n\r\n    // Compute the Y bounds for the column.\r\n    let y1 = Math.max(rgn.yMin, rgn.y);\r\n    let y2 = Math.min(rgn.y + rgn.height - 1, rgn.yMax);\r\n\r\n    // Draw the background for the columns in the region.\r\n    for (let x = rgn.x, i = 0, n = rgn.columnSizes.length; i < n; ++i) {\r\n      // Fetch the size of the column.\r\n      let size = rgn.columnSizes[i];\r\n\r\n      // Skip zero sized columns.\r\n      if (size === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Get the background color for the column.\r\n      let color = colorFn(rgn.column + i);\r\n\r\n      // Fill the column with the background color if needed.\r\n      if (color) {\r\n        let x1 = Math.max(rgn.xMin, x);\r\n        let x2 = Math.min(x + size - 1, rgn.xMax);\r\n        this._canvasGC.fillStyle = color;\r\n        this._canvasGC.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\r\n      }\r\n\r\n      // Increment the running X coordinate.\r\n      x += size;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw the cells for the given paint region.\r\n   */\r\n  private _drawCells(rgn: Private.PaintRegion): void {\r\n    // Bail if there is no data model.\r\n    if (!this._dataModel) {\r\n      return;\r\n    }\r\n\r\n    // Set up the cell config object for rendering.\r\n    let config = {\r\n      x: 0, y: 0, width: 0, height: 0,\r\n      region: rgn.region, row: 0, column: 0,\r\n      value: (null as any), metadata: DataModel.emptyMetadata\r\n    };\r\n\r\n    // Save the buffer gc before wrapping.\r\n    this._bufferGC.save();\r\n\r\n    // Wrap the buffer gc for painting the cells.\r\n    let gc = new GraphicsContext(this._bufferGC);\r\n\r\n    // Compute the actual Y bounds for the cell range.\r\n    let y1 = Math.max(rgn.yMin, rgn.y);\r\n    let y2 = Math.min(rgn.y + rgn.height - 1, rgn.yMax);\r\n\r\n    // Loop over the columns in the region.\r\n    for (let x = rgn.x, i = 0, n = rgn.columnSizes.length; i < n; ++i) {\r\n      // Fetch the size of the column.\r\n      let width = rgn.columnSizes[i];\r\n\r\n      // Skip zero sized columns.\r\n      if (width === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Compute the column index.\r\n      let column = rgn.column + i;\r\n\r\n      // Update the config for the current column.\r\n      config.x = x;\r\n      config.width = width;\r\n      config.column = column;\r\n\r\n      // Clear the buffer rect for the column.\r\n      gc.clearRect(x, rgn.y, width, rgn.height);\r\n\r\n      // Save the GC state.\r\n      gc.save();\r\n\r\n      // Loop over the rows in the column.\r\n      for (let y = rgn.y, j = 0, n = rgn.rowSizes.length; j < n; ++j) {\r\n        // Fetch the size of the row.\r\n        let height = rgn.rowSizes[j];\r\n\r\n        // Skip zero sized rows.\r\n        if (height === 0) {\r\n          continue;\r\n        }\r\n\r\n        // Compute the row index.\r\n        let row = rgn.row + j;\r\n\r\n        // Get the value for the cell.\r\n        let value: any;\r\n        try {\r\n          value = this._dataModel.data(rgn.region, row, column);\r\n        } catch (err) {\r\n          value = undefined;\r\n          console.error(err);\r\n        }\r\n\r\n        // Get the metadata for the cell.\r\n        let metadata: DataModel.Metadata;\r\n        try {\r\n          metadata = this._dataModel.metadata(rgn.region, row, column);\r\n        } catch (err) {\r\n          metadata = DataModel.emptyMetadata;\r\n          console.error(err);\r\n        }\r\n\r\n        // Update the config for the current cell.\r\n        config.y = y;\r\n        config.height = height;\r\n        config.row = row;\r\n        config.value = value;\r\n        config.metadata = metadata;\r\n\r\n        // Get the renderer for the cell.\r\n        let renderer = this._cellRenderers.get(config);\r\n\r\n        // Save the GC state.\r\n        gc.save();\r\n\r\n        // Paint the cell into the off-screen buffer.\r\n        try {\r\n          renderer.paint(gc, config);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n\r\n        // Restore the GC state.\r\n        gc.restore();\r\n\r\n        // Increment the running Y coordinate.\r\n        y += height;\r\n      }\r\n\r\n      // Restore the GC state.\r\n      gc.restore();\r\n\r\n      // Compute the actual X bounds for the column.\r\n      let x1 = Math.max(rgn.xMin, x);\r\n      let x2 = Math.min(x + width - 1, rgn.xMax);\r\n\r\n      // Blit the off-screen buffer column into the on-screen canvas.\r\n      //\r\n      // This is *much* faster than drawing directly into the on-screen\r\n      // canvas with a clip rect on the column. Managed column clipping\r\n      // is required to prevent cell renderers from needing to set up a\r\n      // clip rect for handling horizontal overflow text (slow!).\r\n      this._blitContent(this._buffer, x1, y1, x2 - x1 + 1, y2 - y1 + 1, x1, y1);\r\n\r\n      // Increment the running X coordinate.\r\n      x += width;\r\n    }\r\n\r\n    // Dispose of the wrapped gc.\r\n    gc.dispose();\r\n\r\n    // Restore the final buffer gc state.\r\n    this._bufferGC.restore();\r\n  }\r\n\r\n  /**\r\n   * Draw the horizontal grid lines for the given paint region.\r\n   */\r\n  private _drawHorizontalGridLines(rgn: Private.PaintRegion, color: string | undefined): void {\r\n    // Bail if there is no color to draw.\r\n    if (!color) {\r\n      return;\r\n    }\r\n\r\n    // Compute the X bounds for the horizontal lines.\r\n    let x1 = Math.max(rgn.xMin, rgn.x);\r\n    let x2 = Math.min(rgn.x + rgn.width, rgn.xMax + 1);\r\n\r\n    // Begin the path for the grid lines.\r\n    this._canvasGC.beginPath();\r\n\r\n    // Set the line width for the grid lines.\r\n    this._canvasGC.lineWidth = 1;\r\n\r\n    // Fetch the geometry.\r\n    let bh = this.bodyHeight;\r\n    let ph = this.pageHeight;\r\n\r\n    // Fetch the number of grid lines to be drawn.\r\n    let n = rgn.rowSizes.length;\r\n\r\n    // Adjust the count down if the last line shouldn't be drawn.\r\n    if (this._stretchLastRow && ph > bh) {\r\n      if (rgn.row + n === this._rowSections.count) {\r\n        n -= 1;\r\n      }\r\n    }\r\n\r\n    // Draw the horizontal grid lines.\r\n    for (let y = rgn.y, j = 0; j < n; ++j) {\r\n      // Fetch the size of the row.\r\n      let size = rgn.rowSizes[j];\r\n\r\n      // Skip zero sized rows.\r\n      if (size === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Compute the Y position of the line.\r\n      let pos = y + size - 1;\r\n\r\n      // Draw the line if it's in range of the dirty rect.\r\n      if (pos >= rgn.yMin && pos <= rgn.yMax) {\r\n        this._canvasGC.moveTo(x1, pos + 0.5);\r\n        this._canvasGC.lineTo(x2, pos + 0.5);\r\n      }\r\n\r\n      // Increment the running Y coordinate.\r\n      y += size;\r\n    }\r\n\r\n    // Stroke the lines with the specified color.\r\n    this._canvasGC.strokeStyle = color;\r\n    this._canvasGC.stroke();\r\n  }\r\n\r\n  /**\r\n   * Draw the vertical grid lines for the given paint region.\r\n   */\r\n  private _drawVerticalGridLines(rgn: Private.PaintRegion, color: string | undefined): void {\r\n    // Bail if there is no color to draw.\r\n    if (!color) {\r\n      return;\r\n    }\r\n\r\n    // Compute the Y bounds for the vertical lines.\r\n    let y1 = Math.max(rgn.yMin, rgn.y);\r\n    let y2 = Math.min(rgn.y + rgn.height, rgn.yMax + 1);\r\n\r\n    // Begin the path for the grid lines\r\n    this._canvasGC.beginPath();\r\n\r\n    // Set the line width for the grid lines.\r\n    this._canvasGC.lineWidth = 1;\r\n\r\n    // Fetch the geometry.\r\n    let bw = this.bodyWidth;\r\n    let pw = this.pageWidth;\r\n\r\n    // Fetch the number of grid lines to be drawn.\r\n    let n = rgn.columnSizes.length;\r\n\r\n    // Adjust the count down if the last line shouldn't be drawn.\r\n    if (this._stretchLastColumn && pw > bw) {\r\n      if (rgn.column + n === this._columnSections.count) {\r\n        n -= 1;\r\n      }\r\n    }\r\n\r\n    // Draw the vertical grid lines.\r\n    for (let x = rgn.x, i = 0; i < n; ++i) {\r\n      // Fetch the size of the column.\r\n      let size = rgn.columnSizes[i];\r\n\r\n      // Skip zero sized columns.\r\n      if (size === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Compute the X position of the line.\r\n      let pos = x + size - 1;\r\n\r\n      // Draw the line if it's in range of the dirty rect.\r\n      if (pos >= rgn.xMin && pos <= rgn.xMax) {\r\n        this._canvasGC.moveTo(pos + 0.5, y1);\r\n        this._canvasGC.lineTo(pos + 0.5, y2);\r\n      }\r\n\r\n      // Increment the running X coordinate.\r\n      x += size;\r\n    }\r\n\r\n    // Stroke the lines with the specified color.\r\n    this._canvasGC.strokeStyle = color;\r\n    this._canvasGC.stroke();\r\n  }\r\n\r\n  /**\r\n   * Draw the body selections for the data grid.\r\n   */\r\n  private _drawBodySelections(): void {\r\n    // Fetch the selection model.\r\n    let model = this._selectionModel;\r\n\r\n    // Bail early if there are no selections.\r\n    if (!model || model.isEmpty) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection colors.\r\n    let fill = this._style.selectionFillColor;\r\n    let stroke = this._style.selectionBorderColor;\r\n\r\n    // Bail early if there is nothing to draw.\r\n    if (!fill && !stroke) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the scroll geometry.\r\n    let sx = this._scrollX;\r\n    let sy = this._scrollY;\r\n\r\n    // Get the first visible cell of the grid.\r\n    let r1 = this._rowSections.indexOf(sy);\r\n    let c1 = this._columnSections.indexOf(sx);\r\n\r\n    // Bail early if there are no visible cells.\r\n    if (r1 < 0 || c1 < 0) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the extra geometry.\r\n    let bw = this.bodyWidth;\r\n    let bh = this.bodyHeight;\r\n    let pw = this.pageWidth;\r\n    let ph = this.pageHeight;\r\n    let hw = this.headerWidth;\r\n    let hh = this.headerHeight;\r\n\r\n    // Get the last visible cell of the grid.\r\n    let r2 = this._rowSections.indexOf(sy + ph);\r\n    let c2 = this._columnSections.indexOf(sx + pw);\r\n\r\n    // Fetch the max row and column.\r\n    let maxRow = this._rowSections.count - 1;\r\n    let maxColumn = this._columnSections.count - 1;\r\n\r\n    // Clamp the last cell if the void space is visible.\r\n    r2 = r2 < 0 ? maxRow : r2;\r\n    c2 = c2 < 0 ? maxColumn : c2;\r\n\r\n    // Fetch the overlay gc.\r\n    let gc = this._overlayGC;\r\n\r\n    // Save the gc state.\r\n    gc.save();\r\n\r\n    // Set up the body clipping rect.\r\n    gc.beginPath();\r\n    gc.rect(hw, hh, pw, ph);\r\n    gc.clip();\r\n\r\n    // Set up the gc style.\r\n    if (fill) {\r\n      gc.fillStyle = fill;\r\n    }\r\n    if (stroke) {\r\n      gc.strokeStyle = stroke;\r\n      gc.lineWidth = 1;\r\n    }\r\n\r\n    // Iterate over the selections.\r\n    let it = model.selections();\r\n    let s: SelectionModel.Selection | undefined;\r\n    while ((s = it.next()) !== undefined) {\r\n      // Skip the section if it's not visible.\r\n      if (s.r1 < r1 && s.r2 < r1) {\r\n        continue;\r\n      }\r\n      if (s.r1 > r2 && s.r2 > r2) {\r\n        continue\r\n      }\r\n      if (s.c1 < c1 && s.c2 < c1) {\r\n        continue;\r\n      }\r\n      if (s.c1 > c2 && s.c2 > c2) {\r\n        continue\r\n      }\r\n\r\n      // Clamp the cell to the model bounds.\r\n      let sr1 = Math.max(0, Math.min(s.r1, maxRow));\r\n      let sc1 = Math.max(0, Math.min(s.c1, maxColumn));\r\n      let sr2 = Math.max(0, Math.min(s.r2, maxRow));\r\n      let sc2 = Math.max(0, Math.min(s.c2, maxColumn));\r\n\r\n      // Swap index order if needed.\r\n      let tmp: number;\r\n      if (sr1 > sr2) {\r\n        tmp = sr1;\r\n        sr1 = sr2;\r\n        sr2 = tmp;\r\n      }\r\n      if (sc1 > sc2) {\r\n        tmp = sc1;\r\n        sc1 = sc2;\r\n        sc2 = tmp;\r\n      }\r\n\r\n      // Convert to pixel coordinates.\r\n      let x1 = this._columnSections.offsetOf(sc1) - sx + hw;\r\n      let y1 = this._rowSections.offsetOf(sr1) - sy + hh;\r\n      let x2 = this._columnSections.extentOf(sc2) - sx + hw;\r\n      let y2 = this._rowSections.extentOf(sr2) - sy + hh;\r\n\r\n      // Adjust the trailing X coordinate for column stretch.\r\n      if (this._stretchLastColumn && pw > bw && sc2 === maxColumn) {\r\n        x2 = hw + pw - 1;\r\n      }\r\n\r\n      // Adjust the trailing Y coordinate for row stretch.\r\n      if (this._stretchLastRow && ph > bh && sr2 === maxRow) {\r\n        y2 = hh + ph - 1;\r\n      }\r\n\r\n      // Clamp the bounds to just outside of the clipping rect.\r\n      x1 = Math.max(hw - 1, x1);\r\n      y1 = Math.max(hh - 1, y1);\r\n      x2 = Math.min(hw + pw + 1, x2);\r\n      y2 = Math.min(hh + ph + 1, y2);\r\n\r\n      // Skip zero sized ranges.\r\n      if (x2 < x1 || y2 < y1) {\r\n        continue;\r\n      }\r\n\r\n      // Fill the rect if needed.\r\n      if (fill) {\r\n        gc.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\r\n      }\r\n\r\n      // Stroke the rect if needed.\r\n      if (stroke) {\r\n        gc.strokeRect(x1 - .5, y1 - .5, x2 - x1 + 1, y2 - y1 + 1);\r\n      }\r\n    }\r\n\r\n    // Restore the gc state.\r\n    gc.restore();\r\n  }\r\n\r\n  /**\r\n   * Draw the row header selections for the data grid.\r\n   */\r\n  private _drawRowHeaderSelections(): void {\r\n    // Fetch the selection model.\r\n    let model = this._selectionModel;\r\n\r\n    // Bail early if there are no selections or if the selectionMode is the entire column.\r\n    if (!model || model.isEmpty || model.selectionMode == 'column') {\r\n      return;\r\n    }\r\n\r\n    // Bail early if the row headers are not visible.\r\n    if (this.headerWidth === 0 || this.pageHeight === 0) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection colors.\r\n    let fill = this._style.headerSelectionFillColor;\r\n    let stroke = this._style.headerSelectionBorderColor;\r\n\r\n    // Bail early if there is nothing to draw.\r\n    if (!fill && !stroke) {\r\n      return;\r\n    }\r\n\r\n    // Fetch common geometry.\r\n    let sy = this._scrollY;\r\n    let bh = this.bodyHeight;\r\n    let ph = this.pageHeight;\r\n    let hw = this.headerWidth;\r\n    let hh = this.headerHeight;\r\n    let rs = this._rowSections;\r\n\r\n    // Fetch the overlay gc.\r\n    let gc = this._overlayGC;\r\n\r\n    // Save the gc state.\r\n    gc.save();\r\n\r\n    // Set up the header clipping rect.\r\n    gc.beginPath();\r\n    gc.rect(0, hh, hw, ph);\r\n    gc.clip();\r\n\r\n    // Set up the gc style.\r\n    if (fill) {\r\n      gc.fillStyle = fill;\r\n    }\r\n    if (stroke) {\r\n      gc.strokeStyle = stroke;\r\n      gc.lineWidth = 1;\r\n    }\r\n\r\n    // Fetch the max row.\r\n    let maxRow = rs.count - 1;\r\n\r\n    // Fetch the visible rows.\r\n    let r1 = rs.indexOf(sy);\r\n    let r2 = rs.indexOf(sy + ph - 1);\r\n    r2 = r2 < 0 ? maxRow : r2;\r\n\r\n    // Iterate over the visible rows.\r\n    for (let j = r1; j <= r2; ++j) {\r\n      // Skip rows which aren't selected.\r\n      if (!model.isRowSelected(j)) {\r\n        continue;\r\n      }\r\n\r\n      // Get the dimensions of the row.\r\n      let y = rs.offsetOf(j) - sy + hh;\r\n      let h = rs.sizeOf(j);\r\n\r\n      // Adjust the height for row stretch.\r\n      if (this._stretchLastRow && ph > bh && j === maxRow) {\r\n        h = hh + ph - y;\r\n      }\r\n\r\n      // Skip zero sized rows.\r\n      if (h === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Fill the rect if needed.\r\n      if (fill) {\r\n        gc.fillRect(0, y, hw, h);\r\n      }\r\n\r\n      // Draw the border if needed.\r\n      if (stroke) {\r\n        gc.beginPath();\r\n        gc.moveTo(hw - .5, y - 1);\r\n        gc.lineTo(hw - .5, y + h);\r\n        gc.stroke();\r\n      }\r\n    }\r\n\r\n    // Restore the gc state.\r\n    gc.restore();\r\n  }\r\n\r\n  /**\r\n   * Draw the column header selections for the data grid.\r\n   */\r\n  private _drawColumnHeaderSelections(): void {\r\n    // Fetch the selection model.\r\n    let model = this._selectionModel;\r\n\r\n    // Bail early if there are no selections or if the selectionMode is the entire row\r\n    if (!model || model.isEmpty || model.selectionMode == 'row') {\r\n      return;\r\n    }\r\n\r\n    // Bail early if the column headers are not visible.\r\n    if (this.headerHeight === 0 || this.pageWidth === 0) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the selection colors.\r\n    let fill = this._style.headerSelectionFillColor;\r\n    let stroke = this._style.headerSelectionBorderColor;\r\n\r\n    // Bail early if there is nothing to draw.\r\n    if (!fill && !stroke) {\r\n      return;\r\n    }\r\n\r\n    // Fetch common geometry.\r\n    let sx = this._scrollX;\r\n    let bw = this.bodyWidth;\r\n    let pw = this.pageWidth;\r\n    let hw = this.headerWidth;\r\n    let hh = this.headerHeight;\r\n    let cs = this._columnSections;\r\n\r\n    // Fetch the overlay gc.\r\n    let gc = this._overlayGC;\r\n\r\n    // Save the gc state.\r\n    gc.save();\r\n\r\n    // Set up the header clipping rect.\r\n    gc.beginPath();\r\n    gc.rect(hw, 0, pw, hh);\r\n    gc.clip();\r\n\r\n    // Set up the gc style.\r\n    if (fill) {\r\n      gc.fillStyle = fill;\r\n    }\r\n    if (stroke) {\r\n      gc.strokeStyle = stroke;\r\n      gc.lineWidth = 1;\r\n    }\r\n\r\n    // Fetch the max column.\r\n    let maxCol = cs.count - 1;\r\n\r\n    // Fetch the visible columns.\r\n    let c1 = cs.indexOf(sx);\r\n    let c2 = cs.indexOf(sx + pw - 1);\r\n    c2 = c2 < 0 ? maxCol : c2;\r\n\r\n    // Iterate over the visible columns.\r\n    for (let i = c1; i <= c2; ++i) {\r\n      // Skip columns which aren't selected.\r\n      if (!model.isColumnSelected(i)) {\r\n        continue;\r\n      }\r\n\r\n      // Get the dimensions of the column.\r\n      let x = cs.offsetOf(i) - sx + hw;\r\n      let w = cs.sizeOf(i);\r\n\r\n      // Adjust the width for column stretch.\r\n      if (this._stretchLastColumn && pw > bw && i === maxCol) {\r\n        w = hw + pw - x;\r\n      }\r\n\r\n      // Skip zero sized columns.\r\n      if (w === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Fill the rect if needed.\r\n      if (fill) {\r\n        gc.fillRect(x, 0, w, hh);\r\n      }\r\n\r\n      // Draw the border if needed.\r\n      if (stroke) {\r\n        gc.beginPath();\r\n        gc.moveTo(x - 1, hh - .5);\r\n        gc.lineTo(x + w, hh - .5);\r\n        gc.stroke();\r\n      }\r\n    }\r\n\r\n    // Restore the gc state.\r\n    gc.restore();\r\n  }\r\n\r\n  /**\r\n   * Draw the overlay cursor for the data grid.\r\n   */\r\n  private _drawCursor(): void {\r\n    // Fetch the selection model.\r\n    let model = this._selectionModel;\r\n\r\n    // Bail early if there is no cursor.\r\n    if (!model || model.isEmpty || model.selectionMode !== 'cell') {\r\n      return;\r\n    }\r\n\r\n    // Extract the style information.\r\n    let fill = this._style.cursorFillColor;\r\n    let stroke = this._style.cursorBorderColor;\r\n\r\n    // Bail early if there is nothing to draw.\r\n    if (!fill && !stroke) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the cursor location.\r\n    let row = model.cursorRow;\r\n    let column = model.cursorColumn;\r\n\r\n    // Fetch the max row and column.\r\n    let maxRow = this._rowSections.count - 1;\r\n    let maxColumn = this._columnSections.count - 1;\r\n\r\n    // Bail early if the cursor is out of bounds.\r\n    if (row < 0 || row > maxRow) {\r\n      return;\r\n    }\r\n    if (column < 0 || column > maxColumn) {\r\n      return;\r\n    }\r\n\r\n    // Fetch geometry.\r\n    let sx = this._scrollX;\r\n    let sy = this._scrollY;\r\n    let bw = this.bodyWidth;\r\n    let bh = this.bodyHeight;\r\n    let pw = this.pageWidth;\r\n    let ph = this.pageHeight;\r\n    let hw = this.headerWidth;\r\n    let hh = this.headerHeight;\r\n    let vw = this._viewportWidth;\r\n    let vh = this._viewportHeight;\r\n\r\n    // Get the cursor bounds in viewport coordinates.\r\n    let x1 = this._columnSections.offsetOf(column) - sx + hw;\r\n    let x2 = this._columnSections.extentOf(column) - sx + hw;\r\n    let y1 = this._rowSections.offsetOf(row) - sy + hh;\r\n    let y2 = this._rowSections.extentOf(row) - sy + hh;\r\n\r\n    // Adjust the trailing X coordinate for column stretch.\r\n    if (this._stretchLastColumn && pw > bw && column === maxColumn) {\r\n      x2 = vw - 1;\r\n    }\r\n\r\n    // Adjust the trailing Y coordinate for row stretch.\r\n    if (this._stretchLastRow && ph > bh && row === maxRow) {\r\n      y2 = vh - 1;\r\n    }\r\n\r\n    // Skip zero sized cursors.\r\n    if (x2 < x1 || y2 < y1) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if the cursor is off the screen.\r\n    if ((x1 - 1) >= vw || (y1 - 1) >= vh || (x2 + 1) < hw || (y2 + 1) < hh) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the overlay gc.\r\n    let gc = this._overlayGC;\r\n\r\n    // Save the gc state.\r\n    gc.save();\r\n\r\n    // Set up the body clipping rect.\r\n    gc.beginPath();\r\n    gc.rect(hw, hh, pw, ph);\r\n    gc.clip();\r\n\r\n    // Clear any existing overlay content.\r\n    gc.clearRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\r\n\r\n    // Fill the cursor rect if needed.\r\n    if (fill) {\r\n      // Set up the fill style.\r\n      gc.fillStyle = fill;\r\n\r\n      // Fill the cursor rect.\r\n      gc.fillRect(x1, y1, x2 - x1 + 1, y2 - y1 + 1)\r\n    }\r\n\r\n    // Stroke the cursor border if needed.\r\n    if (stroke) {\r\n      // Set up the stroke style.\r\n      gc.strokeStyle = stroke;\r\n      gc.lineWidth = 2;\r\n\r\n      // Stroke the cursor rect.\r\n      gc.strokeRect(x1, y1, x2 - x1, y2 - y1);\r\n    }\r\n\r\n    // Restore the gc state.\r\n    gc.restore();\r\n  }\r\n\r\n  /**\r\n   * Draw the overlay shadows for the data grid.\r\n   */\r\n  private _drawShadows(): void {\r\n    // Fetch the scroll shadow from the style.\r\n    let shadow = this._style.scrollShadow;\r\n\r\n    // Bail early if there is no shadow to draw.\r\n    if (!shadow) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the scroll position.\r\n    let sx = this._scrollX;\r\n    let sy = this._scrollY;\r\n\r\n    // Fetch maximum scroll position.\r\n    let sxMax = this.maxScrollX;\r\n    let syMax = this.maxScrollY;\r\n\r\n    // Fetch the header width and height.\r\n    let hw = this.headerWidth;\r\n    let hh = this.headerHeight;\r\n\r\n    // Fetch the page width and height.\r\n    let pw = this.pageWidth;\r\n    let ph = this.pageHeight;\r\n\r\n    // Fetch the viewport width and height.\r\n    let vw = this._viewportWidth;\r\n    let vh = this._viewportHeight;\r\n\r\n    // Fetch the body width and height.\r\n    let bw = this.bodyWidth;\r\n    let bh = this.bodyHeight;\r\n\r\n    // Adjust the body size for row and column stretch.\r\n    if (this._stretchLastRow && ph > bh) {\r\n      bh = ph;\r\n    }\r\n    if (this._stretchLastColumn && pw > bw) {\r\n      bw = pw;\r\n    }\r\n\r\n    // Fetch the gc object.\r\n    let gc = this._overlayGC;\r\n\r\n    // Save the gc state.\r\n    gc.save();\r\n\r\n    // Draw the column header shadow if needed.\r\n    if (sy > 0) {\r\n      // Set up the gradient coordinates.\r\n      let x0 = 0;\r\n      let y0 = hh;\r\n      let x1 = 0;\r\n      let y1 = y0 + shadow.size;\r\n\r\n      // Create the gradient object.\r\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\r\n\r\n      // Set the gradient stops.\r\n      grad.addColorStop(0, shadow.color1);\r\n      grad.addColorStop(0.5, shadow.color2);\r\n      grad.addColorStop(1, shadow.color3);\r\n\r\n      // Set up the rect coordinates.\r\n      let x = 0;\r\n      let y = hh;\r\n      let w = hw + Math.min(pw, bw - sx);\r\n      let h = shadow.size;\r\n\r\n      // Fill the shadow rect with the fill style.\r\n      gc.fillStyle = grad;\r\n      gc.fillRect(x, y, w, h);\r\n    }\r\n\r\n    // Draw the row header shadow if needed.\r\n    if (sx > 0) {\r\n      // Set up the gradient coordinates.\r\n      let x0 = hw;\r\n      let y0 = 0;\r\n      let x1 = x0 + shadow.size;\r\n      let y1 = 0;\r\n\r\n      // Create the gradient object.\r\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\r\n\r\n      // Set the gradient stops.\r\n      grad.addColorStop(0, shadow.color1);\r\n      grad.addColorStop(0.5, shadow.color2);\r\n      grad.addColorStop(1, shadow.color3);\r\n\r\n      // Set up the rect coordinates.\r\n      let x = hw;\r\n      let y = 0;\r\n      let w = shadow.size;\r\n      let h = hh + Math.min(ph, bh - sy);\r\n\r\n      // Fill the shadow rect with the fill style.\r\n      gc.fillStyle = grad;\r\n      gc.fillRect(x, y, w, h);\r\n    }\r\n\r\n    // Draw the column footer shadow if needed.\r\n    if (sy < syMax) {\r\n      // Set up the gradient coordinates.\r\n      let x0 = 0;\r\n      let y0 = vh;\r\n      let x1 = 0;\r\n      let y1 = vh - shadow.size;\r\n\r\n      // Create the gradient object.\r\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\r\n\r\n      // Set the gradient stops.\r\n      grad.addColorStop(0, shadow.color1);\r\n      grad.addColorStop(0.5, shadow.color2);\r\n      grad.addColorStop(1, shadow.color3);\r\n\r\n      // Set up the rect coordinates.\r\n      let x = 0;\r\n      let y = vh - shadow.size;\r\n      let w = hw + Math.min(pw, bw - sx);\r\n      let h = shadow.size;\r\n\r\n      // Fill the shadow rect with the fill style.\r\n      gc.fillStyle = grad;\r\n      gc.fillRect(x, y, w, h);\r\n    }\r\n\r\n    // Draw the row footer shadow if needed.\r\n    if (sx < sxMax) {\r\n      // Set up the gradient coordinates.\r\n      let x0 = vw;\r\n      let y0 = 0;\r\n      let x1 = vw - shadow.size;\r\n      let y1 = 0;\r\n\r\n      // Create the gradient object.\r\n      let grad = gc.createLinearGradient(x0, y0, x1, y1);\r\n\r\n      // Set the gradient stops.\r\n      grad.addColorStop(0, shadow.color1);\r\n      grad.addColorStop(0.5, shadow.color2);\r\n      grad.addColorStop(1, shadow.color3);\r\n\r\n      // Set up the rect coordinates.\r\n      let x = vw - shadow.size;\r\n      let y = 0;\r\n      let w = shadow.size;\r\n      let h = hh + Math.min(ph, bh - sy);\r\n\r\n      // Fill the shadow rect with the fill style.\r\n      gc.fillStyle = grad;\r\n      gc.fillRect(x, y, w, h);\r\n    }\r\n\r\n    // Restore the gc state.\r\n    gc.restore();\r\n  }\r\n\r\n  private _viewport: Widget;\r\n  private _vScrollBar: ScrollBar;\r\n  private _hScrollBar: ScrollBar;\r\n  private _scrollCorner: Widget;\r\n\r\n  private _scrollX = 0;\r\n  private _scrollY = 0;\r\n  private _viewportWidth = 0;\r\n  private _viewportHeight = 0;\r\n\r\n  private _mousedown = false;\r\n  private _keyHandler: DataGrid.IKeyHandler | null = null;\r\n  private _mouseHandler: DataGrid.IMouseHandler | null = null;\r\n\r\n  private _vScrollBarMinWidth = 0;\r\n  private _hScrollBarMinHeight = 0;\r\n  private _dpiRatio = Math.ceil(window.devicePixelRatio);\r\n\r\n  private _canvas: HTMLCanvasElement;\r\n  private _buffer: HTMLCanvasElement;\r\n  private _overlay: HTMLCanvasElement;\r\n  private _canvasGC: CanvasRenderingContext2D;\r\n  private _bufferGC: CanvasRenderingContext2D;\r\n  private _overlayGC: CanvasRenderingContext2D;\r\n\r\n  private _rowSections: SectionList;\r\n  private _columnSections: SectionList;\r\n  private _rowHeaderSections: SectionList;\r\n  private _columnHeaderSections: SectionList;\r\n\r\n  private _dataModel: DataModel | null = null;\r\n  private _selectionModel: SelectionModel | null = null;\r\n\r\n  private _stretchLastRow: boolean;\r\n  private _stretchLastColumn: boolean;\r\n\r\n  private _style: DataGrid.Style;\r\n  private _cellRenderers: RendererMap;\r\n  private _copyConfig: DataGrid.CopyConfig;\r\n  private _headerVisibility: DataGrid.HeaderVisibility;\r\n  private _editorController: ICellEditorController | null;\r\n  private _editingEnabled: boolean = false;\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `DataGrid` class statics.\r\n */\r\nexport\r\nnamespace DataGrid {\r\n  /**\r\n   * An object which defines the style for a data grid.\r\n   *\r\n   * #### Notes\r\n   * All style colors support the full CSS color syntax.\r\n   */\r\n  export\r\n  type Style = {\r\n    /**\r\n     * The void color for the data grid.\r\n     *\r\n     * This is the base fill color for the entire data grid.\r\n     */\r\n    readonly voidColor?: string;\r\n\r\n    /**\r\n     * The background color for the body cells.\r\n     *\r\n     * This color is layered on top of the `voidColor`.\r\n     */\r\n    readonly backgroundColor?: string;\r\n\r\n    /**\r\n     * A function which returns the background color for a row.\r\n     *\r\n     * This color is layered on top of the `backgroundColor` and can\r\n     * be used to implement \"zebra striping\" of the grid rows.\r\n     */\r\n    readonly rowBackgroundColor?: (index: number) => string;\r\n\r\n    /**\r\n     * A function which returns the background color for a column.\r\n     *\r\n     * This color is layered on top of the `backgroundColor` and can\r\n     * be used to implement \"zebra striping\" of the grid columns.\r\n     */\r\n    readonly columnBackgroundColor?: (index: number) => string;\r\n\r\n    /**\r\n     * The color for the grid lines of the body cells.\r\n     *\r\n     * The grid lines are draw on top of the cell contents.\r\n     */\r\n    readonly gridLineColor?: string;\r\n\r\n    /**\r\n     * The color for the vertical grid lines of the body cells.\r\n     *\r\n     * This overrides the `gridLineColor` option.\r\n     */\r\n    readonly verticalGridLineColor?: string;\r\n\r\n    /**\r\n     * The color for the horizontal grid lines of the body cells.\r\n     *\r\n     * This overrides the `gridLineColor` option.\r\n     */\r\n    readonly horizontalGridLineColor?: string;\r\n\r\n    /**\r\n     * The background color for the header cells.\r\n     *\r\n     * This color is layered on top of the `voidColor`.\r\n     */\r\n    readonly headerBackgroundColor?: string;\r\n\r\n    /**\r\n     * The color for the grid lines of the header cells.\r\n     *\r\n     * The grid lines are draw on top of the cell contents.\r\n     */\r\n    readonly headerGridLineColor?: string;\r\n\r\n    /**\r\n     * The color for the vertical grid lines of the header cells.\r\n     *\r\n     * This overrides the `headerGridLineColor` option.\r\n     */\r\n    readonly headerVerticalGridLineColor?: string;\r\n\r\n    /**\r\n     * The color for the horizontal grid lines of the header cells.\r\n     *\r\n     * This overrides the `headerGridLineColor` option.\r\n     */\r\n    readonly headerHorizontalGridLineColor?: string;\r\n\r\n    /**\r\n     * The fill color for a selection.\r\n     */\r\n    readonly selectionFillColor?: string;\r\n\r\n    /**\r\n     * The border color for a selection.\r\n     */\r\n    readonly selectionBorderColor?: string;\r\n\r\n    /**\r\n     * The fill color for the cursor.\r\n     */\r\n    readonly cursorFillColor?: string;\r\n\r\n    /**\r\n     * The border color for the cursor.\r\n     */\r\n    readonly cursorBorderColor?: string;\r\n\r\n    /**\r\n     * The fill color for a header selection.\r\n     */\r\n    readonly headerSelectionFillColor?: string;\r\n\r\n    /**\r\n     * The border color for a header selection.\r\n     */\r\n    readonly headerSelectionBorderColor?: string;\r\n\r\n    /**\r\n     * The drop shadow effect when the grid is scrolled.\r\n     */\r\n    readonly scrollShadow?: {\r\n      /**\r\n       * The size of the shadow, in pixels.\r\n       */\r\n      readonly size: number;\r\n\r\n      /**\r\n       * The first color stop for the shadow.\r\n       */\r\n      readonly color1: string;\r\n\r\n      /**\r\n       * The second color stop for the shadow.\r\n       */\r\n      readonly color2: string;\r\n\r\n      /**\r\n       * The third color stop for the shadow.\r\n       */\r\n      readonly color3: string;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * An object which defines the default sizes for a data grid.\r\n   */\r\n  export\r\n  type DefaultSizes = {\r\n    /**\r\n     * The default height of a row.\r\n     */\r\n    readonly rowHeight: number;\r\n\r\n    /**\r\n     * The default width of a column.\r\n     */\r\n    readonly columnWidth: number;\r\n\r\n    /**\r\n     * The default width of a row header.\r\n     */\r\n    readonly rowHeaderWidth: number;\r\n\r\n    /**\r\n     * The default height of a column header.\r\n     */\r\n    readonly columnHeaderHeight: number;\r\n  };\r\n\r\n  /**\r\n   * An object which defines the minimum sizes for a data grid.\r\n   */\r\n  export\r\n  type MinimumSizes = {\r\n    /**\r\n     * The minimum height of a row.\r\n     */\r\n    readonly rowHeight: number;\r\n\r\n    /**\r\n     * The minimum width of a column.\r\n     */\r\n    readonly columnWidth: number;\r\n\r\n    /**\r\n     * The minimum width of a row header.\r\n     */\r\n    readonly rowHeaderWidth: number;\r\n\r\n    /**\r\n     * The minimum height of a column header.\r\n     */\r\n    readonly columnHeaderHeight: number;\r\n  };\r\n\r\n  /**\r\n   * A type alias for the supported header visibility modes.\r\n   */\r\n  export\r\n  type HeaderVisibility = 'all' | 'row' | 'column' | 'none';\r\n\r\n  /**\r\n   * A type alias for the arguments to a copy format function.\r\n   */\r\n  export\r\n  type CopyFormatArgs = {\r\n    /**\r\n     * The cell region for the value.\r\n     */\r\n    region: DataModel.CellRegion;\r\n\r\n    /**\r\n     * The row index of the value.\r\n     */\r\n    row: number;\r\n\r\n    /**\r\n     * The column index of the value.\r\n     */\r\n    column: number;\r\n\r\n    /**\r\n     * The value for the cell.\r\n     */\r\n    value: any;\r\n\r\n    /**\r\n     * The metadata for the cell.\r\n     */\r\n    metadata: DataModel.Metadata;\r\n  };\r\n\r\n  /**\r\n   * A type alias for a copy format function.\r\n   */\r\n  export\r\n  type CopyFormatFunc = (args: CopyFormatArgs) => string;\r\n\r\n  /**\r\n   * A type alias for the data grid copy config.\r\n   */\r\n  export\r\n  type CopyConfig = {\r\n    /**\r\n     * The separator to use between values.\r\n     */\r\n    readonly separator: string;\r\n\r\n    /**\r\n     * The headers to included in the copied output.\r\n     */\r\n    readonly headers: 'none' | 'row' | 'column' | 'all';\r\n\r\n    /**\r\n     * The function for formatting the data values.\r\n     */\r\n    readonly format: CopyFormatFunc;\r\n\r\n    /**\r\n     * The cell count threshold for a copy to be considered \"large\".\r\n     */\r\n    readonly warningThreshold: number;\r\n  };\r\n\r\n  /**\r\n   * An options object for initializing a data grid.\r\n   */\r\n  export\r\n  interface IOptions {\r\n    /**\r\n     * The style for the data grid.\r\n     *\r\n     * The default is `DataGrid.defaultStyle`.\r\n     */\r\n    style?: Style;\r\n\r\n    /**\r\n     * The default sizes for the data grid.\r\n     *\r\n     * The default is `DataGrid.defaultSizes`.\r\n     */\r\n    defaultSizes?: DefaultSizes;\r\n\r\n    /**\r\n     * The minimum sizes for the data grid.\r\n     *\r\n     * The default is `DataGrid.minimumSizes`.\r\n     */\r\n    minimumSizes?: MinimumSizes;\r\n\r\n    /**\r\n     * The header visibility for the data grid.\r\n     *\r\n     * The default is `'all'`.\r\n     */\r\n    headerVisibility?: HeaderVisibility;\r\n\r\n    /**\r\n     * The cell renderer map for the data grid.\r\n     *\r\n     * The default is an empty renderer map.\r\n     */\r\n    cellRenderers?: RendererMap;\r\n\r\n    /**\r\n     * The default cell renderer for the data grid.\r\n     *\r\n     * The default is a new `TextRenderer`.\r\n     */\r\n    defaultRenderer?: CellRenderer;\r\n\r\n    /**\r\n     * The copy configuration data for the grid.\r\n     *\r\n     * The default is `DataGrid.defaultCopyConfig`.\r\n     */\r\n    copyConfig?: CopyConfig;\r\n\r\n    /**\r\n     * Whether to stretch the last row of the grid.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    stretchLastRow?: boolean;\r\n\r\n    /**\r\n     * Whether to stretch the last column of the grid.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    stretchLastColumn?: boolean;\r\n  }\r\n\r\n  /**\r\n   * An object which handles keydown events for the data grid.\r\n   */\r\n  export\r\n  interface IKeyHandler extends IDisposable {\r\n    /**\r\n     * Handle the key down event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The keydown event of interest.\r\n     *\r\n     * #### Notes\r\n     * This will not be called if the mouse button is pressed.\r\n     */\r\n    onKeyDown(grid: DataGrid, event: KeyboardEvent): void;\r\n  }\r\n\r\n  /**\r\n   * An object which handles mouse events for the data grid.\r\n   */\r\n  export\r\n  interface IMouseHandler extends IDisposable {\r\n    /**\r\n     * Release any resources acquired during a mouse press.\r\n     *\r\n     * #### Notes\r\n     * This method is called when the mouse should be released\r\n     * independent of a mouseup event, such as an early detach.\r\n     */\r\n    release(): void;\r\n\r\n    /**\r\n     * Handle the mouse hover event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The mouse hover event of interest.\r\n     */\r\n    onMouseHover(grid: DataGrid, event: MouseEvent): void;\r\n\r\n    /**\r\n     * Handle the mouse leave event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The mouse hover event of interest.\r\n     */\r\n    onMouseLeave(grid: DataGrid, event: MouseEvent): void;\r\n\r\n    /**\r\n     * Handle the mouse down event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The mouse down event of interest.\r\n     */\r\n    onMouseDown(grid: DataGrid, event: MouseEvent): void;\r\n\r\n    /**\r\n     * Handle the mouse move event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The mouse move event of interest.\r\n     */\r\n    onMouseMove(grid: DataGrid, event: MouseEvent): void;\r\n\r\n    /**\r\n     * Handle the mouse up event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The mouse up event of interest.\r\n     */\r\n    onMouseUp(grid: DataGrid, event: MouseEvent): void;\r\n\r\n    /**\r\n     * Handle the mouse double click event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The mouse double click event of interest.\r\n     */\r\n    onMouseDoubleClick(grid: DataGrid, event: MouseEvent): void;\r\n\r\n    /**\r\n     * Handle the context menu event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The context menu event of interest.\r\n     */\r\n    onContextMenu(grid: DataGrid, event: MouseEvent): void;\r\n\r\n    /**\r\n     * Handle the wheel event for the data grid.\r\n     *\r\n     * @param grid - The data grid of interest.\r\n     *\r\n     * @param event - The wheel event of interest.\r\n     */\r\n    onWheel(grid: DataGrid, event: WheelEvent): void;\r\n  }\r\n\r\n  /**\r\n   * An object which holds the result of a grid hit test.\r\n   */\r\n  export\r\n  type HitTestResult = {\r\n    /**\r\n     * The region of the data grid that was hit.\r\n     */\r\n    readonly region: DataModel.CellRegion | 'void';\r\n\r\n    /**\r\n     * The row index of the cell that was hit.\r\n     *\r\n     * This is `-1` for the `void` region.\r\n     */\r\n    readonly row: number;\r\n\r\n    /**\r\n     * The column index of the cell that was hit.\r\n     *\r\n     * This is `-1` for the `void` region.\r\n     */\r\n    readonly column: number;\r\n\r\n    /**\r\n     * The X coordinate of the mouse in cell coordinates.\r\n     *\r\n     * This is `-1` for the `void` region.\r\n     */\r\n    readonly x: number;\r\n\r\n    /**\r\n     * The Y coordinate of the mouse in cell coordinates.\r\n     *\r\n     * This is `-1` for the `void` region.\r\n     */\r\n    readonly y: number;\r\n\r\n    /**\r\n     * The width of the cell.\r\n     *\r\n     * This is `-1` for the `void` region.\r\n     */\r\n    readonly width: number;\r\n\r\n    /**\r\n     * The height of the cell.\r\n     *\r\n     * This is `-1` for the `void` region.\r\n     */\r\n    readonly height: number;\r\n  };\r\n\r\n  /**\r\n   * A generic format function for the copy handler.\r\n   *\r\n   * @param args - The format args for the function.\r\n   *\r\n   * @returns The string representation of the value.\r\n   *\r\n   * #### Notes\r\n   * This function uses `String()` to coerce a value to a string.\r\n   */\r\n  export\r\n  function copyFormatGeneric(args: CopyFormatArgs): string {\r\n    if (args.value === null || args.value === undefined) {\r\n      return '';\r\n    }\r\n    return String(args.value);\r\n  }\r\n\r\n  /**\r\n   * The default theme for a data grid.\r\n   */\r\n  export\r\n  const defaultStyle: Style = {\r\n    voidColor: '#F3F3F3',\r\n    backgroundColor: '#FFFFFF',\r\n    gridLineColor: 'rgba(20, 20, 20, 0.15)',\r\n    headerBackgroundColor: '#F3F3F3',\r\n    headerGridLineColor: 'rgba(20, 20, 20, 0.25)',\r\n    selectionFillColor: 'rgba(49, 119, 229, 0.2)',\r\n    selectionBorderColor: 'rgba(0, 107, 247, 1.0)',\r\n    cursorBorderColor: 'rgba(0, 107, 247, 1.0)',\r\n    headerSelectionFillColor: 'rgba(20, 20, 20, 0.1)',\r\n    headerSelectionBorderColor: 'rgba(0, 107, 247, 1.0)',\r\n    scrollShadow: {\r\n      size: 10,\r\n      color1: 'rgba(0, 0, 0, 0.20)',\r\n      color2: 'rgba(0, 0, 0, 0.05)',\r\n      color3: 'rgba(0, 0, 0, 0.00)' }\r\n  };\r\n\r\n  /**\r\n   * The default sizes for a data grid.\r\n   */\r\n  export\r\n  const defaultSizes: DefaultSizes = {\r\n    rowHeight: 20,\r\n    columnWidth: 64,\r\n    rowHeaderWidth: 64,\r\n    columnHeaderHeight: 20\r\n  };\r\n\r\n  /**\r\n   * The default minimum sizes for a data grid.\r\n   */\r\n  export\r\n  const minimumSizes: MinimumSizes = {\r\n    rowHeight: 20,\r\n    columnWidth: 10,\r\n    rowHeaderWidth: 10,\r\n    columnHeaderHeight: 20\r\n  };\r\n\r\n  /**\r\n   * The default copy config for a data grid.\r\n   */\r\n  export\r\n  const defaultCopyConfig: CopyConfig = {\r\n    separator: '\\t',\r\n    format: copyFormatGeneric,\r\n    headers: 'none',\r\n    warningThreshold: 1e6\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A singleton `scroll-request` conflatable message.\r\n   */\r\n  export\r\n  const ScrollRequest = new ConflatableMessage('scroll-request');\r\n\r\n  /**\r\n   * A singleton `overlay-paint-request` conflatable message.\r\n   */\r\n  export\r\n  const OverlayPaintRequest = new ConflatableMessage('overlay-paint-request');\r\n\r\n  /**\r\n   * Create a new zero-sized canvas element.\r\n   */\r\n  export\r\n  function createCanvas(): HTMLCanvasElement {\r\n    let canvas = document.createElement('canvas');\r\n    canvas.width = 0;\r\n    canvas.height = 0;\r\n    return canvas;\r\n  }\r\n\r\n  /**\r\n   * An object which represents a region to be painted.\r\n   */\r\n  export\r\n  type PaintRegion = {\r\n    /**\r\n     * The min X coordinate the of the dirty viewport rect.\r\n     *\r\n     * #### Notes\r\n     * The data grid must not draw outside of this boundary.\r\n     */\r\n    xMin: number;\r\n\r\n    /**\r\n     * The min Y coordinate the of the dirty viewport rect.\r\n     *\r\n     * #### Notes\r\n     * The data grid must not draw outside of this boundary.\r\n     */\r\n    yMin: number;\r\n\r\n    /**\r\n     * The max X coordinate the of the dirty viewport rect.\r\n     *\r\n     * #### Notes\r\n     * The data grid must not draw outside of this boundary.\r\n     */\r\n    xMax: number;\r\n\r\n    /**\r\n     * The max Y coordinate the of the dirty viewport rect.\r\n     *\r\n     * #### Notes\r\n     * The data grid must not draw outside of this boundary.\r\n     */\r\n    yMax: number;\r\n\r\n    /**\r\n     * The X coordinate the of the region, in viewport coordinates.\r\n     *\r\n     * #### Notes\r\n     * This is aligned to the first cell boundary.\r\n     */\r\n    x: number;\r\n\r\n    /**\r\n     * The Y coordinate the of the region, in viewport coordinates.\r\n     *\r\n     * #### Notes\r\n     * This is aligned to the first cell boundary.\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * The total width of the region.\r\n     *\r\n     * #### Notes\r\n     * This is aligned to the cell boundaries.\r\n     */\r\n    width: number;\r\n\r\n    /**\r\n     * The total height of the region.\r\n     *\r\n     * #### Notes\r\n     * This is aligned to the cell boundaries.\r\n     */\r\n    height: number;\r\n\r\n    /**\r\n     * The cell region being painted.\r\n     */\r\n    region: DataModel.CellRegion;\r\n\r\n    /**\r\n     * The row index of the first cell in the region.\r\n     */\r\n    row: number;\r\n\r\n    /**\r\n     * The column index of the first cell in the region.\r\n     */\r\n    column: number;\r\n\r\n    /**\r\n     * The row sizes for the rows in the region.\r\n     */\r\n    rowSizes: number[];\r\n\r\n    /**\r\n     * The column sizes for the columns in the region.\r\n     */\r\n    columnSizes: number[];\r\n  };\r\n\r\n  /**\r\n   * A conflatable message which merges dirty paint regions.\r\n   */\r\n  export\r\n  class PaintRequest extends ConflatableMessage {\r\n    /**\r\n     * Construct a new paint request messages.\r\n     *\r\n     * @param region - The cell region for the paint.\r\n     *\r\n     * @param r1 - The top-left row of the dirty region.\r\n     *\r\n     * @param c1 - The top-left column of the dirty region.\r\n     *\r\n     * @param r2 - The bottom-right row of the dirty region.\r\n     *\r\n     * @param c2 - The bottom-right column of the dirty region.\r\n     */\r\n    constructor(region: DataModel.CellRegion | 'all', r1: number, c1: number, r2: number, c2: number) {\r\n      super('paint-request');\r\n      this._region = region;\r\n      this._r1 = r1;\r\n      this._c1 = c1;\r\n      this._r2 = r2;\r\n      this._c2 = c2;\r\n    }\r\n\r\n    /**\r\n     * The cell region for the paint.\r\n     */\r\n    get region(): DataModel.CellRegion | 'all' {\r\n      return this._region;\r\n    }\r\n\r\n    /**\r\n     * The top-left row of the dirty region.\r\n     */\r\n    get r1(): number {\r\n      return this._r1;\r\n    }\r\n\r\n    /**\r\n     * The top-left column of the dirty region.\r\n     */\r\n    get c1(): number {\r\n      return this._c1;\r\n    }\r\n\r\n    /**\r\n     * The bottom-right row of the dirty region.\r\n     */\r\n    get r2(): number {\r\n      return this._r2;\r\n    }\r\n\r\n    /**\r\n     * The bottom-right column of the dirty region.\r\n     */\r\n    get c2(): number {\r\n      return this._c2;\r\n    }\r\n\r\n    /**\r\n     * Conflate this message with another paint request.\r\n     */\r\n    conflate(other: PaintRequest): boolean {\r\n      // Bail early if the request is already painting everything.\r\n      if (this._region === 'all') {\r\n        return true;\r\n      }\r\n\r\n      // Any region can conflate with the `'all'` region.\r\n      if (other._region === 'all') {\r\n        this._region = 'all';\r\n        return true;\r\n      }\r\n\r\n      // Otherwise, do not conflate with a different region.\r\n      if (this._region !== other._region) {\r\n        return false;\r\n      }\r\n\r\n      // Conflate the region to the total boundary.\r\n      this._r1 = Math.min(this._r1, other._r1);\r\n      this._c1 = Math.min(this._c1, other._c1);\r\n      this._r2 = Math.max(this._r2, other._r2);\r\n      this._c2 = Math.max(this._c2, other._c2);\r\n      return true;\r\n    }\r\n\r\n    private _region: DataModel.CellRegion | 'all';\r\n    private _r1: number;\r\n    private _c1: number;\r\n    private _r2: number;\r\n    private _c2: number;\r\n  }\r\n\r\n  /**\r\n   * A conflatable message for resizing rows.\r\n   */\r\n  export\r\n  class RowResizeRequest extends ConflatableMessage {\r\n    /**\r\n     * Construct a new row resize request.\r\n     *\r\n     * @param region - The row region which holds the section.\r\n     *\r\n     * @param index - The index of row in the region.\r\n     *\r\n     * @param size - The target size of the section.\r\n     */\r\n    constructor(region: DataModel.RowRegion, index: number, size: number) {\r\n      super('row-resize-request');\r\n      this._region = region;\r\n      this._index = index;\r\n      this._size = size;\r\n    }\r\n\r\n    /**\r\n     * The row region which holds the section.\r\n     */\r\n    get region(): DataModel.RowRegion {\r\n      return this._region;\r\n    }\r\n\r\n    /**\r\n     * The index of the row in the region.\r\n     */\r\n    get index(): number {\r\n      return this._index;\r\n    }\r\n\r\n    /**\r\n     * The target size of the section.\r\n     */\r\n    get size(): number {\r\n      return this._size;\r\n    }\r\n\r\n    /**\r\n     * Conflate this message with another row resize request.\r\n     */\r\n    conflate(other: RowResizeRequest): boolean {\r\n      if (this._region !== other._region || this._index !== other._index) {\r\n        return false;\r\n      }\r\n      this._size = other._size;\r\n      return true;\r\n    }\r\n\r\n    private _region: DataModel.RowRegion;\r\n    private _index: number;\r\n    private _size: number;\r\n  }\r\n\r\n  /**\r\n   * A conflatable message for resizing columns.\r\n   */\r\n  export\r\n  class ColumnResizeRequest extends ConflatableMessage {\r\n    /**\r\n     * Construct a new column resize request.\r\n     *\r\n     * @param region - The column region which holds the section.\r\n     *\r\n     * @param index - The index of column in the region.\r\n     *\r\n     * @param size - The target size of the section.\r\n     */\r\n    constructor(region: DataModel.ColumnRegion, index: number, size: number) {\r\n      super('column-resize-request');\r\n      this._region = region;\r\n      this._index = index;\r\n      this._size = size;\r\n    }\r\n\r\n    /**\r\n     * The column region which holds the section.\r\n     */\r\n    get region(): DataModel.ColumnRegion {\r\n      return this._region;\r\n    }\r\n\r\n    /**\r\n     * The index of the column in the region.\r\n     */\r\n    get index(): number {\r\n      return this._index;\r\n    }\r\n\r\n    /**\r\n     * The target size of the section.\r\n     */\r\n    get size(): number {\r\n      return this._size;\r\n    }\r\n\r\n    /**\r\n     * Conflate this message with another column resize request.\r\n     */\r\n    conflate(other: ColumnResizeRequest): boolean {\r\n      if (this._region !== other._region || this._index !== other._index) {\r\n        return false;\r\n      }\r\n      this._size = other._size;\r\n      return true;\r\n    }\r\n\r\n    private _region: DataModel.ColumnRegion;\r\n    private _index: number;\r\n    private _size: number;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  ReadonlyJSONObject\r\n} from '@lumino/coreutils';\r\n\r\nimport {\r\n  DataModel\r\n} from './datamodel';\r\n\r\n\r\n/**\r\n * A data model implementation for in-memory JSON data.\r\n */\r\nexport\r\nclass JSONModel extends DataModel {\r\n  /**\r\n   * Create a data model with static JSON data.\r\n   *\r\n   * @param options - The options for initializing the data model.\r\n   */\r\n  constructor(options: JSONModel.IOptions) {\r\n    super();\r\n    let split = Private.splitFields(options.schema);\r\n    this._data = options.data;\r\n    this._bodyFields = split.bodyFields;\r\n    this._headerFields = split.headerFields;\r\n    this._missingValues = Private.createMissingMap(options.schema);\r\n  }\r\n\r\n  /**\r\n   * Get the row count for a region in the data model.\r\n   *\r\n   * @param region - The row region of interest.\r\n   *\r\n   * @returns - The row count for the region.\r\n   */\r\n  rowCount(region: DataModel.RowRegion): number {\r\n    if (region === 'body') {\r\n      return this._data.length;\r\n    }\r\n    return 1;  // TODO multiple column-header rows?\r\n  }\r\n\r\n  /**\r\n   * Get the column count for a region in the data model.\r\n   *\r\n   * @param region - The column region of interest.\r\n   *\r\n   * @returns - The column count for the region.\r\n   */\r\n  columnCount(region: DataModel.ColumnRegion): number {\r\n    if (region === 'body') {\r\n      return this._bodyFields.length;\r\n    }\r\n    return this._headerFields.length;\r\n  }\r\n\r\n  /**\r\n   * Get the data value for a cell in the data model.\r\n   *\r\n   * @param region - The cell region of interest.\r\n   *\r\n   * @param row - The row index of the cell of interest.\r\n   *\r\n   * @param column - The column index of the cell of interest.\r\n   *\r\n   * @returns - The data value for the specified cell.\r\n   *\r\n   * #### Notes\r\n   * A `missingValue` as defined by the schema is converted to `null`.\r\n   */\r\n  data(region: DataModel.CellRegion, row: number, column: number): any {\r\n    // Set up the field and value variables.\r\n    let field: JSONModel.Field;\r\n    let value: any;\r\n\r\n    // Look up the field and value for the region.\r\n    switch (region) {\r\n    case 'body':\r\n      field = this._bodyFields[column];\r\n      value = this._data[row][field.name];\r\n      break;\r\n    case 'column-header':\r\n      field = this._bodyFields[column];\r\n      value = field.title || field.name;\r\n      break;\r\n    case 'row-header':\r\n      field = this._headerFields[column];\r\n      value = this._data[row][field.name];\r\n      break;\r\n    case 'corner-header':\r\n      field = this._headerFields[column];\r\n      value = field.title || field.name;\r\n      break;\r\n    default:\r\n      throw 'unreachable';\r\n    }\r\n\r\n    // Test whether the value is a missing value.\r\n    let missing = (\r\n      this._missingValues !== null &&\r\n      typeof value === 'string' &&\r\n      this._missingValues[value] === true\r\n    );\r\n\r\n    // Return the final value.\r\n    return missing ? null : value;\r\n  }\r\n\r\n  /**\r\n   * Get the metadata for a cell in the data model.\r\n   *\r\n   * @param region - The cell region of interest.\r\n   *\r\n   * @param row - The row index of the cell of of interest.\r\n   *\r\n   * @param column - The column index of the cell of interest.\r\n   *\r\n   * @returns The metadata for the cell.\r\n   */\r\n  metadata(region: DataModel.CellRegion, row: number, column: number): DataModel.Metadata {\r\n    if (region === 'body' || region === 'column-header') {\r\n      return this._bodyFields[column];\r\n    }\r\n    return this._headerFields[column];\r\n  }\r\n\r\n  private _data: JSONModel.DataSource;\r\n  private _bodyFields: JSONModel.Field[];\r\n  private _headerFields: JSONModel.Field[];\r\n  private _missingValues: Private.MissingValuesMap | null;\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the `JSONModel` class statics.\r\n */\r\nexport\r\nnamespace JSONModel {\r\n  /**\r\n   * An object which describes a column of data in the model.\r\n   *\r\n   * #### Notes\r\n   * This is based on the JSON Table Schema specification:\r\n   * https://specs.frictionlessdata.io/table-schema/\r\n   */\r\n  export\r\n  type Field = {\r\n    /**\r\n     * The name of the column.\r\n     *\r\n     * This is used as the key to extract a value from a data record.\r\n     * It is also used as the column header label, unless the `title`\r\n     * property is provided.\r\n     */\r\n    readonly name: string;\r\n\r\n    /**\r\n     * The type of data held in the column.\r\n     */\r\n    readonly type?: string;\r\n\r\n    /**\r\n     * The format of the data in the column.\r\n     */\r\n    readonly format?: string;\r\n\r\n    /**\r\n     * The human readable name for the column.\r\n     *\r\n     * This is used as the label for the column header.\r\n     */\r\n    readonly title?: string;\r\n\r\n    // TODO want/need support for any these?\r\n    // description?: string;\r\n    // constraints?: IConstraints;\r\n    // rdfType?: string;\r\n  };\r\n\r\n  /**\r\n   * An object when specifies the schema for a data model.\r\n   *\r\n   * #### Notes\r\n   * This is based on the JSON Table Schema specification:\r\n   * https://specs.frictionlessdata.io/table-schema/\r\n   */\r\n  export\r\n  type Schema = {\r\n    /**\r\n     * The fields which describe the data model columns.\r\n     *\r\n     * Primary key fields are rendered as row header columns.\r\n     */\r\n    readonly fields: Field[];\r\n\r\n    /**\r\n     * The values to treat as \"missing\" data.\r\n     *\r\n     * Missing values are automatically converted to `null`.\r\n     */\r\n    readonly missingValues?: string[];\r\n\r\n    /**\r\n     * The field names which act as primary keys.\r\n     *\r\n     * Primary key fields are rendered as row header columns.\r\n     */\r\n    readonly primaryKey?: string | string[];\r\n\r\n    // TODO want/need support for this?\r\n    // foreignKeys?: IForeignKey[];\r\n  };\r\n\r\n  /**\r\n   * A type alias for a data source for a JSON data model.\r\n   *\r\n   * A data source is an array of JSON object records which represent\r\n   * the rows of the table. The keys of the records correspond to the\r\n   * field names of the columns.\r\n   */\r\n  export\r\n  type DataSource = ReadonlyArray<ReadonlyJSONObject>;\r\n\r\n  /**\r\n   * An options object for initializing a JSON data model.\r\n   */\r\n  export\r\n  interface IOptions {\r\n    /**\r\n     * The schema for the for the data model.\r\n     *\r\n     * The schema should be treated as an immutable object.\r\n     */\r\n    schema: Schema;\r\n\r\n    /**\r\n     * The data source for the data model.\r\n     *\r\n     * The data model takes full ownership of the data source.\r\n     */\r\n    data: DataSource;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * An object which holds the results of splitting schema fields.\r\n   */\r\n  export\r\n  type SplitFieldsResult = {\r\n    /**\r\n     * The non-primary key fields to use for the grid body.\r\n     */\r\n    bodyFields: JSONModel.Field[];\r\n\r\n    /**\r\n     * The primary key fields to use for the grid headers.\r\n     */\r\n    headerFields: JSONModel.Field[];\r\n  };\r\n\r\n  /**\r\n   * Split the schema fields into header and body fields.\r\n   */\r\n  export\r\n  function splitFields(schema: JSONModel.Schema): SplitFieldsResult {\r\n    // Normalize the primary keys.\r\n    let primaryKeys: string[];\r\n    if (schema.primaryKey === undefined) {\r\n      primaryKeys = [];\r\n    } else if (typeof schema.primaryKey === 'string') {\r\n      primaryKeys = [schema.primaryKey];\r\n    } else {\r\n      primaryKeys = schema.primaryKey;\r\n    }\r\n\r\n    // Separate the fields for the body and header.\r\n    let bodyFields: JSONModel.Field[] = [];\r\n    let headerFields: JSONModel.Field[] = [];\r\n    for (let field of schema.fields) {\r\n      if (primaryKeys.indexOf(field.name) === -1) {\r\n        bodyFields.push(field);\r\n      } else {\r\n        headerFields.push(field);\r\n      }\r\n    }\r\n\r\n    // Return the separated fields.\r\n    return { bodyFields, headerFields };\r\n  }\r\n\r\n  /**\r\n   * A type alias for a missing value map.\r\n   */\r\n  export\r\n  type MissingValuesMap = { [key: string]: boolean };\r\n\r\n  /**\r\n   * Create a missing values map for a schema.\r\n   *\r\n   * This returns `null` if there are no missing values.\r\n   */\r\n  export\r\n  function createMissingMap(schema: JSONModel.Schema): MissingValuesMap | null {\r\n    // Bail early if there are no missing values.\r\n    if (!schema.missingValues || schema.missingValues.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Collect the missing values into a map.\r\n    let result: MissingValuesMap = Object.create(null);\r\n    for (let value of schema.missingValues) {\r\n      result[value] = true;\r\n    }\r\n\r\n    // Return the populated map.\r\n    return result;\r\n  }\r\n}\r\n"],"names":["getKeyboardLayout","Platform","Private","Drag","Signal","some","iter","CellRenderer","Widget","DataModel","TextRenderer","ArrayExt","ScrollBar","MessageLoop","GridLayout","toArray","ClipboardExt","ElementExt","DataGrid","ConflatableMessage"],"mappings":"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"}